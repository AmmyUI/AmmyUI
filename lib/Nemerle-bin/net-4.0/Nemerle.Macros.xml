<?xml version="1.0"?>
<doc>
  <assembly>
    <name>c:\!\nemerle\bin\Release\net-4.0\Stage4\Nemerle.Macros.xml</name>
  </assembly>
  <members>
    <member name="T:Nemerle.Utility.Accessor_field_postscanMacro">
      <summary>
        <para>Adds property accessor for field.
 By default adds only getter.
 You can specify the following flags:
 WantSetter, Setter, Internal, Protected, Override, Virtual.
 Also you can specify the property name manualy (by default the name
 is generated from the field name).

</para>
      </summary>
    </member>
    <member name="M:Nemerle.Utility.Accessor_field_postscanMacro._N_take_minimum_access_19790(Nemerle.Compiler.NemerleModifiers)" />
    <member name="M:Nemerle.Utility.Accessor_field_postscanMacro._N_parse_opts_19738(Nemerle.Utility.Accessor_field_postscanMacro._N_closureOf_Run_19717,Nemerle.Compiler.Parsetree.PExpr,System.Boolean)" />
    <member name="M:Nemerle.Utility.Accessor_field_postscanMacro.#ctor">
      <summary>
        <para>Adds property accessor for field.
 By default adds only getter.
 You can specify the following flags:
 WantSetter, Setter, Internal, Protected, Override, Virtual.
 Also you can specify the property name manualy (by default the name
 is generated from the field name).

</para>
      </summary>
    </member>
    <member name="F:Nemerle.Utility.Accessor_field_postscanMacro.my_usage" />
    <member name="F:Nemerle.Utility.Accessor_field_postscanMacro.keywords" />
    <member name="M:Nemerle.Utility.Accessor_field_postscanMacro.#cctor" />
    <member name="M:Nemerle.Utility.Accessor_field_postscanMacro.get_Location" />
    <member name="P:Nemerle.Utility.Accessor_field_postscanMacro.Location" />
    <member name="M:Nemerle.Utility.Accessor_field_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.Utility.Accessor_field_postscanMacro.IsInherited" />
    <member name="M:Nemerle.Utility.Accessor_field_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.Utility.Accessor_field_postscanMacro.Keywords" />
    <member name="M:Nemerle.Utility.Accessor_field_postscanMacro.GetName" />
    <member name="M:Nemerle.Utility.Accessor_field_postscanMacro.get_Name" />
    <member name="P:Nemerle.Utility.Accessor_field_postscanMacro.Name" />
    <member name="M:Nemerle.Utility.Accessor_field_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.Utility.Accessor_field_postscanMacro.Namespace" />
    <member name="M:Nemerle.Utility.Accessor_field_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.Utility.Accessor_field_postscanMacro.get_Usage" />
    <member name="P:Nemerle.Utility.Accessor_field_postscanMacro.Usage" />
    <member name="M:Nemerle.Utility.Accessor_field_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Utility.Accessor_field_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Utility.Accessor_field_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Utility.Accessor_field_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Utility.Accessor_field_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.Alias_method_postaddMacro">
      <summary>
        <para>The Alias macro creates aliases for methods with alternative
 names/argument count/argument order. The generated code may be
 a static or non-static method, or a property. The macro tries
 to be "intelligent" in it's choices (which basically means,
 that only reasonable possibilities are taken into account).
 All attribues, except possibly "static", are propagated from
 the aliased method to the generated method/property.

</para> <para>TODO: write code for the two remaining unsupported alias types,
       aliasing properties and fields.
 </para></summary>

 <example>
 <para>Example #1:
 </para><code>
 [Alias (F2, F3 ())]
 public static F1 () : int { System.Random ().Next () }

 // generates the following code:

 public F2 : int { get { System.Random.Next () } }
 public F3 () : int { System.Random.Next () }
 </code>
 </example>
 <example>
 <para>Example #2:
 </para><code>
 [Alias (Hd, Head2 (), Head3 (l))]
 public static Head (l : list ['a]) : 'a
 {
   match (l) {
     | x :: _ =&gt; x
     | [] =&gt; throw System.ArgumentException ("Head called with empty list")
   }
 }

 // generates the following code:

 public Hd : 'a { get { def l = this; match (l) { ... } } }
 public Head2 () : int { def l = this; match (l) { ... } }
 public static Head3 (l) : int { match (l) { ... } }

 // where "..." is the code in matching.
 </code>
 </example>
 <example>
 <para>Example #3:
 </para><code>
 [Alias (Nth (i, l), Lookup (i))]
 public static Nth (xs : RList ['a], i : int) { some_code }

 // generates the following code:

 public static Nth (i : int, xs : RList ['a]) { some_code }
 public Lookup (i : int) { def xs = this; some_code }
 </code>
 </example>
 <example>
 <para>Example #4:
 </para><code>
 [Alias (F1, F2 (), F3 (x))]
 public F () : t { ... }

 // generates the following code:

 public F1 : t { get { ... } }
 public F2 () t { ... }
 public static F3 (x : this) : t { ... } // [x] &lt;-&gt; [this] // NOT SUPPORTED YET
 </code>
 </example>
 <example>
 <para>Example #5:
 </para><code>
 [Alias (F1 (x, y), F2 (x, y, z))]
 public F (x : t1, y : t2) : t3 { ... }

 // generates the following code:

 public F1 (x : t1, y : t2) : t3 { ... }
 public static F2 (x : t1, y : t2, z : this) : t3 { ... } // [z] &lt;-&gt; [this] // NOT SUPPORTED YET
 </code>
 </example>

</member>
    <member name="M:Nemerle.Alias_method_postaddMacro._N_make_non_static_20958(Nemerle.Compiler.NemerleModifiers)" />
    <member name="M:Nemerle.Alias_method_postaddMacro.#ctor">
      <summary>
        <para>The Alias macro creates aliases for methods with alternative
 names/argument count/argument order. The generated code may be
 a static or non-static method, or a property. The macro tries
 to be "intelligent" in it's choices (which basically means,
 that only reasonable possibilities are taken into account).
 All attribues, except possibly "static", are propagated from
 the aliased method to the generated method/property.

</para> <para>TODO: write code for the two remaining unsupported alias types,
       aliasing properties and fields.
 </para></summary>

 <example>
 <para>Example #1:
 </para><code>
 [Alias (F2, F3 ())]
 public static F1 () : int { System.Random ().Next () }

 // generates the following code:

 public F2 : int { get { System.Random.Next () } }
 public F3 () : int { System.Random.Next () }
 </code>
 </example>
 <example>
 <para>Example #2:
 </para><code>
 [Alias (Hd, Head2 (), Head3 (l))]
 public static Head (l : list ['a]) : 'a
 {
   match (l) {
     | x :: _ =&gt; x
     | [] =&gt; throw System.ArgumentException ("Head called with empty list")
   }
 }

 // generates the following code:

 public Hd : 'a { get { def l = this; match (l) { ... } } }
 public Head2 () : int { def l = this; match (l) { ... } }
 public static Head3 (l) : int { match (l) { ... } }

 // where "..." is the code in matching.
 </code>
 </example>
 <example>
 <para>Example #3:
 </para><code>
 [Alias (Nth (i, l), Lookup (i))]
 public static Nth (xs : RList ['a], i : int) { some_code }

 // generates the following code:

 public static Nth (i : int, xs : RList ['a]) { some_code }
 public Lookup (i : int) { def xs = this; some_code }
 </code>
 </example>
 <example>
 <para>Example #4:
 </para><code>
 [Alias (F1, F2 (), F3 (x))]
 public F () : t { ... }

 // generates the following code:

 public F1 : t { get { ... } }
 public F2 () t { ... }
 public static F3 (x : this) : t { ... } // [x] &lt;-&gt; [this] // NOT SUPPORTED YET
 </code>
 </example>
 <example>
 <para>Example #5:
 </para><code>
 [Alias (F1 (x, y), F2 (x, y, z))]
 public F (x : t1, y : t2) : t3 { ... }

 // generates the following code:

 public F1 (x : t1, y : t2) : t3 { ... }
 public static F2 (x : t1, y : t2, z : this) : t3 { ... } // [z] &lt;-&gt; [this] // NOT SUPPORTED YET
 </code>
 </example>

</member>
    <member name="F:Nemerle.Alias_method_postaddMacro.my_usage" />
    <member name="F:Nemerle.Alias_method_postaddMacro.keywords" />
    <member name="M:Nemerle.Alias_method_postaddMacro.#cctor" />
    <member name="M:Nemerle.Alias_method_postaddMacro.get_Location" />
    <member name="P:Nemerle.Alias_method_postaddMacro.Location" />
    <member name="M:Nemerle.Alias_method_postaddMacro.get_IsInherited" />
    <member name="P:Nemerle.Alias_method_postaddMacro.IsInherited" />
    <member name="M:Nemerle.Alias_method_postaddMacro.get_Keywords" />
    <member name="P:Nemerle.Alias_method_postaddMacro.Keywords" />
    <member name="M:Nemerle.Alias_method_postaddMacro.GetName" />
    <member name="M:Nemerle.Alias_method_postaddMacro.get_Name" />
    <member name="P:Nemerle.Alias_method_postaddMacro.Name" />
    <member name="M:Nemerle.Alias_method_postaddMacro.get_Namespace" />
    <member name="P:Nemerle.Alias_method_postaddMacro.Namespace" />
    <member name="M:Nemerle.Alias_method_postaddMacro.GetNamespace" />
    <member name="M:Nemerle.Alias_method_postaddMacro.get_Usage" />
    <member name="P:Nemerle.Alias_method_postaddMacro.Usage" />
    <member name="M:Nemerle.Alias_method_postaddMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Alias_method_postaddMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Alias_method_postaddMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Alias_method_postaddMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Alias_method_postaddMacro.SyntaxExtension" />
    <member name="T:Nemerle.Extensions.AnonymousClassNormalCtorMacro" />
    <member name="M:Nemerle.Extensions.AnonymousClassNormalCtorMacro.#ctor" />
    <member name="F:Nemerle.Extensions.AnonymousClassNormalCtorMacro.my_usage" />
    <member name="F:Nemerle.Extensions.AnonymousClassNormalCtorMacro.keywords" />
    <member name="M:Nemerle.Extensions.AnonymousClassNormalCtorMacro.#cctor" />
    <member name="M:Nemerle.Extensions.AnonymousClassNormalCtorMacro.get_Location" />
    <member name="P:Nemerle.Extensions.AnonymousClassNormalCtorMacro.Location" />
    <member name="M:Nemerle.Extensions.AnonymousClassNormalCtorMacro.get_IsInherited" />
    <member name="P:Nemerle.Extensions.AnonymousClassNormalCtorMacro.IsInherited" />
    <member name="M:Nemerle.Extensions.AnonymousClassNormalCtorMacro.get_Keywords" />
    <member name="P:Nemerle.Extensions.AnonymousClassNormalCtorMacro.Keywords" />
    <member name="M:Nemerle.Extensions.AnonymousClassNormalCtorMacro.GetName" />
    <member name="M:Nemerle.Extensions.AnonymousClassNormalCtorMacro.get_Name" />
    <member name="P:Nemerle.Extensions.AnonymousClassNormalCtorMacro.Name" />
    <member name="M:Nemerle.Extensions.AnonymousClassNormalCtorMacro.get_Namespace" />
    <member name="P:Nemerle.Extensions.AnonymousClassNormalCtorMacro.Namespace" />
    <member name="M:Nemerle.Extensions.AnonymousClassNormalCtorMacro.GetNamespace" />
    <member name="M:Nemerle.Extensions.AnonymousClassNormalCtorMacro.get_Usage" />
    <member name="P:Nemerle.Extensions.AnonymousClassNormalCtorMacro.Usage" />
    <member name="M:Nemerle.Extensions.AnonymousClassNormalCtorMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Extensions.AnonymousClassNormalCtorMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Extensions.AnonymousClassNormalCtorMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Extensions.AnonymousClassNormalCtorMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Extensions.AnonymousClassNormalCtorMacro.SyntaxExtension" />
    <member name="T:Nemerle.Extensions.AnonymousClassTupleCtorMacro" />
    <member name="M:Nemerle.Extensions.AnonymousClassTupleCtorMacro._N_decorate_21315(Nemerle.Extensions.AnonymousClassTupleCtorMacro._N_closureOf_Run_21306,Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="M:Nemerle.Extensions.AnonymousClassTupleCtorMacro.#ctor" />
    <member name="F:Nemerle.Extensions.AnonymousClassTupleCtorMacro.my_usage" />
    <member name="F:Nemerle.Extensions.AnonymousClassTupleCtorMacro.keywords" />
    <member name="M:Nemerle.Extensions.AnonymousClassTupleCtorMacro.#cctor" />
    <member name="M:Nemerle.Extensions.AnonymousClassTupleCtorMacro.get_Location" />
    <member name="P:Nemerle.Extensions.AnonymousClassTupleCtorMacro.Location" />
    <member name="M:Nemerle.Extensions.AnonymousClassTupleCtorMacro.get_IsInherited" />
    <member name="P:Nemerle.Extensions.AnonymousClassTupleCtorMacro.IsInherited" />
    <member name="M:Nemerle.Extensions.AnonymousClassTupleCtorMacro.get_Keywords" />
    <member name="P:Nemerle.Extensions.AnonymousClassTupleCtorMacro.Keywords" />
    <member name="M:Nemerle.Extensions.AnonymousClassTupleCtorMacro.GetName" />
    <member name="M:Nemerle.Extensions.AnonymousClassTupleCtorMacro.get_Name" />
    <member name="P:Nemerle.Extensions.AnonymousClassTupleCtorMacro.Name" />
    <member name="M:Nemerle.Extensions.AnonymousClassTupleCtorMacro.get_Namespace" />
    <member name="P:Nemerle.Extensions.AnonymousClassTupleCtorMacro.Namespace" />
    <member name="M:Nemerle.Extensions.AnonymousClassTupleCtorMacro.GetNamespace" />
    <member name="M:Nemerle.Extensions.AnonymousClassTupleCtorMacro.get_Usage" />
    <member name="P:Nemerle.Extensions.AnonymousClassTupleCtorMacro.Usage" />
    <member name="M:Nemerle.Extensions.AnonymousClassTupleCtorMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Extensions.AnonymousClassTupleCtorMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Extensions.AnonymousClassTupleCtorMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Extensions.AnonymousClassTupleCtorMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Extensions.AnonymousClassTupleCtorMacro.SyntaxExtension" />
    <member name="T:Nemerle.Extensions._N_operator_293769306_4221Macro">
      <summary>
        <para>This macros fixes Mono compilation since Mono puts macros in the reverse order.
 </para>
      </summary>

</member>
    <member name="M:Nemerle.Extensions._N_operator_293769306_4221Macro.#ctor" />
    <member name="F:Nemerle.Extensions._N_operator_293769306_4221Macro.my_usage" />
    <member name="F:Nemerle.Extensions._N_operator_293769306_4221Macro.keywords" />
    <member name="M:Nemerle.Extensions._N_operator_293769306_4221Macro.#cctor" />
    <member name="M:Nemerle.Extensions._N_operator_293769306_4221Macro.get_Location" />
    <member name="P:Nemerle.Extensions._N_operator_293769306_4221Macro.Location" />
    <member name="M:Nemerle.Extensions._N_operator_293769306_4221Macro.get_IsInherited" />
    <member name="P:Nemerle.Extensions._N_operator_293769306_4221Macro.IsInherited" />
    <member name="M:Nemerle.Extensions._N_operator_293769306_4221Macro.get_Keywords" />
    <member name="P:Nemerle.Extensions._N_operator_293769306_4221Macro.Keywords" />
    <member name="M:Nemerle.Extensions._N_operator_293769306_4221Macro.GetName" />
    <member name="M:Nemerle.Extensions._N_operator_293769306_4221Macro.get_Name" />
    <member name="P:Nemerle.Extensions._N_operator_293769306_4221Macro.Name" />
    <member name="M:Nemerle.Extensions._N_operator_293769306_4221Macro.get_Namespace" />
    <member name="P:Nemerle.Extensions._N_operator_293769306_4221Macro.Namespace" />
    <member name="M:Nemerle.Extensions._N_operator_293769306_4221Macro.GetNamespace" />
    <member name="M:Nemerle.Extensions._N_operator_293769306_4221Macro.get_Usage" />
    <member name="P:Nemerle.Extensions._N_operator_293769306_4221Macro.Usage" />
    <member name="M:Nemerle.Extensions._N_operator_293769306_4221Macro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Extensions._N_operator_293769306_4221Macro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Extensions._N_operator_293769306_4221Macro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Extensions._N_operator_293769306_4221Macro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Extensions._N_operator_293769306_4221Macro.SyntaxExtension" />
    <member name="T:Nemerle.Extensions.AnonymousClassOptions_assembly_postscanMacro" />
    <member name="M:Nemerle.Extensions.AnonymousClassOptions_assembly_postscanMacro._N_set_visibility_21511(Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="M:Nemerle.Extensions.AnonymousClassOptions_assembly_postscanMacro.#ctor" />
    <member name="F:Nemerle.Extensions.AnonymousClassOptions_assembly_postscanMacro.my_usage" />
    <member name="F:Nemerle.Extensions.AnonymousClassOptions_assembly_postscanMacro.keywords" />
    <member name="M:Nemerle.Extensions.AnonymousClassOptions_assembly_postscanMacro.#cctor" />
    <member name="M:Nemerle.Extensions.AnonymousClassOptions_assembly_postscanMacro.get_Location" />
    <member name="P:Nemerle.Extensions.AnonymousClassOptions_assembly_postscanMacro.Location" />
    <member name="M:Nemerle.Extensions.AnonymousClassOptions_assembly_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.Extensions.AnonymousClassOptions_assembly_postscanMacro.IsInherited" />
    <member name="M:Nemerle.Extensions.AnonymousClassOptions_assembly_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.Extensions.AnonymousClassOptions_assembly_postscanMacro.Keywords" />
    <member name="M:Nemerle.Extensions.AnonymousClassOptions_assembly_postscanMacro.GetName" />
    <member name="M:Nemerle.Extensions.AnonymousClassOptions_assembly_postscanMacro.get_Name" />
    <member name="P:Nemerle.Extensions.AnonymousClassOptions_assembly_postscanMacro.Name" />
    <member name="M:Nemerle.Extensions.AnonymousClassOptions_assembly_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.Extensions.AnonymousClassOptions_assembly_postscanMacro.Namespace" />
    <member name="M:Nemerle.Extensions.AnonymousClassOptions_assembly_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.Extensions.AnonymousClassOptions_assembly_postscanMacro.get_Usage" />
    <member name="P:Nemerle.Extensions.AnonymousClassOptions_assembly_postscanMacro.Usage" />
    <member name="M:Nemerle.Extensions.AnonymousClassOptions_assembly_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Extensions.AnonymousClassOptions_assembly_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Extensions.AnonymousClassOptions_assembly_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Extensions.AnonymousClassOptions_assembly_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Extensions.AnonymousClassOptions_assembly_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.Extensions.AnonymousClassImpl" />
    <member name="M:Nemerle.Extensions.AnonymousClassImpl._N_define_eq_b_22450(Nemerle.Extensions.AnonymousClassImpl._N_closureOf_BuildClass_22288,Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="M:Nemerle.Extensions.AnonymousClassImpl._N_define_eq_22443(Nemerle.Extensions.AnonymousClassImpl._N_closureOf_BuildClass_22288,Nemerle.Compiler.Parsetree.PExpr,Nemerle.Compiler.Parsetree.PExpr,Nemerle.Compiler.Parsetree.PExpr.Call)" />
    <member name="M:Nemerle.Extensions.AnonymousClassImpl._N_can_be_tuple_22371(Nemerle.Core.list{Nemerle.Extensions.AnonymousClassImpl.FieldInfo})" />
    <member name="M:Nemerle.Extensions.AnonymousClassImpl._N_equality_comparer_22310(Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="M:Nemerle.Extensions.AnonymousClassImpl._N_append_field_info_21648(Nemerle.Extensions.AnonymousClassImpl._N_closureOf__N_lambda__21608_21638,Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="M:Nemerle.Extensions.AnonymousClassImpl._N_append_field_info_21579(Nemerle.Extensions.AnonymousClassImpl._N_closureOf__N_lambda__21535_21569,Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="M:Nemerle.Extensions.AnonymousClassImpl.#cctor" />
    <member name="F:Nemerle.Extensions.AnonymousClassImpl.AnonymousClassNamespace" />
    <member name="M:Nemerle.Extensions.AnonymousClassImpl.MakeNormalCtor(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Extensions.AnonymousClassImpl.MakeTupleCtor(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr},Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="F:Nemerle.Extensions.AnonymousClassImpl._N_field_key_embeded_in_VisibilityAttribute_4017" />
    <member name="M:Nemerle.Extensions.AnonymousClassImpl.get_VisibilityAttribute" />
    <member name="M:Nemerle.Extensions.AnonymousClassImpl.set_VisibilityAttribute(Nemerle.Compiler.NemerleModifiers)" />
    <member name="P:Nemerle.Extensions.AnonymousClassImpl.VisibilityAttribute" />
    <member name="F:Nemerle.Extensions.AnonymousClassImpl._N_field_key_embeded_in_ClassTable_4018" />
    <member name="M:Nemerle.Extensions.AnonymousClassImpl.get_ClassTable" />
    <member name="P:Nemerle.Extensions.AnonymousClassImpl.ClassTable" />
    <member name="F:Nemerle.Extensions.AnonymousClassImpl.unique_name_seed" />
    <member name="M:Nemerle.Extensions.AnonymousClassImpl.FindOrBuildClass(Nemerle.Core.list{Nemerle.Extensions.AnonymousClassImpl.FieldInfo})" />
    <member name="F:Nemerle.Extensions.AnonymousClassImpl.MIN_TUPLE_SIZE" />
    <member name="F:Nemerle.Extensions.AnonymousClassImpl.MAX_TUPLE_SIZE" />
    <member name="M:Nemerle.Extensions.AnonymousClassImpl.BuildClass(System.String,System.String,Nemerle.Core.list{Nemerle.Extensions.AnonymousClassImpl.FieldInfo})" />
    <member name="M:Nemerle.Extensions.AnonymousClassImpl.get_Manager" />
    <member name="P:Nemerle.Extensions.AnonymousClassImpl.Manager" />
    <member name="M:Nemerle.Extensions.AnonymousClassImpl.get_InternalType" />
    <member name="P:Nemerle.Extensions.AnonymousClassImpl.InternalType" />
    <member name="M:Nemerle.Extensions.AnonymousClassImpl.get_SystemTypeCache" />
    <member name="P:Nemerle.Extensions.AnonymousClassImpl.SystemTypeCache" />
    <member name="M:Nemerle.Extensions.AnonymousClassImpl.__fake" />
    <member name="T:Nemerle.Extensions.AnonymousClassImpl.FieldInfo" />
    <member name="T:Nemerle.Utility.AssemblyVersionFromSVN_assembly_postscanMacro" />
    <member name="M:Nemerle.Utility.AssemblyVersionFromSVN_assembly_postscanMacro.#ctor" />
    <member name="F:Nemerle.Utility.AssemblyVersionFromSVN_assembly_postscanMacro.my_usage" />
    <member name="F:Nemerle.Utility.AssemblyVersionFromSVN_assembly_postscanMacro.keywords" />
    <member name="M:Nemerle.Utility.AssemblyVersionFromSVN_assembly_postscanMacro.#cctor" />
    <member name="M:Nemerle.Utility.AssemblyVersionFromSVN_assembly_postscanMacro.get_Location" />
    <member name="P:Nemerle.Utility.AssemblyVersionFromSVN_assembly_postscanMacro.Location" />
    <member name="M:Nemerle.Utility.AssemblyVersionFromSVN_assembly_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.Utility.AssemblyVersionFromSVN_assembly_postscanMacro.IsInherited" />
    <member name="M:Nemerle.Utility.AssemblyVersionFromSVN_assembly_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.Utility.AssemblyVersionFromSVN_assembly_postscanMacro.Keywords" />
    <member name="M:Nemerle.Utility.AssemblyVersionFromSVN_assembly_postscanMacro.GetName" />
    <member name="M:Nemerle.Utility.AssemblyVersionFromSVN_assembly_postscanMacro.get_Name" />
    <member name="P:Nemerle.Utility.AssemblyVersionFromSVN_assembly_postscanMacro.Name" />
    <member name="M:Nemerle.Utility.AssemblyVersionFromSVN_assembly_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.Utility.AssemblyVersionFromSVN_assembly_postscanMacro.Namespace" />
    <member name="M:Nemerle.Utility.AssemblyVersionFromSVN_assembly_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.Utility.AssemblyVersionFromSVN_assembly_postscanMacro.get_Usage" />
    <member name="P:Nemerle.Utility.AssemblyVersionFromSVN_assembly_postscanMacro.Usage" />
    <member name="M:Nemerle.Utility.AssemblyVersionFromSVN_assembly_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Utility.AssemblyVersionFromSVN_assembly_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Utility.AssemblyVersionFromSVN_assembly_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Utility.AssemblyVersionFromSVN_assembly_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Utility.AssemblyVersionFromSVN_assembly_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.Utility.SVNRevisionHelper">
      <summary>
        <para>based on svn://rsdn.ru/Janus/trunk/SvnRevision

</para>
      </summary>
    </member>
    <member name="F:Nemerle.Utility.SVNRevisionHelper.SVN_DIRECTORY_NAME_COMMON" />
    <member name="F:Nemerle.Utility.SVNRevisionHelper.SVN_DIRECTORY_NAME_ALT" />
    <member name="F:Nemerle.Utility.SVNRevisionHelper.SVN_ENTRIES_FILE_NAME" />
    <member name="M:Nemerle.Utility.SVNRevisionHelper.FindRevision(System.String)" />
    <member name="M:Nemerle.Utility.SVNRevisionHelper.GetRevisionDetectFormat(System.String)" />
    <member name="M:Nemerle.Utility.SVNRevisionHelper.GetRevisionVer8(System.IO.StreamReader)" />
    <member name="M:Nemerle.Utility.SVNRevisionHelper.GetRevisionGeneric(System.String)" />
    <member name="T:Nemerle.Core.DebugPrintMacro" />
    <member name="M:Nemerle.Core.DebugPrintMacro.#ctor" />
    <member name="F:Nemerle.Core.DebugPrintMacro.my_usage" />
    <member name="F:Nemerle.Core.DebugPrintMacro.keywords" />
    <member name="M:Nemerle.Core.DebugPrintMacro.#cctor" />
    <member name="M:Nemerle.Core.DebugPrintMacro.get_Location" />
    <member name="P:Nemerle.Core.DebugPrintMacro.Location" />
    <member name="M:Nemerle.Core.DebugPrintMacro.get_IsInherited" />
    <member name="P:Nemerle.Core.DebugPrintMacro.IsInherited" />
    <member name="M:Nemerle.Core.DebugPrintMacro.get_Keywords" />
    <member name="P:Nemerle.Core.DebugPrintMacro.Keywords" />
    <member name="M:Nemerle.Core.DebugPrintMacro.GetName" />
    <member name="M:Nemerle.Core.DebugPrintMacro.get_Name" />
    <member name="P:Nemerle.Core.DebugPrintMacro.Name" />
    <member name="M:Nemerle.Core.DebugPrintMacro.get_Namespace" />
    <member name="P:Nemerle.Core.DebugPrintMacro.Namespace" />
    <member name="M:Nemerle.Core.DebugPrintMacro.GetNamespace" />
    <member name="M:Nemerle.Core.DebugPrintMacro.get_Usage" />
    <member name="P:Nemerle.Core.DebugPrintMacro.Usage" />
    <member name="M:Nemerle.Core.DebugPrintMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core.DebugPrintMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core.DebugPrintMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core.DebugPrintMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core.DebugPrintMacro.SyntaxExtension" />
    <member name="T:Nemerle.Core.assertMacro" />
    <member name="M:Nemerle.Core.assertMacro.#ctor" />
    <member name="F:Nemerle.Core.assertMacro.my_usage" />
    <member name="F:Nemerle.Core.assertMacro.keywords" />
    <member name="M:Nemerle.Core.assertMacro.#cctor" />
    <member name="M:Nemerle.Core.assertMacro.get_Location" />
    <member name="P:Nemerle.Core.assertMacro.Location" />
    <member name="M:Nemerle.Core.assertMacro.get_IsInherited" />
    <member name="P:Nemerle.Core.assertMacro.IsInherited" />
    <member name="M:Nemerle.Core.assertMacro.get_Keywords" />
    <member name="P:Nemerle.Core.assertMacro.Keywords" />
    <member name="M:Nemerle.Core.assertMacro.GetName" />
    <member name="M:Nemerle.Core.assertMacro.get_Name" />
    <member name="P:Nemerle.Core.assertMacro.Name" />
    <member name="M:Nemerle.Core.assertMacro.get_Namespace" />
    <member name="P:Nemerle.Core.assertMacro.Namespace" />
    <member name="M:Nemerle.Core.assertMacro.GetNamespace" />
    <member name="M:Nemerle.Core.assertMacro.get_Usage" />
    <member name="P:Nemerle.Core.assertMacro.Usage" />
    <member name="M:Nemerle.Core.assertMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core.assertMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core.assertMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core.assertMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core.assertMacro.SyntaxExtension" />
    <member name="T:Nemerle.Core._N_operator67864986_4230Macro">
      <summary>
        <para>Checks for a condition; if the condition is false, outputs a specified message and displays a message
 box that shows the call stack. The message include code of condition.</para>
      </summary>
 <param name="condition"><para>The conditional expression to evaluate. If the condition is true, the specified message is not sent and the message box is not displayed.</para></param>
 <param name="message"><para>The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners"></see> collection.</para></param>
 <remarks><para><remark>Used System.Diagnostics.Debug.Assert() to display message</remark>

</para></remarks></member>
    <member name="M:Nemerle.Core._N_operator67864986_4230Macro.#ctor" />
    <member name="F:Nemerle.Core._N_operator67864986_4230Macro.my_usage" />
    <member name="F:Nemerle.Core._N_operator67864986_4230Macro.keywords" />
    <member name="M:Nemerle.Core._N_operator67864986_4230Macro.#cctor" />
    <member name="M:Nemerle.Core._N_operator67864986_4230Macro.get_Location" />
    <member name="P:Nemerle.Core._N_operator67864986_4230Macro.Location" />
    <member name="M:Nemerle.Core._N_operator67864986_4230Macro.get_IsInherited" />
    <member name="P:Nemerle.Core._N_operator67864986_4230Macro.IsInherited" />
    <member name="M:Nemerle.Core._N_operator67864986_4230Macro.get_Keywords" />
    <member name="P:Nemerle.Core._N_operator67864986_4230Macro.Keywords" />
    <member name="M:Nemerle.Core._N_operator67864986_4230Macro.GetName" />
    <member name="M:Nemerle.Core._N_operator67864986_4230Macro.get_Name" />
    <member name="P:Nemerle.Core._N_operator67864986_4230Macro.Name" />
    <member name="M:Nemerle.Core._N_operator67864986_4230Macro.get_Namespace" />
    <member name="P:Nemerle.Core._N_operator67864986_4230Macro.Namespace" />
    <member name="M:Nemerle.Core._N_operator67864986_4230Macro.GetNamespace" />
    <member name="M:Nemerle.Core._N_operator67864986_4230Macro.get_Usage" />
    <member name="P:Nemerle.Core._N_operator67864986_4230Macro.Usage" />
    <member name="M:Nemerle.Core._N_operator67864986_4230Macro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core._N_operator67864986_4230Macro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core._N_operator67864986_4230Macro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core._N_operator67864986_4230Macro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core._N_operator67864986_4230Macro.SyntaxExtension" />
    <member name="T:Nemerle.Core._N_operator67864985_4232Macro" />
    <member name="M:Nemerle.Core._N_operator67864985_4232Macro.#ctor" />
    <member name="F:Nemerle.Core._N_operator67864985_4232Macro.my_usage" />
    <member name="F:Nemerle.Core._N_operator67864985_4232Macro.keywords" />
    <member name="M:Nemerle.Core._N_operator67864985_4232Macro.#cctor" />
    <member name="M:Nemerle.Core._N_operator67864985_4232Macro.get_Location" />
    <member name="P:Nemerle.Core._N_operator67864985_4232Macro.Location" />
    <member name="M:Nemerle.Core._N_operator67864985_4232Macro.get_IsInherited" />
    <member name="P:Nemerle.Core._N_operator67864985_4232Macro.IsInherited" />
    <member name="M:Nemerle.Core._N_operator67864985_4232Macro.get_Keywords" />
    <member name="P:Nemerle.Core._N_operator67864985_4232Macro.Keywords" />
    <member name="M:Nemerle.Core._N_operator67864985_4232Macro.GetName" />
    <member name="M:Nemerle.Core._N_operator67864985_4232Macro.get_Name" />
    <member name="P:Nemerle.Core._N_operator67864985_4232Macro.Name" />
    <member name="M:Nemerle.Core._N_operator67864985_4232Macro.get_Namespace" />
    <member name="P:Nemerle.Core._N_operator67864985_4232Macro.Namespace" />
    <member name="M:Nemerle.Core._N_operator67864985_4232Macro.GetNamespace" />
    <member name="M:Nemerle.Core._N_operator67864985_4232Macro.get_Usage" />
    <member name="P:Nemerle.Core._N_operator67864985_4232Macro.Usage" />
    <member name="M:Nemerle.Core._N_operator67864985_4232Macro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core._N_operator67864985_4232Macro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core._N_operator67864985_4232Macro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core._N_operator67864985_4232Macro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core._N_operator67864985_4232Macro.SyntaxExtension" />
    <member name="T:Nemerle.Core.AssertionUtils" />
    <member name="M:Nemerle.Core.AssertionUtils.PrepareMessage(Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="T:Nemerle.Assertions.NotNull_param_postaddMacro">
      <summary>
        <para>Enforces that given parameter is not a null value.

</para>
      </summary>    <remarks><para>Performs runtime check at every call to enclosing method.

</para>    <para>Example: Foo([NotNull] o : object) : void { ... }

</para></remarks></member>
    <member name="M:Nemerle.Assertions.NotNull_param_postaddMacro.#ctor" />
    <member name="F:Nemerle.Assertions.NotNull_param_postaddMacro.my_usage" />
    <member name="F:Nemerle.Assertions.NotNull_param_postaddMacro.keywords" />
    <member name="M:Nemerle.Assertions.NotNull_param_postaddMacro.#cctor" />
    <member name="M:Nemerle.Assertions.NotNull_param_postaddMacro.get_Location" />
    <member name="P:Nemerle.Assertions.NotNull_param_postaddMacro.Location" />
    <member name="M:Nemerle.Assertions.NotNull_param_postaddMacro.get_IsInherited" />
    <member name="P:Nemerle.Assertions.NotNull_param_postaddMacro.IsInherited" />
    <member name="M:Nemerle.Assertions.NotNull_param_postaddMacro.get_Keywords" />
    <member name="P:Nemerle.Assertions.NotNull_param_postaddMacro.Keywords" />
    <member name="M:Nemerle.Assertions.NotNull_param_postaddMacro.GetName" />
    <member name="M:Nemerle.Assertions.NotNull_param_postaddMacro.get_Name" />
    <member name="P:Nemerle.Assertions.NotNull_param_postaddMacro.Name" />
    <member name="M:Nemerle.Assertions.NotNull_param_postaddMacro.get_Namespace" />
    <member name="P:Nemerle.Assertions.NotNull_param_postaddMacro.Namespace" />
    <member name="M:Nemerle.Assertions.NotNull_param_postaddMacro.GetNamespace" />
    <member name="M:Nemerle.Assertions.NotNull_param_postaddMacro.get_Usage" />
    <member name="P:Nemerle.Assertions.NotNull_param_postaddMacro.Usage" />
    <member name="M:Nemerle.Assertions.NotNull_param_postaddMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Assertions.NotNull_param_postaddMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Assertions.NotNull_param_postaddMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Assertions.NotNull_param_postaddMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Assertions.NotNull_param_postaddMacro.SyntaxExtension" />
    <member name="T:Nemerle.Assertions.NotNullOrEmpty_param_postaddMacro">
      <summary>
        <para>Enforces that given string parameter is not a null and not an empty value.

</para>
      </summary>    <remarks><para>Performs runtime check at every call to enclosing method.

</para>    <para>Example: Foo([NotNullOrEmpty] s : string) : void { ... }

</para></remarks></member>
    <member name="M:Nemerle.Assertions.NotNullOrEmpty_param_postaddMacro.#ctor" />
    <member name="F:Nemerle.Assertions.NotNullOrEmpty_param_postaddMacro.my_usage" />
    <member name="F:Nemerle.Assertions.NotNullOrEmpty_param_postaddMacro.keywords" />
    <member name="M:Nemerle.Assertions.NotNullOrEmpty_param_postaddMacro.#cctor" />
    <member name="M:Nemerle.Assertions.NotNullOrEmpty_param_postaddMacro.get_Location" />
    <member name="P:Nemerle.Assertions.NotNullOrEmpty_param_postaddMacro.Location" />
    <member name="M:Nemerle.Assertions.NotNullOrEmpty_param_postaddMacro.get_IsInherited" />
    <member name="P:Nemerle.Assertions.NotNullOrEmpty_param_postaddMacro.IsInherited" />
    <member name="M:Nemerle.Assertions.NotNullOrEmpty_param_postaddMacro.get_Keywords" />
    <member name="P:Nemerle.Assertions.NotNullOrEmpty_param_postaddMacro.Keywords" />
    <member name="M:Nemerle.Assertions.NotNullOrEmpty_param_postaddMacro.GetName" />
    <member name="M:Nemerle.Assertions.NotNullOrEmpty_param_postaddMacro.get_Name" />
    <member name="P:Nemerle.Assertions.NotNullOrEmpty_param_postaddMacro.Name" />
    <member name="M:Nemerle.Assertions.NotNullOrEmpty_param_postaddMacro.get_Namespace" />
    <member name="P:Nemerle.Assertions.NotNullOrEmpty_param_postaddMacro.Namespace" />
    <member name="M:Nemerle.Assertions.NotNullOrEmpty_param_postaddMacro.GetNamespace" />
    <member name="M:Nemerle.Assertions.NotNullOrEmpty_param_postaddMacro.get_Usage" />
    <member name="P:Nemerle.Assertions.NotNullOrEmpty_param_postaddMacro.Usage" />
    <member name="M:Nemerle.Assertions.NotNullOrEmpty_param_postaddMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Assertions.NotNullOrEmpty_param_postaddMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Assertions.NotNullOrEmpty_param_postaddMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Assertions.NotNullOrEmpty_param_postaddMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Assertions.NotNullOrEmpty_param_postaddMacro.SyntaxExtension" />
    <member name="T:Nemerle.Assertions.Requires_param_postscanMacro">
      <summary>
        <para>Example: foo ([Requires (value != 4)] i : int) : void { ... }

</para>
      </summary>
    </member>
    <member name="M:Nemerle.Assertions.Requires_param_postscanMacro.#ctor" />
    <member name="F:Nemerle.Assertions.Requires_param_postscanMacro.my_usage" />
    <member name="F:Nemerle.Assertions.Requires_param_postscanMacro.keywords" />
    <member name="M:Nemerle.Assertions.Requires_param_postscanMacro.#cctor" />
    <member name="M:Nemerle.Assertions.Requires_param_postscanMacro.get_Location" />
    <member name="P:Nemerle.Assertions.Requires_param_postscanMacro.Location" />
    <member name="M:Nemerle.Assertions.Requires_param_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.Assertions.Requires_param_postscanMacro.IsInherited" />
    <member name="M:Nemerle.Assertions.Requires_param_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.Assertions.Requires_param_postscanMacro.Keywords" />
    <member name="M:Nemerle.Assertions.Requires_param_postscanMacro.GetName" />
    <member name="M:Nemerle.Assertions.Requires_param_postscanMacro.get_Name" />
    <member name="P:Nemerle.Assertions.Requires_param_postscanMacro.Name" />
    <member name="M:Nemerle.Assertions.Requires_param_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.Assertions.Requires_param_postscanMacro.Namespace" />
    <member name="M:Nemerle.Assertions.Requires_param_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.Assertions.Requires_param_postscanMacro.get_Usage" />
    <member name="P:Nemerle.Assertions.Requires_param_postscanMacro.Usage" />
    <member name="M:Nemerle.Assertions.Requires_param_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Assertions.Requires_param_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Assertions.Requires_param_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Assertions.Requires_param_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Assertions.Requires_param_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.Assertions.Requires_method_postscanMacro">
      <summary>
        <para>Enforces given boolean condition at method invocation beginning.

</para>
      </summary>      <remarks><para>It checks at runtime, that given condition is true at the beginning
      of each method invocation. The `otherwise' section allows to specify
      what should happen when condition is false (for example throw some
      exception).

</para>     <para>Example:   [Requires (i != 4 &amp;&amp; boo ())]
                foo (i : int) : void
                { ... }
             or
                foo (i : int) : void
                 requires i &gt; 0
                { ... }

</para>             <para>after opening Nemerle.Assertions namespace

</para></remarks></member>
    <member name="M:Nemerle.Assertions.Requires_method_postscanMacro.#ctor" />
    <member name="F:Nemerle.Assertions.Requires_method_postscanMacro.my_usage" />
    <member name="F:Nemerle.Assertions.Requires_method_postscanMacro.keywords" />
    <member name="M:Nemerle.Assertions.Requires_method_postscanMacro.#cctor" />
    <member name="M:Nemerle.Assertions.Requires_method_postscanMacro.get_Location" />
    <member name="P:Nemerle.Assertions.Requires_method_postscanMacro.Location" />
    <member name="M:Nemerle.Assertions.Requires_method_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.Assertions.Requires_method_postscanMacro.IsInherited" />
    <member name="M:Nemerle.Assertions.Requires_method_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.Assertions.Requires_method_postscanMacro.Keywords" />
    <member name="M:Nemerle.Assertions.Requires_method_postscanMacro.GetName" />
    <member name="M:Nemerle.Assertions.Requires_method_postscanMacro.get_Name" />
    <member name="P:Nemerle.Assertions.Requires_method_postscanMacro.Name" />
    <member name="M:Nemerle.Assertions.Requires_method_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.Assertions.Requires_method_postscanMacro.Namespace" />
    <member name="M:Nemerle.Assertions.Requires_method_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.Assertions.Requires_method_postscanMacro.get_Usage" />
    <member name="P:Nemerle.Assertions.Requires_method_postscanMacro.Usage" />
    <member name="M:Nemerle.Assertions.Requires_method_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Assertions.Requires_method_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Assertions.Requires_method_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Assertions.Requires_method_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Assertions.Requires_method_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.Assertions.Ensures_method_postaddMacro">
      <summary>
        <para>Enforces given boolean condition at the end of method invocation.

</para>
      </summary>      <remarks><para>It checks at runtime, that given condition is true at the end
      of each method invocation. The `otherwise' section allows to specify
      what should happen when condition is false (for example throw some
      exception).

</para>     <para>Example:  [Ensures (foo () != 4)]
            foo (i : int) : int { ... }
          or
            foo (i : int) : int
             ensures value &gt; 0
            { ... }

</para>          <para>after opening Nemerle.Assertions namespace

</para></remarks></member>
    <member name="M:Nemerle.Assertions.Ensures_method_postaddMacro.#ctor" />
    <member name="F:Nemerle.Assertions.Ensures_method_postaddMacro.my_usage" />
    <member name="F:Nemerle.Assertions.Ensures_method_postaddMacro.keywords" />
    <member name="M:Nemerle.Assertions.Ensures_method_postaddMacro.#cctor" />
    <member name="M:Nemerle.Assertions.Ensures_method_postaddMacro.get_Location" />
    <member name="P:Nemerle.Assertions.Ensures_method_postaddMacro.Location" />
    <member name="M:Nemerle.Assertions.Ensures_method_postaddMacro.get_IsInherited" />
    <member name="P:Nemerle.Assertions.Ensures_method_postaddMacro.IsInherited" />
    <member name="M:Nemerle.Assertions.Ensures_method_postaddMacro.get_Keywords" />
    <member name="P:Nemerle.Assertions.Ensures_method_postaddMacro.Keywords" />
    <member name="M:Nemerle.Assertions.Ensures_method_postaddMacro.GetName" />
    <member name="M:Nemerle.Assertions.Ensures_method_postaddMacro.get_Name" />
    <member name="P:Nemerle.Assertions.Ensures_method_postaddMacro.Name" />
    <member name="M:Nemerle.Assertions.Ensures_method_postaddMacro.get_Namespace" />
    <member name="P:Nemerle.Assertions.Ensures_method_postaddMacro.Namespace" />
    <member name="M:Nemerle.Assertions.Ensures_method_postaddMacro.GetNamespace" />
    <member name="M:Nemerle.Assertions.Ensures_method_postaddMacro.get_Usage" />
    <member name="P:Nemerle.Assertions.Ensures_method_postaddMacro.Usage" />
    <member name="M:Nemerle.Assertions.Ensures_method_postaddMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Assertions.Ensures_method_postaddMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Assertions.Ensures_method_postaddMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Assertions.Ensures_method_postaddMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Assertions.Ensures_method_postaddMacro.SyntaxExtension" />
    <member name="T:Nemerle.Assertions.Invariant_type_postaddMacro" />
    <member name="M:Nemerle.Assertions.Invariant_type_postaddMacro.#ctor" />
    <member name="F:Nemerle.Assertions.Invariant_type_postaddMacro.my_usage" />
    <member name="F:Nemerle.Assertions.Invariant_type_postaddMacro.keywords" />
    <member name="M:Nemerle.Assertions.Invariant_type_postaddMacro.#cctor" />
    <member name="M:Nemerle.Assertions.Invariant_type_postaddMacro.get_Location" />
    <member name="P:Nemerle.Assertions.Invariant_type_postaddMacro.Location" />
    <member name="M:Nemerle.Assertions.Invariant_type_postaddMacro.get_IsInherited" />
    <member name="P:Nemerle.Assertions.Invariant_type_postaddMacro.IsInherited" />
    <member name="M:Nemerle.Assertions.Invariant_type_postaddMacro.get_Keywords" />
    <member name="P:Nemerle.Assertions.Invariant_type_postaddMacro.Keywords" />
    <member name="M:Nemerle.Assertions.Invariant_type_postaddMacro.GetName" />
    <member name="M:Nemerle.Assertions.Invariant_type_postaddMacro.get_Name" />
    <member name="P:Nemerle.Assertions.Invariant_type_postaddMacro.Name" />
    <member name="M:Nemerle.Assertions.Invariant_type_postaddMacro.get_Namespace" />
    <member name="P:Nemerle.Assertions.Invariant_type_postaddMacro.Namespace" />
    <member name="M:Nemerle.Assertions.Invariant_type_postaddMacro.GetNamespace" />
    <member name="M:Nemerle.Assertions.Invariant_type_postaddMacro.get_Usage" />
    <member name="P:Nemerle.Assertions.Invariant_type_postaddMacro.Usage" />
    <member name="M:Nemerle.Assertions.Invariant_type_postaddMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Assertions.Invariant_type_postaddMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Assertions.Invariant_type_postaddMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Assertions.Invariant_type_postaddMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Assertions.Invariant_type_postaddMacro.SyntaxExtension" />
    <member name="T:Nemerle.Assertions.InvariantExposeMacro" />
    <member name="M:Nemerle.Assertions.InvariantExposeMacro.#ctor" />
    <member name="F:Nemerle.Assertions.InvariantExposeMacro.my_usage" />
    <member name="F:Nemerle.Assertions.InvariantExposeMacro.keywords" />
    <member name="M:Nemerle.Assertions.InvariantExposeMacro.#cctor" />
    <member name="M:Nemerle.Assertions.InvariantExposeMacro.get_Location" />
    <member name="P:Nemerle.Assertions.InvariantExposeMacro.Location" />
    <member name="M:Nemerle.Assertions.InvariantExposeMacro.get_IsInherited" />
    <member name="P:Nemerle.Assertions.InvariantExposeMacro.IsInherited" />
    <member name="M:Nemerle.Assertions.InvariantExposeMacro.get_Keywords" />
    <member name="P:Nemerle.Assertions.InvariantExposeMacro.Keywords" />
    <member name="M:Nemerle.Assertions.InvariantExposeMacro.GetName" />
    <member name="M:Nemerle.Assertions.InvariantExposeMacro.get_Name" />
    <member name="P:Nemerle.Assertions.InvariantExposeMacro.Name" />
    <member name="M:Nemerle.Assertions.InvariantExposeMacro.get_Namespace" />
    <member name="P:Nemerle.Assertions.InvariantExposeMacro.Namespace" />
    <member name="M:Nemerle.Assertions.InvariantExposeMacro.GetNamespace" />
    <member name="M:Nemerle.Assertions.InvariantExposeMacro.get_Usage" />
    <member name="P:Nemerle.Assertions.InvariantExposeMacro.Usage" />
    <member name="M:Nemerle.Assertions.InvariantExposeMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Assertions.InvariantExposeMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Assertions.InvariantExposeMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Assertions.InvariantExposeMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Assertions.InvariantExposeMacro.SyntaxExtension" />
    <member name="T:Nemerle.Compiler.Util.locateMacro" />
    <member name="M:Nemerle.Compiler.Util.locateMacro.#ctor" />
    <member name="F:Nemerle.Compiler.Util.locateMacro.my_usage" />
    <member name="F:Nemerle.Compiler.Util.locateMacro.keywords" />
    <member name="M:Nemerle.Compiler.Util.locateMacro.#cctor" />
    <member name="M:Nemerle.Compiler.Util.locateMacro.get_Location" />
    <member name="P:Nemerle.Compiler.Util.locateMacro.Location" />
    <member name="M:Nemerle.Compiler.Util.locateMacro.get_IsInherited" />
    <member name="P:Nemerle.Compiler.Util.locateMacro.IsInherited" />
    <member name="M:Nemerle.Compiler.Util.locateMacro.get_Keywords" />
    <member name="P:Nemerle.Compiler.Util.locateMacro.Keywords" />
    <member name="M:Nemerle.Compiler.Util.locateMacro.GetName" />
    <member name="M:Nemerle.Compiler.Util.locateMacro.get_Name" />
    <member name="P:Nemerle.Compiler.Util.locateMacro.Name" />
    <member name="M:Nemerle.Compiler.Util.locateMacro.get_Namespace" />
    <member name="P:Nemerle.Compiler.Util.locateMacro.Namespace" />
    <member name="M:Nemerle.Compiler.Util.locateMacro.GetNamespace" />
    <member name="M:Nemerle.Compiler.Util.locateMacro.get_Usage" />
    <member name="P:Nemerle.Compiler.Util.locateMacro.Usage" />
    <member name="M:Nemerle.Compiler.Util.locateMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Compiler.Util.locateMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Compiler.Util.locateMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Compiler.Util.locateMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Compiler.Util.locateMacro.SyntaxExtension" />
    <member name="T:Nemerle.Compiler.Util.iceMacro" />
    <member name="M:Nemerle.Compiler.Util.iceMacro.#ctor" />
    <member name="F:Nemerle.Compiler.Util.iceMacro.my_usage" />
    <member name="F:Nemerle.Compiler.Util.iceMacro.keywords" />
    <member name="M:Nemerle.Compiler.Util.iceMacro.#cctor" />
    <member name="M:Nemerle.Compiler.Util.iceMacro.get_Location" />
    <member name="P:Nemerle.Compiler.Util.iceMacro.Location" />
    <member name="M:Nemerle.Compiler.Util.iceMacro.get_IsInherited" />
    <member name="P:Nemerle.Compiler.Util.iceMacro.IsInherited" />
    <member name="M:Nemerle.Compiler.Util.iceMacro.get_Keywords" />
    <member name="P:Nemerle.Compiler.Util.iceMacro.Keywords" />
    <member name="M:Nemerle.Compiler.Util.iceMacro.GetName" />
    <member name="M:Nemerle.Compiler.Util.iceMacro.get_Name" />
    <member name="P:Nemerle.Compiler.Util.iceMacro.Name" />
    <member name="M:Nemerle.Compiler.Util.iceMacro.get_Namespace" />
    <member name="P:Nemerle.Compiler.Util.iceMacro.Namespace" />
    <member name="M:Nemerle.Compiler.Util.iceMacro.GetNamespace" />
    <member name="M:Nemerle.Compiler.Util.iceMacro.get_Usage" />
    <member name="P:Nemerle.Compiler.Util.iceMacro.Usage" />
    <member name="M:Nemerle.Compiler.Util.iceMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Compiler.Util.iceMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Compiler.Util.iceMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Compiler.Util.iceMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Compiler.Util.iceMacro.SyntaxExtension" />
    <member name="T:Nemerle.Compiler.Util.cassertMacro" />
    <member name="M:Nemerle.Compiler.Util.cassertMacro.#ctor" />
    <member name="F:Nemerle.Compiler.Util.cassertMacro.my_usage" />
    <member name="F:Nemerle.Compiler.Util.cassertMacro.keywords" />
    <member name="M:Nemerle.Compiler.Util.cassertMacro.#cctor" />
    <member name="M:Nemerle.Compiler.Util.cassertMacro.get_Location" />
    <member name="P:Nemerle.Compiler.Util.cassertMacro.Location" />
    <member name="M:Nemerle.Compiler.Util.cassertMacro.get_IsInherited" />
    <member name="P:Nemerle.Compiler.Util.cassertMacro.IsInherited" />
    <member name="M:Nemerle.Compiler.Util.cassertMacro.get_Keywords" />
    <member name="P:Nemerle.Compiler.Util.cassertMacro.Keywords" />
    <member name="M:Nemerle.Compiler.Util.cassertMacro.GetName" />
    <member name="M:Nemerle.Compiler.Util.cassertMacro.get_Name" />
    <member name="P:Nemerle.Compiler.Util.cassertMacro.Name" />
    <member name="M:Nemerle.Compiler.Util.cassertMacro.get_Namespace" />
    <member name="P:Nemerle.Compiler.Util.cassertMacro.Namespace" />
    <member name="M:Nemerle.Compiler.Util.cassertMacro.GetNamespace" />
    <member name="M:Nemerle.Compiler.Util.cassertMacro.get_Usage" />
    <member name="P:Nemerle.Compiler.Util.cassertMacro.Usage" />
    <member name="M:Nemerle.Compiler.Util.cassertMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Compiler.Util.cassertMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Compiler.Util.cassertMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Compiler.Util.cassertMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Compiler.Util.cassertMacro.SyntaxExtension" />
    <member name="T:Nemerle.Compiler.Message.FatalErrorMacro" />
    <member name="M:Nemerle.Compiler.Message.FatalErrorMacro.#ctor" />
    <member name="F:Nemerle.Compiler.Message.FatalErrorMacro.my_usage" />
    <member name="F:Nemerle.Compiler.Message.FatalErrorMacro.keywords" />
    <member name="M:Nemerle.Compiler.Message.FatalErrorMacro.#cctor" />
    <member name="M:Nemerle.Compiler.Message.FatalErrorMacro.get_Location" />
    <member name="P:Nemerle.Compiler.Message.FatalErrorMacro.Location" />
    <member name="M:Nemerle.Compiler.Message.FatalErrorMacro.get_IsInherited" />
    <member name="P:Nemerle.Compiler.Message.FatalErrorMacro.IsInherited" />
    <member name="M:Nemerle.Compiler.Message.FatalErrorMacro.get_Keywords" />
    <member name="P:Nemerle.Compiler.Message.FatalErrorMacro.Keywords" />
    <member name="M:Nemerle.Compiler.Message.FatalErrorMacro.GetName" />
    <member name="M:Nemerle.Compiler.Message.FatalErrorMacro.get_Name" />
    <member name="P:Nemerle.Compiler.Message.FatalErrorMacro.Name" />
    <member name="M:Nemerle.Compiler.Message.FatalErrorMacro.get_Namespace" />
    <member name="P:Nemerle.Compiler.Message.FatalErrorMacro.Namespace" />
    <member name="M:Nemerle.Compiler.Message.FatalErrorMacro.GetNamespace" />
    <member name="M:Nemerle.Compiler.Message.FatalErrorMacro.get_Usage" />
    <member name="P:Nemerle.Compiler.Message.FatalErrorMacro.Usage" />
    <member name="M:Nemerle.Compiler.Message.FatalErrorMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Compiler.Message.FatalErrorMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Compiler.Message.FatalErrorMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Compiler.Message.FatalErrorMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Compiler.Message.FatalErrorMacro.SyntaxExtension" />
    <member name="T:Nemerle.Compiler.ManagerAccess_type_postscanMacro" />
    <member name="M:Nemerle.Compiler.ManagerAccess_type_postscanMacro.#ctor" />
    <member name="F:Nemerle.Compiler.ManagerAccess_type_postscanMacro.my_usage" />
    <member name="F:Nemerle.Compiler.ManagerAccess_type_postscanMacro.keywords" />
    <member name="M:Nemerle.Compiler.ManagerAccess_type_postscanMacro.#cctor" />
    <member name="M:Nemerle.Compiler.ManagerAccess_type_postscanMacro.get_Location" />
    <member name="P:Nemerle.Compiler.ManagerAccess_type_postscanMacro.Location" />
    <member name="M:Nemerle.Compiler.ManagerAccess_type_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.Compiler.ManagerAccess_type_postscanMacro.IsInherited" />
    <member name="M:Nemerle.Compiler.ManagerAccess_type_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.Compiler.ManagerAccess_type_postscanMacro.Keywords" />
    <member name="M:Nemerle.Compiler.ManagerAccess_type_postscanMacro.GetName" />
    <member name="M:Nemerle.Compiler.ManagerAccess_type_postscanMacro.get_Name" />
    <member name="P:Nemerle.Compiler.ManagerAccess_type_postscanMacro.Name" />
    <member name="M:Nemerle.Compiler.ManagerAccess_type_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.Compiler.ManagerAccess_type_postscanMacro.Namespace" />
    <member name="M:Nemerle.Compiler.ManagerAccess_type_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.Compiler.ManagerAccess_type_postscanMacro.get_Usage" />
    <member name="P:Nemerle.Compiler.ManagerAccess_type_postscanMacro.Usage" />
    <member name="M:Nemerle.Compiler.ManagerAccess_type_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Compiler.ManagerAccess_type_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Compiler.ManagerAccess_type_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Compiler.ManagerAccess_type_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Compiler.ManagerAccess_type_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.Compiler.Helpers" />
    <member name="M:Nemerle.Compiler.Helpers.IsRelocatedType(Nemerle.Compiler.TypeBuilder)" />
    <member name="T:Nemerle.Compiler.SupportRelocation_type_postscanMacro">
      <summary>
        <para>Add Relocate() method to class and all class referenced dy it fields.

</para>
      </summary>
    </member>
    <member name="M:Nemerle.Compiler.SupportRelocation_type_postscanMacro.#ctor" />
    <member name="F:Nemerle.Compiler.SupportRelocation_type_postscanMacro.my_usage" />
    <member name="F:Nemerle.Compiler.SupportRelocation_type_postscanMacro.keywords" />
    <member name="M:Nemerle.Compiler.SupportRelocation_type_postscanMacro.#cctor" />
    <member name="M:Nemerle.Compiler.SupportRelocation_type_postscanMacro.get_Location" />
    <member name="P:Nemerle.Compiler.SupportRelocation_type_postscanMacro.Location" />
    <member name="M:Nemerle.Compiler.SupportRelocation_type_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.Compiler.SupportRelocation_type_postscanMacro.IsInherited" />
    <member name="M:Nemerle.Compiler.SupportRelocation_type_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.Compiler.SupportRelocation_type_postscanMacro.Keywords" />
    <member name="M:Nemerle.Compiler.SupportRelocation_type_postscanMacro.GetName" />
    <member name="M:Nemerle.Compiler.SupportRelocation_type_postscanMacro.get_Name" />
    <member name="P:Nemerle.Compiler.SupportRelocation_type_postscanMacro.Name" />
    <member name="M:Nemerle.Compiler.SupportRelocation_type_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.Compiler.SupportRelocation_type_postscanMacro.Namespace" />
    <member name="M:Nemerle.Compiler.SupportRelocation_type_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.Compiler.SupportRelocation_type_postscanMacro.get_Usage" />
    <member name="P:Nemerle.Compiler.SupportRelocation_type_postscanMacro.Usage" />
    <member name="M:Nemerle.Compiler.SupportRelocation_type_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Compiler.SupportRelocation_type_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Compiler.SupportRelocation_type_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Compiler.SupportRelocation_type_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Compiler.SupportRelocation_type_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.Compiler.SupportRelocation_type_preaddMacro">
      <summary>
        <para>Add Relocate() method to class and all class referenced dy it fields.

</para>
      </summary>
    </member>
    <member name="M:Nemerle.Compiler.SupportRelocation_type_preaddMacro._N_isAccepted_26756(Nemerle.Compiler.SupportRelocation_type_preaddMacro._N_closureOf_Run_26673,Nemerle.Compiler.Parsetree.ClassMember.Field)" />
    <member name="M:Nemerle.Compiler.SupportRelocation_type_preaddMacro._N_isTypedInstanceField_26742(Nemerle.Compiler.Parsetree.ClassMember.Field)" />
    <member name="M:Nemerle.Compiler.SupportRelocation_type_preaddMacro._N_equalsAny_26721(Nemerle.Compiler.TypeBuilder,Nemerle.Core.Cons[T]{Nemerle.Compiler.TypeInfo})" />
    <member name="M:Nemerle.Compiler.SupportRelocation_type_preaddMacro._N_isStepInto_26707(Nemerle.Compiler.TypeBuilder)">
      <summary>
        <para>True if we need visite property of this type
 (ignore: Alias, Delegate, ValueType and Static types).

</para>
      </summary>
    </member>
    <member name="M:Nemerle.Compiler.SupportRelocation_type_preaddMacro._N_isMutable_26702(Nemerle.Compiler.Parsetree.ClassMember.Field)" />
    <member name="M:Nemerle.Compiler.SupportRelocation_type_preaddMacro._N_errorLocationFieldCanNotBeImmutable_26696(Nemerle.Compiler.SupportRelocation_type_preaddMacro._N_closureOf_Run_26673,Nemerle.Compiler.Parsetree.ClassMember.Field)" />
    <member name="M:Nemerle.Compiler.SupportRelocation_type_preaddMacro._N_error_26686(Nemerle.Compiler.SupportRelocation_type_preaddMacro._N_closureOf_Run_26673,Nemerle.Compiler.Location,System.String)">
      <summary>
        <para>//////////////////////////////////////////////////////////////////////

</para>
      </summary>
    </member>
    <member name="M:Nemerle.Compiler.SupportRelocation_type_preaddMacro.#ctor">
      <summary>
        <para>Add Relocate() method to class and all class referenced dy it fields.

</para>
      </summary>
    </member>
    <member name="F:Nemerle.Compiler.SupportRelocation_type_preaddMacro.my_usage" />
    <member name="F:Nemerle.Compiler.SupportRelocation_type_preaddMacro.keywords" />
    <member name="M:Nemerle.Compiler.SupportRelocation_type_preaddMacro.#cctor" />
    <member name="M:Nemerle.Compiler.SupportRelocation_type_preaddMacro.get_Location" />
    <member name="P:Nemerle.Compiler.SupportRelocation_type_preaddMacro.Location" />
    <member name="M:Nemerle.Compiler.SupportRelocation_type_preaddMacro.get_IsInherited" />
    <member name="P:Nemerle.Compiler.SupportRelocation_type_preaddMacro.IsInherited" />
    <member name="M:Nemerle.Compiler.SupportRelocation_type_preaddMacro.get_Keywords" />
    <member name="P:Nemerle.Compiler.SupportRelocation_type_preaddMacro.Keywords" />
    <member name="M:Nemerle.Compiler.SupportRelocation_type_preaddMacro.GetName" />
    <member name="M:Nemerle.Compiler.SupportRelocation_type_preaddMacro.get_Name" />
    <member name="P:Nemerle.Compiler.SupportRelocation_type_preaddMacro.Name" />
    <member name="M:Nemerle.Compiler.SupportRelocation_type_preaddMacro.get_Namespace" />
    <member name="P:Nemerle.Compiler.SupportRelocation_type_preaddMacro.Namespace" />
    <member name="M:Nemerle.Compiler.SupportRelocation_type_preaddMacro.GetNamespace" />
    <member name="M:Nemerle.Compiler.SupportRelocation_type_preaddMacro.get_Usage" />
    <member name="P:Nemerle.Compiler.SupportRelocation_type_preaddMacro.Usage" />
    <member name="M:Nemerle.Compiler.SupportRelocation_type_preaddMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Compiler.SupportRelocation_type_preaddMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Compiler.SupportRelocation_type_preaddMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Compiler.SupportRelocation_type_preaddMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Compiler.SupportRelocation_type_preaddMacro.SyntaxExtension" />
    <member name="T:Nemerle.Compiler.SolverMacros.ReportErrorMacro" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportErrorMacro.#ctor" />
    <member name="F:Nemerle.Compiler.SolverMacros.ReportErrorMacro.my_usage" />
    <member name="F:Nemerle.Compiler.SolverMacros.ReportErrorMacro.keywords" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportErrorMacro.#cctor" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportErrorMacro.get_Location" />
    <member name="P:Nemerle.Compiler.SolverMacros.ReportErrorMacro.Location" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportErrorMacro.get_IsInherited" />
    <member name="P:Nemerle.Compiler.SolverMacros.ReportErrorMacro.IsInherited" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportErrorMacro.get_Keywords" />
    <member name="P:Nemerle.Compiler.SolverMacros.ReportErrorMacro.Keywords" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportErrorMacro.GetName" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportErrorMacro.get_Name" />
    <member name="P:Nemerle.Compiler.SolverMacros.ReportErrorMacro.Name" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportErrorMacro.get_Namespace" />
    <member name="P:Nemerle.Compiler.SolverMacros.ReportErrorMacro.Namespace" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportErrorMacro.GetNamespace" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportErrorMacro.get_Usage" />
    <member name="P:Nemerle.Compiler.SolverMacros.ReportErrorMacro.Usage" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportErrorMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Compiler.SolverMacros.ReportErrorMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportErrorMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportErrorMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportErrorMacro.SyntaxExtension" />
    <member name="T:Nemerle.Compiler.SolverMacros.ReportLocatedErrorMacro" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportLocatedErrorMacro.#ctor" />
    <member name="F:Nemerle.Compiler.SolverMacros.ReportLocatedErrorMacro.my_usage" />
    <member name="F:Nemerle.Compiler.SolverMacros.ReportLocatedErrorMacro.keywords" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportLocatedErrorMacro.#cctor" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportLocatedErrorMacro.get_Location" />
    <member name="P:Nemerle.Compiler.SolverMacros.ReportLocatedErrorMacro.Location" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportLocatedErrorMacro.get_IsInherited" />
    <member name="P:Nemerle.Compiler.SolverMacros.ReportLocatedErrorMacro.IsInherited" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportLocatedErrorMacro.get_Keywords" />
    <member name="P:Nemerle.Compiler.SolverMacros.ReportLocatedErrorMacro.Keywords" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportLocatedErrorMacro.GetName" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportLocatedErrorMacro.get_Name" />
    <member name="P:Nemerle.Compiler.SolverMacros.ReportLocatedErrorMacro.Name" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportLocatedErrorMacro.get_Namespace" />
    <member name="P:Nemerle.Compiler.SolverMacros.ReportLocatedErrorMacro.Namespace" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportLocatedErrorMacro.GetNamespace" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportLocatedErrorMacro.get_Usage" />
    <member name="P:Nemerle.Compiler.SolverMacros.ReportLocatedErrorMacro.Usage" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportLocatedErrorMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Compiler.SolverMacros.ReportLocatedErrorMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportLocatedErrorMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportLocatedErrorMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportLocatedErrorMacro.SyntaxExtension" />
    <member name="T:Nemerle.Compiler.SolverMacros.ReportFatalMacro" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportFatalMacro.#ctor" />
    <member name="F:Nemerle.Compiler.SolverMacros.ReportFatalMacro.my_usage" />
    <member name="F:Nemerle.Compiler.SolverMacros.ReportFatalMacro.keywords" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportFatalMacro.#cctor" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportFatalMacro.get_Location" />
    <member name="P:Nemerle.Compiler.SolverMacros.ReportFatalMacro.Location" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportFatalMacro.get_IsInherited" />
    <member name="P:Nemerle.Compiler.SolverMacros.ReportFatalMacro.IsInherited" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportFatalMacro.get_Keywords" />
    <member name="P:Nemerle.Compiler.SolverMacros.ReportFatalMacro.Keywords" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportFatalMacro.GetName" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportFatalMacro.get_Name" />
    <member name="P:Nemerle.Compiler.SolverMacros.ReportFatalMacro.Name" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportFatalMacro.get_Namespace" />
    <member name="P:Nemerle.Compiler.SolverMacros.ReportFatalMacro.Namespace" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportFatalMacro.GetNamespace" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportFatalMacro.get_Usage" />
    <member name="P:Nemerle.Compiler.SolverMacros.ReportFatalMacro.Usage" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportFatalMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Compiler.SolverMacros.ReportFatalMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportFatalMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportFatalMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Compiler.SolverMacros.ReportFatalMacro.SyntaxExtension" />
    <member name="T:Nemerle.Compiler.SolverMacros.SaveErrorMacro" />
    <member name="M:Nemerle.Compiler.SolverMacros.SaveErrorMacro.#ctor" />
    <member name="F:Nemerle.Compiler.SolverMacros.SaveErrorMacro.my_usage" />
    <member name="F:Nemerle.Compiler.SolverMacros.SaveErrorMacro.keywords" />
    <member name="M:Nemerle.Compiler.SolverMacros.SaveErrorMacro.#cctor" />
    <member name="M:Nemerle.Compiler.SolverMacros.SaveErrorMacro.get_Location" />
    <member name="P:Nemerle.Compiler.SolverMacros.SaveErrorMacro.Location" />
    <member name="M:Nemerle.Compiler.SolverMacros.SaveErrorMacro.get_IsInherited" />
    <member name="P:Nemerle.Compiler.SolverMacros.SaveErrorMacro.IsInherited" />
    <member name="M:Nemerle.Compiler.SolverMacros.SaveErrorMacro.get_Keywords" />
    <member name="P:Nemerle.Compiler.SolverMacros.SaveErrorMacro.Keywords" />
    <member name="M:Nemerle.Compiler.SolverMacros.SaveErrorMacro.GetName" />
    <member name="M:Nemerle.Compiler.SolverMacros.SaveErrorMacro.get_Name" />
    <member name="P:Nemerle.Compiler.SolverMacros.SaveErrorMacro.Name" />
    <member name="M:Nemerle.Compiler.SolverMacros.SaveErrorMacro.get_Namespace" />
    <member name="P:Nemerle.Compiler.SolverMacros.SaveErrorMacro.Namespace" />
    <member name="M:Nemerle.Compiler.SolverMacros.SaveErrorMacro.GetNamespace" />
    <member name="M:Nemerle.Compiler.SolverMacros.SaveErrorMacro.get_Usage" />
    <member name="P:Nemerle.Compiler.SolverMacros.SaveErrorMacro.Usage" />
    <member name="M:Nemerle.Compiler.SolverMacros.SaveErrorMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Compiler.SolverMacros.SaveErrorMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Compiler.SolverMacros.SaveErrorMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Compiler.SolverMacros.SaveErrorMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Compiler.SolverMacros.SaveErrorMacro.SyntaxExtension" />
    <member name="T:Nemerle.Compiler.SolverMacros.PossiblyLooping_method_postscanMacro" />
    <member name="M:Nemerle.Compiler.SolverMacros.PossiblyLooping_method_postscanMacro.#ctor" />
    <member name="F:Nemerle.Compiler.SolverMacros.PossiblyLooping_method_postscanMacro.my_usage" />
    <member name="F:Nemerle.Compiler.SolverMacros.PossiblyLooping_method_postscanMacro.keywords" />
    <member name="M:Nemerle.Compiler.SolverMacros.PossiblyLooping_method_postscanMacro.#cctor" />
    <member name="M:Nemerle.Compiler.SolverMacros.PossiblyLooping_method_postscanMacro.get_Location" />
    <member name="P:Nemerle.Compiler.SolverMacros.PossiblyLooping_method_postscanMacro.Location" />
    <member name="M:Nemerle.Compiler.SolverMacros.PossiblyLooping_method_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.Compiler.SolverMacros.PossiblyLooping_method_postscanMacro.IsInherited" />
    <member name="M:Nemerle.Compiler.SolverMacros.PossiblyLooping_method_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.Compiler.SolverMacros.PossiblyLooping_method_postscanMacro.Keywords" />
    <member name="M:Nemerle.Compiler.SolverMacros.PossiblyLooping_method_postscanMacro.GetName" />
    <member name="M:Nemerle.Compiler.SolverMacros.PossiblyLooping_method_postscanMacro.get_Name" />
    <member name="P:Nemerle.Compiler.SolverMacros.PossiblyLooping_method_postscanMacro.Name" />
    <member name="M:Nemerle.Compiler.SolverMacros.PossiblyLooping_method_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.Compiler.SolverMacros.PossiblyLooping_method_postscanMacro.Namespace" />
    <member name="M:Nemerle.Compiler.SolverMacros.PossiblyLooping_method_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.Compiler.SolverMacros.PossiblyLooping_method_postscanMacro.get_Usage" />
    <member name="P:Nemerle.Compiler.SolverMacros.PossiblyLooping_method_postscanMacro.Usage" />
    <member name="M:Nemerle.Compiler.SolverMacros.PossiblyLooping_method_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Compiler.SolverMacros.PossiblyLooping_method_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Compiler.SolverMacros.PossiblyLooping_method_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Compiler.SolverMacros.PossiblyLooping_method_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Compiler.SolverMacros.PossiblyLooping_method_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.Concurrency.Helper" />
    <member name="M:Nemerle.Concurrency.Helper._N_is_in_current_27430(Nemerle.Concurrency.Helper._N_closureOf_CreateChordCommonMembers_27422,Nemerle.Core.list{Nemerle.Compiler.IMember})" />
    <member name="M:Nemerle.Concurrency.Helper.MakeAsyncVoid(Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="M:Nemerle.Concurrency.Helper.MakeAsync(Nemerle.Compiler.Typer,Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="M:Nemerle.Concurrency.Helper.MakeAsync(Nemerle.Compiler.Typer,Nemerle.Compiler.Parsetree.ClassMember.Function)" />
    <member name="M:Nemerle.Concurrency.Helper.AddInit(Nemerle.Compiler.TypeBuilder,System.Boolean,Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="M:Nemerle.Concurrency.Helper.AddInit(Nemerle.Compiler.TypeBuilder,System.Boolean,Nemerle.Compiler.Parsetree.PExpr,System.Boolean)" />
    <member name="M:Nemerle.Concurrency.Helper.CreateChordCommonMembers(Nemerle.Compiler.TypeBuilder)" />
    <member name="M:Nemerle.Concurrency.Helper.AddChordScanCase(Nemerle.Compiler.TypeBuilder,Nemerle.Compiler.Parsetree.Name,Nemerle.Compiler.Parsetree.Name)" />
    <member name="F:Nemerle.Concurrency.Helper.MaxMethodValueCounter" />
    <member name="M:Nemerle.Concurrency.Helper.#cctor" />
    <member name="M:Nemerle.Concurrency.Helper.CreateChordMaskMethodValue(Nemerle.Compiler.TypeBuilder,Nemerle.Compiler.MethodBuilder)" />
    <member name="M:Nemerle.Concurrency.Helper.CreateChordMaskValue(Nemerle.Compiler.TypeBuilder,Nemerle.Compiler.MethodBuilder,Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Concurrency.Helper.CreateChordMethodQueue(Nemerle.Compiler.TypeBuilder,Nemerle.Compiler.MethodBuilder)" />
    <member name="M:Nemerle.Concurrency.Helper.CreateChordThreadQueue(Nemerle.Compiler.TypeBuilder,Nemerle.Compiler.MethodBuilder)" />
    <member name="M:Nemerle.Concurrency.Helper.chord'(Nemerle.Compiler.TypeBuilder,Nemerle.Compiler.MethodBuilder,Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="T:Nemerle.Concurrency.asyncMacro">
      <summary>
        <para>-------------------- Macros of Nemerle.Concurrency namespace

</para>
      </summary>
    </member>
    <member name="M:Nemerle.Concurrency.asyncMacro.#ctor" />
    <member name="F:Nemerle.Concurrency.asyncMacro.my_usage" />
    <member name="F:Nemerle.Concurrency.asyncMacro.keywords" />
    <member name="M:Nemerle.Concurrency.asyncMacro.#cctor" />
    <member name="M:Nemerle.Concurrency.asyncMacro.get_Location" />
    <member name="P:Nemerle.Concurrency.asyncMacro.Location" />
    <member name="M:Nemerle.Concurrency.asyncMacro.get_IsInherited" />
    <member name="P:Nemerle.Concurrency.asyncMacro.IsInherited" />
    <member name="M:Nemerle.Concurrency.asyncMacro.get_Keywords" />
    <member name="P:Nemerle.Concurrency.asyncMacro.Keywords" />
    <member name="M:Nemerle.Concurrency.asyncMacro.GetName" />
    <member name="M:Nemerle.Concurrency.asyncMacro.get_Name" />
    <member name="P:Nemerle.Concurrency.asyncMacro.Name" />
    <member name="M:Nemerle.Concurrency.asyncMacro.get_Namespace" />
    <member name="P:Nemerle.Concurrency.asyncMacro.Namespace" />
    <member name="M:Nemerle.Concurrency.asyncMacro.GetNamespace" />
    <member name="M:Nemerle.Concurrency.asyncMacro.get_Usage" />
    <member name="P:Nemerle.Concurrency.asyncMacro.Usage" />
    <member name="M:Nemerle.Concurrency.asyncMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Concurrency.asyncMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Concurrency.asyncMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Concurrency.asyncMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Concurrency.asyncMacro.SyntaxExtension" />
    <member name="T:Nemerle.Concurrency.Async_method_postscanMacro" />
    <member name="M:Nemerle.Concurrency.Async_method_postscanMacro.#ctor" />
    <member name="F:Nemerle.Concurrency.Async_method_postscanMacro.my_usage" />
    <member name="F:Nemerle.Concurrency.Async_method_postscanMacro.keywords" />
    <member name="M:Nemerle.Concurrency.Async_method_postscanMacro.#cctor" />
    <member name="M:Nemerle.Concurrency.Async_method_postscanMacro.get_Location" />
    <member name="P:Nemerle.Concurrency.Async_method_postscanMacro.Location" />
    <member name="M:Nemerle.Concurrency.Async_method_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.Concurrency.Async_method_postscanMacro.IsInherited" />
    <member name="M:Nemerle.Concurrency.Async_method_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.Concurrency.Async_method_postscanMacro.Keywords" />
    <member name="M:Nemerle.Concurrency.Async_method_postscanMacro.GetName" />
    <member name="M:Nemerle.Concurrency.Async_method_postscanMacro.get_Name" />
    <member name="P:Nemerle.Concurrency.Async_method_postscanMacro.Name" />
    <member name="M:Nemerle.Concurrency.Async_method_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.Concurrency.Async_method_postscanMacro.Namespace" />
    <member name="M:Nemerle.Concurrency.Async_method_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.Concurrency.Async_method_postscanMacro.get_Usage" />
    <member name="P:Nemerle.Concurrency.Async_method_postscanMacro.Usage" />
    <member name="M:Nemerle.Concurrency.Async_method_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Concurrency.Async_method_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Concurrency.Async_method_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Concurrency.Async_method_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Concurrency.Async_method_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.Concurrency.ChordMember_method_postscanMacro" />
    <member name="M:Nemerle.Concurrency.ChordMember_method_postscanMacro.#ctor" />
    <member name="F:Nemerle.Concurrency.ChordMember_method_postscanMacro.my_usage" />
    <member name="F:Nemerle.Concurrency.ChordMember_method_postscanMacro.keywords" />
    <member name="M:Nemerle.Concurrency.ChordMember_method_postscanMacro.#cctor" />
    <member name="M:Nemerle.Concurrency.ChordMember_method_postscanMacro.get_Location" />
    <member name="P:Nemerle.Concurrency.ChordMember_method_postscanMacro.Location" />
    <member name="M:Nemerle.Concurrency.ChordMember_method_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.Concurrency.ChordMember_method_postscanMacro.IsInherited" />
    <member name="M:Nemerle.Concurrency.ChordMember_method_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.Concurrency.ChordMember_method_postscanMacro.Keywords" />
    <member name="M:Nemerle.Concurrency.ChordMember_method_postscanMacro.GetName" />
    <member name="M:Nemerle.Concurrency.ChordMember_method_postscanMacro.get_Name" />
    <member name="P:Nemerle.Concurrency.ChordMember_method_postscanMacro.Name" />
    <member name="M:Nemerle.Concurrency.ChordMember_method_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.Concurrency.ChordMember_method_postscanMacro.Namespace" />
    <member name="M:Nemerle.Concurrency.ChordMember_method_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.Concurrency.ChordMember_method_postscanMacro.get_Usage" />
    <member name="P:Nemerle.Concurrency.ChordMember_method_postscanMacro.Usage" />
    <member name="M:Nemerle.Concurrency.ChordMember_method_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Concurrency.ChordMember_method_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Concurrency.ChordMember_method_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Concurrency.ChordMember_method_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Concurrency.ChordMember_method_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.Concurrency.ChordMember_method_postaddMacro" />
    <member name="M:Nemerle.Concurrency.ChordMember_method_postaddMacro.#ctor" />
    <member name="F:Nemerle.Concurrency.ChordMember_method_postaddMacro.my_usage" />
    <member name="F:Nemerle.Concurrency.ChordMember_method_postaddMacro.keywords" />
    <member name="M:Nemerle.Concurrency.ChordMember_method_postaddMacro.#cctor" />
    <member name="M:Nemerle.Concurrency.ChordMember_method_postaddMacro.get_Location" />
    <member name="P:Nemerle.Concurrency.ChordMember_method_postaddMacro.Location" />
    <member name="M:Nemerle.Concurrency.ChordMember_method_postaddMacro.get_IsInherited" />
    <member name="P:Nemerle.Concurrency.ChordMember_method_postaddMacro.IsInherited" />
    <member name="M:Nemerle.Concurrency.ChordMember_method_postaddMacro.get_Keywords" />
    <member name="P:Nemerle.Concurrency.ChordMember_method_postaddMacro.Keywords" />
    <member name="M:Nemerle.Concurrency.ChordMember_method_postaddMacro.GetName" />
    <member name="M:Nemerle.Concurrency.ChordMember_method_postaddMacro.get_Name" />
    <member name="P:Nemerle.Concurrency.ChordMember_method_postaddMacro.Name" />
    <member name="M:Nemerle.Concurrency.ChordMember_method_postaddMacro.get_Namespace" />
    <member name="P:Nemerle.Concurrency.ChordMember_method_postaddMacro.Namespace" />
    <member name="M:Nemerle.Concurrency.ChordMember_method_postaddMacro.GetNamespace" />
    <member name="M:Nemerle.Concurrency.ChordMember_method_postaddMacro.get_Usage" />
    <member name="P:Nemerle.Concurrency.ChordMember_method_postaddMacro.Usage" />
    <member name="M:Nemerle.Concurrency.ChordMember_method_postaddMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Concurrency.ChordMember_method_postaddMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Concurrency.ChordMember_method_postaddMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Concurrency.ChordMember_method_postaddMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Concurrency.ChordMember_method_postaddMacro.SyntaxExtension" />
    <member name="T:Nemerle.Concurrency.Chord_method_postaddMacro" />
    <member name="M:Nemerle.Concurrency.Chord_method_postaddMacro.#ctor" />
    <member name="F:Nemerle.Concurrency.Chord_method_postaddMacro.my_usage" />
    <member name="F:Nemerle.Concurrency.Chord_method_postaddMacro.keywords" />
    <member name="M:Nemerle.Concurrency.Chord_method_postaddMacro.#cctor" />
    <member name="M:Nemerle.Concurrency.Chord_method_postaddMacro.get_Location" />
    <member name="P:Nemerle.Concurrency.Chord_method_postaddMacro.Location" />
    <member name="M:Nemerle.Concurrency.Chord_method_postaddMacro.get_IsInherited" />
    <member name="P:Nemerle.Concurrency.Chord_method_postaddMacro.IsInherited" />
    <member name="M:Nemerle.Concurrency.Chord_method_postaddMacro.get_Keywords" />
    <member name="P:Nemerle.Concurrency.Chord_method_postaddMacro.Keywords" />
    <member name="M:Nemerle.Concurrency.Chord_method_postaddMacro.GetName" />
    <member name="M:Nemerle.Concurrency.Chord_method_postaddMacro.get_Name" />
    <member name="P:Nemerle.Concurrency.Chord_method_postaddMacro.Name" />
    <member name="M:Nemerle.Concurrency.Chord_method_postaddMacro.get_Namespace" />
    <member name="P:Nemerle.Concurrency.Chord_method_postaddMacro.Namespace" />
    <member name="M:Nemerle.Concurrency.Chord_method_postaddMacro.GetNamespace" />
    <member name="M:Nemerle.Concurrency.Chord_method_postaddMacro.get_Usage" />
    <member name="P:Nemerle.Concurrency.Chord_method_postaddMacro.Usage" />
    <member name="M:Nemerle.Concurrency.Chord_method_postaddMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Concurrency.Chord_method_postaddMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Concurrency.Chord_method_postaddMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Concurrency.Chord_method_postaddMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Concurrency.Chord_method_postaddMacro.SyntaxExtension" />
    <member name="T:Nemerle.Concurrency.AsyncChord_method_postaddMacro" />
    <member name="M:Nemerle.Concurrency.AsyncChord_method_postaddMacro.#ctor" />
    <member name="F:Nemerle.Concurrency.AsyncChord_method_postaddMacro.my_usage" />
    <member name="F:Nemerle.Concurrency.AsyncChord_method_postaddMacro.keywords" />
    <member name="M:Nemerle.Concurrency.AsyncChord_method_postaddMacro.#cctor" />
    <member name="M:Nemerle.Concurrency.AsyncChord_method_postaddMacro.get_Location" />
    <member name="P:Nemerle.Concurrency.AsyncChord_method_postaddMacro.Location" />
    <member name="M:Nemerle.Concurrency.AsyncChord_method_postaddMacro.get_IsInherited" />
    <member name="P:Nemerle.Concurrency.AsyncChord_method_postaddMacro.IsInherited" />
    <member name="M:Nemerle.Concurrency.AsyncChord_method_postaddMacro.get_Keywords" />
    <member name="P:Nemerle.Concurrency.AsyncChord_method_postaddMacro.Keywords" />
    <member name="M:Nemerle.Concurrency.AsyncChord_method_postaddMacro.GetName" />
    <member name="M:Nemerle.Concurrency.AsyncChord_method_postaddMacro.get_Name" />
    <member name="P:Nemerle.Concurrency.AsyncChord_method_postaddMacro.Name" />
    <member name="M:Nemerle.Concurrency.AsyncChord_method_postaddMacro.get_Namespace" />
    <member name="P:Nemerle.Concurrency.AsyncChord_method_postaddMacro.Namespace" />
    <member name="M:Nemerle.Concurrency.AsyncChord_method_postaddMacro.GetNamespace" />
    <member name="M:Nemerle.Concurrency.AsyncChord_method_postaddMacro.get_Usage" />
    <member name="P:Nemerle.Concurrency.AsyncChord_method_postaddMacro.Usage" />
    <member name="M:Nemerle.Concurrency.AsyncChord_method_postaddMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Concurrency.AsyncChord_method_postaddMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Concurrency.AsyncChord_method_postaddMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Concurrency.AsyncChord_method_postaddMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Concurrency.AsyncChord_method_postaddMacro.SyntaxExtension" />
    <member name="T:Nemerle.Imperative.ReturnMacro" />
    <member name="M:Nemerle.Imperative.ReturnMacro.#ctor" />
    <member name="F:Nemerle.Imperative.ReturnMacro.my_usage" />
    <member name="F:Nemerle.Imperative.ReturnMacro.keywords" />
    <member name="M:Nemerle.Imperative.ReturnMacro.#cctor" />
    <member name="M:Nemerle.Imperative.ReturnMacro.get_Location" />
    <member name="P:Nemerle.Imperative.ReturnMacro.Location" />
    <member name="M:Nemerle.Imperative.ReturnMacro.get_IsInherited" />
    <member name="P:Nemerle.Imperative.ReturnMacro.IsInherited" />
    <member name="M:Nemerle.Imperative.ReturnMacro.get_Keywords" />
    <member name="P:Nemerle.Imperative.ReturnMacro.Keywords" />
    <member name="M:Nemerle.Imperative.ReturnMacro.GetName" />
    <member name="M:Nemerle.Imperative.ReturnMacro.get_Name" />
    <member name="P:Nemerle.Imperative.ReturnMacro.Name" />
    <member name="M:Nemerle.Imperative.ReturnMacro.get_Namespace" />
    <member name="P:Nemerle.Imperative.ReturnMacro.Namespace" />
    <member name="M:Nemerle.Imperative.ReturnMacro.GetNamespace" />
    <member name="M:Nemerle.Imperative.ReturnMacro.get_Usage" />
    <member name="P:Nemerle.Imperative.ReturnMacro.Usage" />
    <member name="M:Nemerle.Imperative.ReturnMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Imperative.ReturnMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Imperative.ReturnMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Imperative.ReturnMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Imperative.ReturnMacro.SyntaxExtension" />
    <member name="T:Nemerle.Imperative.BreakMacro" />
    <member name="M:Nemerle.Imperative.BreakMacro.#ctor" />
    <member name="F:Nemerle.Imperative.BreakMacro.my_usage" />
    <member name="F:Nemerle.Imperative.BreakMacro.keywords" />
    <member name="M:Nemerle.Imperative.BreakMacro.#cctor" />
    <member name="M:Nemerle.Imperative.BreakMacro.get_Location" />
    <member name="P:Nemerle.Imperative.BreakMacro.Location" />
    <member name="M:Nemerle.Imperative.BreakMacro.get_IsInherited" />
    <member name="P:Nemerle.Imperative.BreakMacro.IsInherited" />
    <member name="M:Nemerle.Imperative.BreakMacro.get_Keywords" />
    <member name="P:Nemerle.Imperative.BreakMacro.Keywords" />
    <member name="M:Nemerle.Imperative.BreakMacro.GetName" />
    <member name="M:Nemerle.Imperative.BreakMacro.get_Name" />
    <member name="P:Nemerle.Imperative.BreakMacro.Name" />
    <member name="M:Nemerle.Imperative.BreakMacro.get_Namespace" />
    <member name="P:Nemerle.Imperative.BreakMacro.Namespace" />
    <member name="M:Nemerle.Imperative.BreakMacro.GetNamespace" />
    <member name="M:Nemerle.Imperative.BreakMacro.get_Usage" />
    <member name="P:Nemerle.Imperative.BreakMacro.Usage" />
    <member name="M:Nemerle.Imperative.BreakMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Imperative.BreakMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Imperative.BreakMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Imperative.BreakMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Imperative.BreakMacro.SyntaxExtension" />
    <member name="T:Nemerle.Imperative.ContinueMacro" />
    <member name="M:Nemerle.Imperative.ContinueMacro.#ctor" />
    <member name="F:Nemerle.Imperative.ContinueMacro.my_usage" />
    <member name="F:Nemerle.Imperative.ContinueMacro.keywords" />
    <member name="M:Nemerle.Imperative.ContinueMacro.#cctor" />
    <member name="M:Nemerle.Imperative.ContinueMacro.get_Location" />
    <member name="P:Nemerle.Imperative.ContinueMacro.Location" />
    <member name="M:Nemerle.Imperative.ContinueMacro.get_IsInherited" />
    <member name="P:Nemerle.Imperative.ContinueMacro.IsInherited" />
    <member name="M:Nemerle.Imperative.ContinueMacro.get_Keywords" />
    <member name="P:Nemerle.Imperative.ContinueMacro.Keywords" />
    <member name="M:Nemerle.Imperative.ContinueMacro.GetName" />
    <member name="M:Nemerle.Imperative.ContinueMacro.get_Name" />
    <member name="P:Nemerle.Imperative.ContinueMacro.Name" />
    <member name="M:Nemerle.Imperative.ContinueMacro.get_Namespace" />
    <member name="P:Nemerle.Imperative.ContinueMacro.Namespace" />
    <member name="M:Nemerle.Imperative.ContinueMacro.GetNamespace" />
    <member name="M:Nemerle.Imperative.ContinueMacro.get_Usage" />
    <member name="P:Nemerle.Imperative.ContinueMacro.Usage" />
    <member name="M:Nemerle.Imperative.ContinueMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Imperative.ContinueMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Imperative.ContinueMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Imperative.ContinueMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Imperative.ContinueMacro.SyntaxExtension" />
    <member name="T:Nemerle.Imperative.ResetMutableFieldsMacro" />
    <member name="M:Nemerle.Imperative.ResetMutableFieldsMacro.#ctor" />
    <member name="F:Nemerle.Imperative.ResetMutableFieldsMacro.my_usage" />
    <member name="F:Nemerle.Imperative.ResetMutableFieldsMacro.keywords" />
    <member name="M:Nemerle.Imperative.ResetMutableFieldsMacro.#cctor" />
    <member name="M:Nemerle.Imperative.ResetMutableFieldsMacro.get_Location" />
    <member name="P:Nemerle.Imperative.ResetMutableFieldsMacro.Location" />
    <member name="M:Nemerle.Imperative.ResetMutableFieldsMacro.get_IsInherited" />
    <member name="P:Nemerle.Imperative.ResetMutableFieldsMacro.IsInherited" />
    <member name="M:Nemerle.Imperative.ResetMutableFieldsMacro.get_Keywords" />
    <member name="P:Nemerle.Imperative.ResetMutableFieldsMacro.Keywords" />
    <member name="M:Nemerle.Imperative.ResetMutableFieldsMacro.GetName" />
    <member name="M:Nemerle.Imperative.ResetMutableFieldsMacro.get_Name" />
    <member name="P:Nemerle.Imperative.ResetMutableFieldsMacro.Name" />
    <member name="M:Nemerle.Imperative.ResetMutableFieldsMacro.get_Namespace" />
    <member name="P:Nemerle.Imperative.ResetMutableFieldsMacro.Namespace" />
    <member name="M:Nemerle.Imperative.ResetMutableFieldsMacro.GetNamespace" />
    <member name="M:Nemerle.Imperative.ResetMutableFieldsMacro.get_Usage" />
    <member name="P:Nemerle.Imperative.ResetMutableFieldsMacro.Usage" />
    <member name="M:Nemerle.Imperative.ResetMutableFieldsMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Imperative.ResetMutableFieldsMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Imperative.ResetMutableFieldsMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Imperative.ResetMutableFieldsMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Imperative.ResetMutableFieldsMacro.SyntaxExtension" />
    <member name="T:Nemerle.Core.defaultMacro" />
    <member name="M:Nemerle.Core.defaultMacro.#ctor" />
    <member name="F:Nemerle.Core.defaultMacro.my_usage" />
    <member name="F:Nemerle.Core.defaultMacro.keywords" />
    <member name="M:Nemerle.Core.defaultMacro.#cctor" />
    <member name="M:Nemerle.Core.defaultMacro.get_Location" />
    <member name="P:Nemerle.Core.defaultMacro.Location" />
    <member name="M:Nemerle.Core.defaultMacro.get_IsInherited" />
    <member name="P:Nemerle.Core.defaultMacro.IsInherited" />
    <member name="M:Nemerle.Core.defaultMacro.get_Keywords" />
    <member name="P:Nemerle.Core.defaultMacro.Keywords" />
    <member name="M:Nemerle.Core.defaultMacro.GetName" />
    <member name="M:Nemerle.Core.defaultMacro.get_Name" />
    <member name="P:Nemerle.Core.defaultMacro.Name" />
    <member name="M:Nemerle.Core.defaultMacro.get_Namespace" />
    <member name="P:Nemerle.Core.defaultMacro.Namespace" />
    <member name="M:Nemerle.Core.defaultMacro.GetNamespace" />
    <member name="M:Nemerle.Core.defaultMacro.get_Usage" />
    <member name="P:Nemerle.Core.defaultMacro.Usage" />
    <member name="M:Nemerle.Core.defaultMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core.defaultMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core.defaultMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core.defaultMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core.defaultMacro.SyntaxExtension" />
    <member name="T:Nemerle.Core.debudhelperMacro" />
    <member name="M:Nemerle.Core.debudhelperMacro.#ctor" />
    <member name="F:Nemerle.Core.debudhelperMacro.my_usage" />
    <member name="F:Nemerle.Core.debudhelperMacro.keywords" />
    <member name="M:Nemerle.Core.debudhelperMacro.#cctor" />
    <member name="M:Nemerle.Core.debudhelperMacro.get_Location" />
    <member name="P:Nemerle.Core.debudhelperMacro.Location" />
    <member name="M:Nemerle.Core.debudhelperMacro.get_IsInherited" />
    <member name="P:Nemerle.Core.debudhelperMacro.IsInherited" />
    <member name="M:Nemerle.Core.debudhelperMacro.get_Keywords" />
    <member name="P:Nemerle.Core.debudhelperMacro.Keywords" />
    <member name="M:Nemerle.Core.debudhelperMacro.GetName" />
    <member name="M:Nemerle.Core.debudhelperMacro.get_Name" />
    <member name="P:Nemerle.Core.debudhelperMacro.Name" />
    <member name="M:Nemerle.Core.debudhelperMacro.get_Namespace" />
    <member name="P:Nemerle.Core.debudhelperMacro.Namespace" />
    <member name="M:Nemerle.Core.debudhelperMacro.GetNamespace" />
    <member name="M:Nemerle.Core.debudhelperMacro.get_Usage" />
    <member name="P:Nemerle.Core.debudhelperMacro.Usage" />
    <member name="M:Nemerle.Core.debudhelperMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core.debudhelperMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core.debudhelperMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core.debudhelperMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core.debudhelperMacro.SyntaxExtension" />
    <member name="T:Nemerle.Core.uncheckedMacro">
      <summary>
        <para>MACROS EXTENDING SYNTAX OF LANGUAGE
 The 'unchecked' macro, it is only a syntax-extension place holder.
 All the real work is done inside the typer.

</para>
      </summary>
    </member>
    <member name="M:Nemerle.Core.uncheckedMacro.#ctor" />
    <member name="F:Nemerle.Core.uncheckedMacro.my_usage" />
    <member name="F:Nemerle.Core.uncheckedMacro.keywords" />
    <member name="M:Nemerle.Core.uncheckedMacro.#cctor" />
    <member name="M:Nemerle.Core.uncheckedMacro.get_Location" />
    <member name="P:Nemerle.Core.uncheckedMacro.Location" />
    <member name="M:Nemerle.Core.uncheckedMacro.get_IsInherited" />
    <member name="P:Nemerle.Core.uncheckedMacro.IsInherited" />
    <member name="M:Nemerle.Core.uncheckedMacro.get_Keywords" />
    <member name="P:Nemerle.Core.uncheckedMacro.Keywords" />
    <member name="M:Nemerle.Core.uncheckedMacro.GetName" />
    <member name="M:Nemerle.Core.uncheckedMacro.get_Name" />
    <member name="P:Nemerle.Core.uncheckedMacro.Name" />
    <member name="M:Nemerle.Core.uncheckedMacro.get_Namespace" />
    <member name="P:Nemerle.Core.uncheckedMacro.Namespace" />
    <member name="M:Nemerle.Core.uncheckedMacro.GetNamespace" />
    <member name="M:Nemerle.Core.uncheckedMacro.get_Usage" />
    <member name="P:Nemerle.Core.uncheckedMacro.Usage" />
    <member name="M:Nemerle.Core.uncheckedMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core.uncheckedMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core.uncheckedMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core.uncheckedMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core.uncheckedMacro.SyntaxExtension" />
    <member name="T:Nemerle.Core.checkedMacro">
      <summary>
        <para>The 'checked' macro, it is only a syntax-extension place holder.
 All the real work is done inside the typer.

</para>
      </summary>
    </member>
    <member name="M:Nemerle.Core.checkedMacro.#ctor" />
    <member name="F:Nemerle.Core.checkedMacro.my_usage" />
    <member name="F:Nemerle.Core.checkedMacro.keywords" />
    <member name="M:Nemerle.Core.checkedMacro.#cctor" />
    <member name="M:Nemerle.Core.checkedMacro.get_Location" />
    <member name="P:Nemerle.Core.checkedMacro.Location" />
    <member name="M:Nemerle.Core.checkedMacro.get_IsInherited" />
    <member name="P:Nemerle.Core.checkedMacro.IsInherited" />
    <member name="M:Nemerle.Core.checkedMacro.get_Keywords" />
    <member name="P:Nemerle.Core.checkedMacro.Keywords" />
    <member name="M:Nemerle.Core.checkedMacro.GetName" />
    <member name="M:Nemerle.Core.checkedMacro.get_Name" />
    <member name="P:Nemerle.Core.checkedMacro.Name" />
    <member name="M:Nemerle.Core.checkedMacro.get_Namespace" />
    <member name="P:Nemerle.Core.checkedMacro.Namespace" />
    <member name="M:Nemerle.Core.checkedMacro.GetNamespace" />
    <member name="M:Nemerle.Core.checkedMacro.get_Usage" />
    <member name="P:Nemerle.Core.checkedMacro.Usage" />
    <member name="M:Nemerle.Core.checkedMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core.checkedMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core.checkedMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core.checkedMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core.checkedMacro.SyntaxExtension" />
    <member name="T:Nemerle.Core.yieldMacro">
      <summary>
        <para>Yet another syntax extender.

</para>
      </summary>
    </member>
    <member name="M:Nemerle.Core.yieldMacro.#ctor" />
    <member name="F:Nemerle.Core.yieldMacro.my_usage" />
    <member name="F:Nemerle.Core.yieldMacro.keywords" />
    <member name="M:Nemerle.Core.yieldMacro.#cctor" />
    <member name="M:Nemerle.Core.yieldMacro.get_Location" />
    <member name="P:Nemerle.Core.yieldMacro.Location" />
    <member name="M:Nemerle.Core.yieldMacro.get_IsInherited" />
    <member name="P:Nemerle.Core.yieldMacro.IsInherited" />
    <member name="M:Nemerle.Core.yieldMacro.get_Keywords" />
    <member name="P:Nemerle.Core.yieldMacro.Keywords" />
    <member name="M:Nemerle.Core.yieldMacro.GetName" />
    <member name="M:Nemerle.Core.yieldMacro.get_Name" />
    <member name="P:Nemerle.Core.yieldMacro.Name" />
    <member name="M:Nemerle.Core.yieldMacro.get_Namespace" />
    <member name="P:Nemerle.Core.yieldMacro.Namespace" />
    <member name="M:Nemerle.Core.yieldMacro.GetNamespace" />
    <member name="M:Nemerle.Core.yieldMacro.get_Usage" />
    <member name="P:Nemerle.Core.yieldMacro.Usage" />
    <member name="M:Nemerle.Core.yieldMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core.yieldMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core.yieldMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core.yieldMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core.yieldMacro.SyntaxExtension" />
    <member name="T:Nemerle.Core.ifMacro">
      <summary>
        <para>specialized macro for [if] condition with good warning messages,
      it performs typing of given expressions to check their type
      correctness

</para>
      </summary>
    </member>
    <member name="M:Nemerle.Core.ifMacro.#ctor" />
    <member name="F:Nemerle.Core.ifMacro.my_usage" />
    <member name="F:Nemerle.Core.ifMacro.keywords" />
    <member name="M:Nemerle.Core.ifMacro.#cctor" />
    <member name="M:Nemerle.Core.ifMacro.get_Location" />
    <member name="P:Nemerle.Core.ifMacro.Location" />
    <member name="M:Nemerle.Core.ifMacro.get_IsInherited" />
    <member name="P:Nemerle.Core.ifMacro.IsInherited" />
    <member name="M:Nemerle.Core.ifMacro.get_Keywords" />
    <member name="P:Nemerle.Core.ifMacro.Keywords" />
    <member name="M:Nemerle.Core.ifMacro.GetName" />
    <member name="M:Nemerle.Core.ifMacro.get_Name" />
    <member name="P:Nemerle.Core.ifMacro.Name" />
    <member name="M:Nemerle.Core.ifMacro.get_Namespace" />
    <member name="P:Nemerle.Core.ifMacro.Namespace" />
    <member name="M:Nemerle.Core.ifMacro.GetNamespace" />
    <member name="M:Nemerle.Core.ifMacro.get_Usage" />
    <member name="P:Nemerle.Core.ifMacro.Usage" />
    <member name="M:Nemerle.Core.ifMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core.ifMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core.ifMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core.ifMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core.ifMacro.SyntaxExtension" />
    <member name="T:Nemerle.Core.whenmacroMacro">
      <summary>
        <para>shortcut for [if (cond) body else ()]
</para>
      </summary>
    </member>
    <member name="M:Nemerle.Core.whenmacroMacro.#ctor" />
    <member name="F:Nemerle.Core.whenmacroMacro.my_usage" />
    <member name="F:Nemerle.Core.whenmacroMacro.keywords" />
    <member name="M:Nemerle.Core.whenmacroMacro.#cctor" />
    <member name="M:Nemerle.Core.whenmacroMacro.get_Location" />
    <member name="P:Nemerle.Core.whenmacroMacro.Location" />
    <member name="M:Nemerle.Core.whenmacroMacro.get_IsInherited" />
    <member name="P:Nemerle.Core.whenmacroMacro.IsInherited" />
    <member name="M:Nemerle.Core.whenmacroMacro.get_Keywords" />
    <member name="P:Nemerle.Core.whenmacroMacro.Keywords" />
    <member name="M:Nemerle.Core.whenmacroMacro.GetName" />
    <member name="M:Nemerle.Core.whenmacroMacro.get_Name" />
    <member name="P:Nemerle.Core.whenmacroMacro.Name" />
    <member name="M:Nemerle.Core.whenmacroMacro.get_Namespace" />
    <member name="P:Nemerle.Core.whenmacroMacro.Namespace" />
    <member name="M:Nemerle.Core.whenmacroMacro.GetNamespace" />
    <member name="M:Nemerle.Core.whenmacroMacro.get_Usage" />
    <member name="P:Nemerle.Core.whenmacroMacro.Usage" />
    <member name="M:Nemerle.Core.whenmacroMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core.whenmacroMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core.whenmacroMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core.whenmacroMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core.whenmacroMacro.SyntaxExtension" />
    <member name="T:Nemerle.Core.Internal.IfImpl" />
    <member name="M:Nemerle.Core.Internal.IfImpl.Impl(Nemerle.Compiler.Parsetree.PExpr,Nemerle.Compiler.Parsetree.PExpr,Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="T:Nemerle.Core.whileMacro">
      <summary>
        <para>this macro provides convenient way to write a simple while loop,
      which performs execution of [body] parameter as long as
      [condition] is true

</para>
      </summary>
    </member>
    <member name="M:Nemerle.Core.whileMacro.#ctor" />
    <member name="F:Nemerle.Core.whileMacro.my_usage" />
    <member name="F:Nemerle.Core.whileMacro.keywords" />
    <member name="M:Nemerle.Core.whileMacro.#cctor" />
    <member name="M:Nemerle.Core.whileMacro.get_Location" />
    <member name="P:Nemerle.Core.whileMacro.Location" />
    <member name="M:Nemerle.Core.whileMacro.get_IsInherited" />
    <member name="P:Nemerle.Core.whileMacro.IsInherited" />
    <member name="M:Nemerle.Core.whileMacro.get_Keywords" />
    <member name="P:Nemerle.Core.whileMacro.Keywords" />
    <member name="M:Nemerle.Core.whileMacro.GetName" />
    <member name="M:Nemerle.Core.whileMacro.get_Name" />
    <member name="P:Nemerle.Core.whileMacro.Name" />
    <member name="M:Nemerle.Core.whileMacro.get_Namespace" />
    <member name="P:Nemerle.Core.whileMacro.Namespace" />
    <member name="M:Nemerle.Core.whileMacro.GetNamespace" />
    <member name="M:Nemerle.Core.whileMacro.get_Usage" />
    <member name="P:Nemerle.Core.whileMacro.Usage" />
    <member name="M:Nemerle.Core.whileMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core.whileMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core.whileMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core.whileMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core.whileMacro.SyntaxExtension" />
    <member name="T:Nemerle.Core.WhileOtherwiseMacro">
      <summary>
        <para>while .. otherwise macro.
 else block is called when while block was not called.

</para>
      </summary>
    </member>
    <member name="M:Nemerle.Core.WhileOtherwiseMacro.#ctor" />
    <member name="F:Nemerle.Core.WhileOtherwiseMacro.my_usage" />
    <member name="F:Nemerle.Core.WhileOtherwiseMacro.keywords" />
    <member name="M:Nemerle.Core.WhileOtherwiseMacro.#cctor" />
    <member name="M:Nemerle.Core.WhileOtherwiseMacro.get_Location" />
    <member name="P:Nemerle.Core.WhileOtherwiseMacro.Location" />
    <member name="M:Nemerle.Core.WhileOtherwiseMacro.get_IsInherited" />
    <member name="P:Nemerle.Core.WhileOtherwiseMacro.IsInherited" />
    <member name="M:Nemerle.Core.WhileOtherwiseMacro.get_Keywords" />
    <member name="P:Nemerle.Core.WhileOtherwiseMacro.Keywords" />
    <member name="M:Nemerle.Core.WhileOtherwiseMacro.GetName" />
    <member name="M:Nemerle.Core.WhileOtherwiseMacro.get_Name" />
    <member name="P:Nemerle.Core.WhileOtherwiseMacro.Name" />
    <member name="M:Nemerle.Core.WhileOtherwiseMacro.get_Namespace" />
    <member name="P:Nemerle.Core.WhileOtherwiseMacro.Namespace" />
    <member name="M:Nemerle.Core.WhileOtherwiseMacro.GetNamespace" />
    <member name="M:Nemerle.Core.WhileOtherwiseMacro.get_Usage" />
    <member name="P:Nemerle.Core.WhileOtherwiseMacro.Usage" />
    <member name="M:Nemerle.Core.WhileOtherwiseMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core.WhileOtherwiseMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core.WhileOtherwiseMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core.WhileOtherwiseMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core.WhileOtherwiseMacro.SyntaxExtension" />
    <member name="T:Nemerle.Core.repeatmacroMacro" />
    <member name="M:Nemerle.Core.repeatmacroMacro.#ctor" />
    <member name="F:Nemerle.Core.repeatmacroMacro.my_usage" />
    <member name="F:Nemerle.Core.repeatmacroMacro.keywords" />
    <member name="M:Nemerle.Core.repeatmacroMacro.#cctor" />
    <member name="M:Nemerle.Core.repeatmacroMacro.get_Location" />
    <member name="P:Nemerle.Core.repeatmacroMacro.Location" />
    <member name="M:Nemerle.Core.repeatmacroMacro.get_IsInherited" />
    <member name="P:Nemerle.Core.repeatmacroMacro.IsInherited" />
    <member name="M:Nemerle.Core.repeatmacroMacro.get_Keywords" />
    <member name="P:Nemerle.Core.repeatmacroMacro.Keywords" />
    <member name="M:Nemerle.Core.repeatmacroMacro.GetName" />
    <member name="M:Nemerle.Core.repeatmacroMacro.get_Name" />
    <member name="P:Nemerle.Core.repeatmacroMacro.Name" />
    <member name="M:Nemerle.Core.repeatmacroMacro.get_Namespace" />
    <member name="P:Nemerle.Core.repeatmacroMacro.Namespace" />
    <member name="M:Nemerle.Core.repeatmacroMacro.GetNamespace" />
    <member name="M:Nemerle.Core.repeatmacroMacro.get_Usage" />
    <member name="P:Nemerle.Core.repeatmacroMacro.Usage" />
    <member name="M:Nemerle.Core.repeatmacroMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core.repeatmacroMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core.repeatmacroMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core.repeatmacroMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core.repeatmacroMacro.SyntaxExtension" />
    <member name="T:Nemerle.Core.forMacro" />
    <member name="M:Nemerle.Core.forMacro.#ctor" />
    <member name="F:Nemerle.Core.forMacro.my_usage" />
    <member name="F:Nemerle.Core.forMacro.keywords" />
    <member name="M:Nemerle.Core.forMacro.#cctor" />
    <member name="M:Nemerle.Core.forMacro.get_Location" />
    <member name="P:Nemerle.Core.forMacro.Location" />
    <member name="M:Nemerle.Core.forMacro.get_IsInherited" />
    <member name="P:Nemerle.Core.forMacro.IsInherited" />
    <member name="M:Nemerle.Core.forMacro.get_Keywords" />
    <member name="P:Nemerle.Core.forMacro.Keywords" />
    <member name="M:Nemerle.Core.forMacro.GetName" />
    <member name="M:Nemerle.Core.forMacro.get_Name" />
    <member name="P:Nemerle.Core.forMacro.Name" />
    <member name="M:Nemerle.Core.forMacro.get_Namespace" />
    <member name="P:Nemerle.Core.forMacro.Namespace" />
    <member name="M:Nemerle.Core.forMacro.GetNamespace" />
    <member name="M:Nemerle.Core.forMacro.get_Usage" />
    <member name="P:Nemerle.Core.forMacro.Usage" />
    <member name="M:Nemerle.Core.forMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core.forMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core.forMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core.forMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core.forMacro.SyntaxExtension" />
    <member name="T:Nemerle.Core.ForOtherwiseMacro">
      <summary>
        <para>for .. otherwise macro.
 else block is called when for block was not called.

</para>
      </summary>
    </member>
    <member name="M:Nemerle.Core.ForOtherwiseMacro.#ctor" />
    <member name="F:Nemerle.Core.ForOtherwiseMacro.my_usage" />
    <member name="F:Nemerle.Core.ForOtherwiseMacro.keywords" />
    <member name="M:Nemerle.Core.ForOtherwiseMacro.#cctor" />
    <member name="M:Nemerle.Core.ForOtherwiseMacro.get_Location" />
    <member name="P:Nemerle.Core.ForOtherwiseMacro.Location" />
    <member name="M:Nemerle.Core.ForOtherwiseMacro.get_IsInherited" />
    <member name="P:Nemerle.Core.ForOtherwiseMacro.IsInherited" />
    <member name="M:Nemerle.Core.ForOtherwiseMacro.get_Keywords" />
    <member name="P:Nemerle.Core.ForOtherwiseMacro.Keywords" />
    <member name="M:Nemerle.Core.ForOtherwiseMacro.GetName" />
    <member name="M:Nemerle.Core.ForOtherwiseMacro.get_Name" />
    <member name="P:Nemerle.Core.ForOtherwiseMacro.Name" />
    <member name="M:Nemerle.Core.ForOtherwiseMacro.get_Namespace" />
    <member name="P:Nemerle.Core.ForOtherwiseMacro.Namespace" />
    <member name="M:Nemerle.Core.ForOtherwiseMacro.GetNamespace" />
    <member name="M:Nemerle.Core.ForOtherwiseMacro.get_Usage" />
    <member name="P:Nemerle.Core.ForOtherwiseMacro.Usage" />
    <member name="M:Nemerle.Core.ForOtherwiseMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core.ForOtherwiseMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core.ForOtherwiseMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core.ForOtherwiseMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core.ForOtherwiseMacro.SyntaxExtension" />
    <member name="T:Nemerle.Core.unlessMacro">
      <summary>
        <para>shortcut for [if (cond) () else body]
</para>
      </summary>
    </member>
    <member name="M:Nemerle.Core.unlessMacro.#ctor" />
    <member name="F:Nemerle.Core.unlessMacro.my_usage" />
    <member name="F:Nemerle.Core.unlessMacro.keywords" />
    <member name="M:Nemerle.Core.unlessMacro.#cctor" />
    <member name="M:Nemerle.Core.unlessMacro.get_Location" />
    <member name="P:Nemerle.Core.unlessMacro.Location" />
    <member name="M:Nemerle.Core.unlessMacro.get_IsInherited" />
    <member name="P:Nemerle.Core.unlessMacro.IsInherited" />
    <member name="M:Nemerle.Core.unlessMacro.get_Keywords" />
    <member name="P:Nemerle.Core.unlessMacro.Keywords" />
    <member name="M:Nemerle.Core.unlessMacro.GetName" />
    <member name="M:Nemerle.Core.unlessMacro.get_Name" />
    <member name="P:Nemerle.Core.unlessMacro.Name" />
    <member name="M:Nemerle.Core.unlessMacro.get_Namespace" />
    <member name="P:Nemerle.Core.unlessMacro.Namespace" />
    <member name="M:Nemerle.Core.unlessMacro.GetNamespace" />
    <member name="M:Nemerle.Core.unlessMacro.get_Usage" />
    <member name="P:Nemerle.Core.unlessMacro.Usage" />
    <member name="M:Nemerle.Core.unlessMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core.unlessMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core.unlessMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core.unlessMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core.unlessMacro.SyntaxExtension" />
    <member name="T:Nemerle.Core.usingMacro">
      <summary>
        <para>macro providing C# 'using' functionality
      http://msdn.microsoft.com/library/default.asp?url=/library/en-us/csspec/html/vclrfcsharpspec_8.asp
      http://msdn.microsoft.com/library/default.asp?url=/library/en-us/csref/html/vclrfusingstatement.asp

</para>
      </summary>
    </member>
    <member name="M:Nemerle.Core.usingMacro.#ctor" />
    <member name="F:Nemerle.Core.usingMacro.my_usage" />
    <member name="F:Nemerle.Core.usingMacro.keywords" />
    <member name="M:Nemerle.Core.usingMacro.#cctor" />
    <member name="M:Nemerle.Core.usingMacro.get_Location" />
    <member name="P:Nemerle.Core.usingMacro.Location" />
    <member name="M:Nemerle.Core.usingMacro.get_IsInherited" />
    <member name="P:Nemerle.Core.usingMacro.IsInherited" />
    <member name="M:Nemerle.Core.usingMacro.get_Keywords" />
    <member name="P:Nemerle.Core.usingMacro.Keywords" />
    <member name="M:Nemerle.Core.usingMacro.GetName" />
    <member name="M:Nemerle.Core.usingMacro.get_Name" />
    <member name="P:Nemerle.Core.usingMacro.Name" />
    <member name="M:Nemerle.Core.usingMacro.get_Namespace" />
    <member name="P:Nemerle.Core.usingMacro.Namespace" />
    <member name="M:Nemerle.Core.usingMacro.GetNamespace" />
    <member name="M:Nemerle.Core.usingMacro.get_Usage" />
    <member name="P:Nemerle.Core.usingMacro.Usage" />
    <member name="M:Nemerle.Core.usingMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core.usingMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core.usingMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core.usingMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core.usingMacro.SyntaxExtension" />
    <member name="T:Nemerle.Core.using_catchMacro" />
    <member name="M:Nemerle.Core.using_catchMacro.#ctor" />
    <member name="F:Nemerle.Core.using_catchMacro.my_usage" />
    <member name="F:Nemerle.Core.using_catchMacro.keywords" />
    <member name="M:Nemerle.Core.using_catchMacro.#cctor" />
    <member name="M:Nemerle.Core.using_catchMacro.get_Location" />
    <member name="P:Nemerle.Core.using_catchMacro.Location" />
    <member name="M:Nemerle.Core.using_catchMacro.get_IsInherited" />
    <member name="P:Nemerle.Core.using_catchMacro.IsInherited" />
    <member name="M:Nemerle.Core.using_catchMacro.get_Keywords" />
    <member name="P:Nemerle.Core.using_catchMacro.Keywords" />
    <member name="M:Nemerle.Core.using_catchMacro.GetName" />
    <member name="M:Nemerle.Core.using_catchMacro.get_Name" />
    <member name="P:Nemerle.Core.using_catchMacro.Name" />
    <member name="M:Nemerle.Core.using_catchMacro.get_Namespace" />
    <member name="P:Nemerle.Core.using_catchMacro.Namespace" />
    <member name="M:Nemerle.Core.using_catchMacro.GetNamespace" />
    <member name="M:Nemerle.Core.using_catchMacro.get_Usage" />
    <member name="P:Nemerle.Core.using_catchMacro.Usage" />
    <member name="M:Nemerle.Core.using_catchMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core.using_catchMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core.using_catchMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core.using_catchMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core.using_catchMacro.SyntaxExtension" />
    <member name="T:Nemerle.Core.UsingMacroGenerator" />
    <member name="M:Nemerle.Core.UsingMacroGenerator.ConvertMatchToCatchCases(Nemerle.Compiler.Parsetree.PExpr,Nemerle.Compiler.Typer)" />
    <member name="M:Nemerle.Core.UsingMacroGenerator.ProcessUsingArgs(Nemerle.Compiler.Parsetree.PExpr[])" />
    <member name="M:Nemerle.Core.UsingMacroGenerator.OutputExpression(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr},Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr},Nemerle.Compiler.Parsetree.PExpr,Nemerle.Core.list{Nemerle.Compiler.Parsetree.TryCase})" />
    <member name="T:Nemerle.Core.maybe_valuetype_disposeMacro" />
    <member name="M:Nemerle.Core.maybe_valuetype_disposeMacro.#ctor" />
    <member name="F:Nemerle.Core.maybe_valuetype_disposeMacro.my_usage" />
    <member name="F:Nemerle.Core.maybe_valuetype_disposeMacro.keywords" />
    <member name="M:Nemerle.Core.maybe_valuetype_disposeMacro.#cctor" />
    <member name="M:Nemerle.Core.maybe_valuetype_disposeMacro.get_Location" />
    <member name="P:Nemerle.Core.maybe_valuetype_disposeMacro.Location" />
    <member name="M:Nemerle.Core.maybe_valuetype_disposeMacro.get_IsInherited" />
    <member name="P:Nemerle.Core.maybe_valuetype_disposeMacro.IsInherited" />
    <member name="M:Nemerle.Core.maybe_valuetype_disposeMacro.get_Keywords" />
    <member name="P:Nemerle.Core.maybe_valuetype_disposeMacro.Keywords" />
    <member name="M:Nemerle.Core.maybe_valuetype_disposeMacro.GetName" />
    <member name="M:Nemerle.Core.maybe_valuetype_disposeMacro.get_Name" />
    <member name="P:Nemerle.Core.maybe_valuetype_disposeMacro.Name" />
    <member name="M:Nemerle.Core.maybe_valuetype_disposeMacro.get_Namespace" />
    <member name="P:Nemerle.Core.maybe_valuetype_disposeMacro.Namespace" />
    <member name="M:Nemerle.Core.maybe_valuetype_disposeMacro.GetNamespace" />
    <member name="M:Nemerle.Core.maybe_valuetype_disposeMacro.get_Usage" />
    <member name="P:Nemerle.Core.maybe_valuetype_disposeMacro.Usage" />
    <member name="M:Nemerle.Core.maybe_valuetype_disposeMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core.maybe_valuetype_disposeMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core.maybe_valuetype_disposeMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core.maybe_valuetype_disposeMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core.maybe_valuetype_disposeMacro.SyntaxExtension" />
    <member name="T:Nemerle.Core.lockMacro" />
    <member name="M:Nemerle.Core.lockMacro.#ctor" />
    <member name="F:Nemerle.Core.lockMacro.my_usage" />
    <member name="F:Nemerle.Core.lockMacro.keywords" />
    <member name="M:Nemerle.Core.lockMacro.#cctor" />
    <member name="M:Nemerle.Core.lockMacro.get_Location" />
    <member name="P:Nemerle.Core.lockMacro.Location" />
    <member name="M:Nemerle.Core.lockMacro.get_IsInherited" />
    <member name="P:Nemerle.Core.lockMacro.IsInherited" />
    <member name="M:Nemerle.Core.lockMacro.get_Keywords" />
    <member name="P:Nemerle.Core.lockMacro.Keywords" />
    <member name="M:Nemerle.Core.lockMacro.GetName" />
    <member name="M:Nemerle.Core.lockMacro.get_Name" />
    <member name="P:Nemerle.Core.lockMacro.Name" />
    <member name="M:Nemerle.Core.lockMacro.get_Namespace" />
    <member name="P:Nemerle.Core.lockMacro.Namespace" />
    <member name="M:Nemerle.Core.lockMacro.GetNamespace" />
    <member name="M:Nemerle.Core.lockMacro.get_Usage" />
    <member name="P:Nemerle.Core.lockMacro.Usage" />
    <member name="M:Nemerle.Core.lockMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core.lockMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core.lockMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core.lockMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core.lockMacro.SyntaxExtension" />
    <member name="T:Nemerle.Core.dowhileMacro" />
    <member name="M:Nemerle.Core.dowhileMacro.#ctor" />
    <member name="F:Nemerle.Core.dowhileMacro.my_usage" />
    <member name="F:Nemerle.Core.dowhileMacro.keywords" />
    <member name="M:Nemerle.Core.dowhileMacro.#cctor" />
    <member name="M:Nemerle.Core.dowhileMacro.get_Location" />
    <member name="P:Nemerle.Core.dowhileMacro.Location" />
    <member name="M:Nemerle.Core.dowhileMacro.get_IsInherited" />
    <member name="P:Nemerle.Core.dowhileMacro.IsInherited" />
    <member name="M:Nemerle.Core.dowhileMacro.get_Keywords" />
    <member name="P:Nemerle.Core.dowhileMacro.Keywords" />
    <member name="M:Nemerle.Core.dowhileMacro.GetName" />
    <member name="M:Nemerle.Core.dowhileMacro.get_Name" />
    <member name="P:Nemerle.Core.dowhileMacro.Name" />
    <member name="M:Nemerle.Core.dowhileMacro.get_Namespace" />
    <member name="P:Nemerle.Core.dowhileMacro.Namespace" />
    <member name="M:Nemerle.Core.dowhileMacro.GetNamespace" />
    <member name="M:Nemerle.Core.dowhileMacro.get_Usage" />
    <member name="P:Nemerle.Core.dowhileMacro.Usage" />
    <member name="M:Nemerle.Core.dowhileMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core.dowhileMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core.dowhileMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core.dowhileMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core.dowhileMacro.SyntaxExtension" />
    <member name="T:Nemerle.Core.ForeachModule" />
    <member name="M:Nemerle.Core.ForeachModule.ParseInExpr(Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="T:Nemerle.Core.foreachMacro">
      <summary>
        <para>The 'foreach' macro introduces a construction equivalent
 to C#'s 'foreach' keyword, iterating over a collection.

</para>
      </summary>
    </member>
    <member name="M:Nemerle.Core.foreachMacro._N_build_loops_30731(Nemerle.Core.foreachMacro._N_closureOf_multi_dim_case_30704,Nemerle.Core.foreachMacro._N_closureOf_Run_30490,System.Int32)" />
    <member name="M:Nemerle.Core.foreachMacro._N_make_for_array_30690(Nemerle.Core.foreachMacro._N_closureOf_Run_30490,System.Int32)" />
    <member name="M:Nemerle.Core.foreachMacro._N_make_for_list_30680(Nemerle.Core.foreachMacro._N_closureOf_Run_30490,Nemerle.Core.list{Nemerle.Compiler.TypeVar})" />
    <member name="M:Nemerle.Core.foreachMacro._N_wrapInTryFinally_30668(Nemerle.Compiler.Parsetree.PExpr,Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="M:Nemerle.Core.foreachMacro._N_make_for_enumerator_30617(Nemerle.Core.foreachMacro._N_closureOf_Run_30490,Nemerle.Compiler.TypeInfo)" />
    <member name="M:Nemerle.Core.foreachMacro._N_error_30604(Nemerle.Core.foreachMacro._N_closureOf_afterObtainCollectionType_30596,Nemerle.Core.option{Nemerle.Compiler.FixedType})" />
    <member name="M:Nemerle.Core.foreachMacro._N_decide_enumerator_pattern_30546(Nemerle.Core.foreachMacro._N_closureOf_Run_30490,Nemerle.Compiler.TypeInfo)" />
    <member name="M:Nemerle.Core.foreachMacro._N_build_definition_30520(Nemerle.Core.foreachMacro._N_closureOf_Run_30490,Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="M:Nemerle.Core.foreachMacro.#ctor">
      <summary>
        <para>The 'foreach' macro introduces a construction equivalent
 to C#'s 'foreach' keyword, iterating over a collection.

</para>
      </summary>
    </member>
    <member name="F:Nemerle.Core.foreachMacro.my_usage" />
    <member name="F:Nemerle.Core.foreachMacro.keywords" />
    <member name="M:Nemerle.Core.foreachMacro.#cctor" />
    <member name="M:Nemerle.Core.foreachMacro.get_Location" />
    <member name="P:Nemerle.Core.foreachMacro.Location" />
    <member name="M:Nemerle.Core.foreachMacro.get_IsInherited" />
    <member name="P:Nemerle.Core.foreachMacro.IsInherited" />
    <member name="M:Nemerle.Core.foreachMacro.get_Keywords" />
    <member name="P:Nemerle.Core.foreachMacro.Keywords" />
    <member name="M:Nemerle.Core.foreachMacro.GetName" />
    <member name="M:Nemerle.Core.foreachMacro.get_Name" />
    <member name="P:Nemerle.Core.foreachMacro.Name" />
    <member name="M:Nemerle.Core.foreachMacro.get_Namespace" />
    <member name="P:Nemerle.Core.foreachMacro.Namespace" />
    <member name="M:Nemerle.Core.foreachMacro.GetNamespace" />
    <member name="M:Nemerle.Core.foreachMacro.get_Usage" />
    <member name="P:Nemerle.Core.foreachMacro.Usage" />
    <member name="M:Nemerle.Core.foreachMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core.foreachMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core.foreachMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core.foreachMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core.foreachMacro.SyntaxExtension" />
    <member name="T:Nemerle.Core.ForeachOtherwiseMacro">
      <summary>
        <para>foreach .. otherwise macro.
 otherwise block is called when foreach block was not called.

</para>
      </summary>
    </member>
    <member name="M:Nemerle.Core.ForeachOtherwiseMacro.#ctor" />
    <member name="F:Nemerle.Core.ForeachOtherwiseMacro.my_usage" />
    <member name="F:Nemerle.Core.ForeachOtherwiseMacro.keywords" />
    <member name="M:Nemerle.Core.ForeachOtherwiseMacro.#cctor" />
    <member name="M:Nemerle.Core.ForeachOtherwiseMacro.get_Location" />
    <member name="P:Nemerle.Core.ForeachOtherwiseMacro.Location" />
    <member name="M:Nemerle.Core.ForeachOtherwiseMacro.get_IsInherited" />
    <member name="P:Nemerle.Core.ForeachOtherwiseMacro.IsInherited" />
    <member name="M:Nemerle.Core.ForeachOtherwiseMacro.get_Keywords" />
    <member name="P:Nemerle.Core.ForeachOtherwiseMacro.Keywords" />
    <member name="M:Nemerle.Core.ForeachOtherwiseMacro.GetName" />
    <member name="M:Nemerle.Core.ForeachOtherwiseMacro.get_Name" />
    <member name="P:Nemerle.Core.ForeachOtherwiseMacro.Name" />
    <member name="M:Nemerle.Core.ForeachOtherwiseMacro.get_Namespace" />
    <member name="P:Nemerle.Core.ForeachOtherwiseMacro.Namespace" />
    <member name="M:Nemerle.Core.ForeachOtherwiseMacro.GetNamespace" />
    <member name="M:Nemerle.Core.ForeachOtherwiseMacro.get_Usage" />
    <member name="P:Nemerle.Core.ForeachOtherwiseMacro.Usage" />
    <member name="M:Nemerle.Core.ForeachOtherwiseMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core.ForeachOtherwiseMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core.ForeachOtherwiseMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core.ForeachOtherwiseMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core.ForeachOtherwiseMacro.SyntaxExtension" />
    <member name="T:Nemerle.Core.ignoreMacro" />
    <member name="M:Nemerle.Core.ignoreMacro.#ctor" />
    <member name="F:Nemerle.Core.ignoreMacro.my_usage" />
    <member name="F:Nemerle.Core.ignoreMacro.keywords" />
    <member name="M:Nemerle.Core.ignoreMacro.#cctor" />
    <member name="M:Nemerle.Core.ignoreMacro.get_Location" />
    <member name="P:Nemerle.Core.ignoreMacro.Location" />
    <member name="M:Nemerle.Core.ignoreMacro.get_IsInherited" />
    <member name="P:Nemerle.Core.ignoreMacro.IsInherited" />
    <member name="M:Nemerle.Core.ignoreMacro.get_Keywords" />
    <member name="P:Nemerle.Core.ignoreMacro.Keywords" />
    <member name="M:Nemerle.Core.ignoreMacro.GetName" />
    <member name="M:Nemerle.Core.ignoreMacro.get_Name" />
    <member name="P:Nemerle.Core.ignoreMacro.Name" />
    <member name="M:Nemerle.Core.ignoreMacro.get_Namespace" />
    <member name="P:Nemerle.Core.ignoreMacro.Namespace" />
    <member name="M:Nemerle.Core.ignoreMacro.GetNamespace" />
    <member name="M:Nemerle.Core.ignoreMacro.get_Usage" />
    <member name="P:Nemerle.Core.ignoreMacro.Usage" />
    <member name="M:Nemerle.Core.ignoreMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core.ignoreMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core.ignoreMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core.ignoreMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core.ignoreMacro.SyntaxExtension" />
    <member name="T:Nemerle.Core.IgnoreParamsMacro" />
    <member name="M:Nemerle.Core.IgnoreParamsMacro.#ctor" />
    <member name="F:Nemerle.Core.IgnoreParamsMacro.my_usage" />
    <member name="F:Nemerle.Core.IgnoreParamsMacro.keywords" />
    <member name="M:Nemerle.Core.IgnoreParamsMacro.#cctor" />
    <member name="M:Nemerle.Core.IgnoreParamsMacro.get_Location" />
    <member name="P:Nemerle.Core.IgnoreParamsMacro.Location" />
    <member name="M:Nemerle.Core.IgnoreParamsMacro.get_IsInherited" />
    <member name="P:Nemerle.Core.IgnoreParamsMacro.IsInherited" />
    <member name="M:Nemerle.Core.IgnoreParamsMacro.get_Keywords" />
    <member name="P:Nemerle.Core.IgnoreParamsMacro.Keywords" />
    <member name="M:Nemerle.Core.IgnoreParamsMacro.GetName" />
    <member name="M:Nemerle.Core.IgnoreParamsMacro.get_Name" />
    <member name="P:Nemerle.Core.IgnoreParamsMacro.Name" />
    <member name="M:Nemerle.Core.IgnoreParamsMacro.get_Namespace" />
    <member name="P:Nemerle.Core.IgnoreParamsMacro.Namespace" />
    <member name="M:Nemerle.Core.IgnoreParamsMacro.GetNamespace" />
    <member name="M:Nemerle.Core.IgnoreParamsMacro.get_Usage" />
    <member name="P:Nemerle.Core.IgnoreParamsMacro.Usage" />
    <member name="M:Nemerle.Core.IgnoreParamsMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core.IgnoreParamsMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core.IgnoreParamsMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core.IgnoreParamsMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core.IgnoreParamsMacro.SyntaxExtension" />
    <member name="T:Nemerle.Core.abortMacro" />
    <member name="M:Nemerle.Core.abortMacro.#ctor" />
    <member name="F:Nemerle.Core.abortMacro.my_usage" />
    <member name="F:Nemerle.Core.abortMacro.keywords" />
    <member name="M:Nemerle.Core.abortMacro.#cctor" />
    <member name="M:Nemerle.Core.abortMacro.get_Location" />
    <member name="P:Nemerle.Core.abortMacro.Location" />
    <member name="M:Nemerle.Core.abortMacro.get_IsInherited" />
    <member name="P:Nemerle.Core.abortMacro.IsInherited" />
    <member name="M:Nemerle.Core.abortMacro.get_Keywords" />
    <member name="P:Nemerle.Core.abortMacro.Keywords" />
    <member name="M:Nemerle.Core.abortMacro.GetName" />
    <member name="M:Nemerle.Core.abortMacro.get_Name" />
    <member name="P:Nemerle.Core.abortMacro.Name" />
    <member name="M:Nemerle.Core.abortMacro.get_Namespace" />
    <member name="P:Nemerle.Core.abortMacro.Namespace" />
    <member name="M:Nemerle.Core.abortMacro.GetNamespace" />
    <member name="M:Nemerle.Core.abortMacro.get_Usage" />
    <member name="P:Nemerle.Core.abortMacro.Usage" />
    <member name="M:Nemerle.Core.abortMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core.abortMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core.abortMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core.abortMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core.abortMacro.SyntaxExtension" />
    <member name="T:Nemerle.Core.RecordIgnore_field_postscanMacro">
      <summary>
        <para>MACROS EXTENDING TYPE SYSTEM OF LANGUAGE
</para>
      </summary>
    </member>
    <member name="M:Nemerle.Core.RecordIgnore_field_postscanMacro.#ctor" />
    <member name="F:Nemerle.Core.RecordIgnore_field_postscanMacro.my_usage" />
    <member name="F:Nemerle.Core.RecordIgnore_field_postscanMacro.keywords" />
    <member name="M:Nemerle.Core.RecordIgnore_field_postscanMacro.#cctor" />
    <member name="M:Nemerle.Core.RecordIgnore_field_postscanMacro.get_Location" />
    <member name="P:Nemerle.Core.RecordIgnore_field_postscanMacro.Location" />
    <member name="M:Nemerle.Core.RecordIgnore_field_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.Core.RecordIgnore_field_postscanMacro.IsInherited" />
    <member name="M:Nemerle.Core.RecordIgnore_field_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.Core.RecordIgnore_field_postscanMacro.Keywords" />
    <member name="M:Nemerle.Core.RecordIgnore_field_postscanMacro.GetName" />
    <member name="M:Nemerle.Core.RecordIgnore_field_postscanMacro.get_Name" />
    <member name="P:Nemerle.Core.RecordIgnore_field_postscanMacro.Name" />
    <member name="M:Nemerle.Core.RecordIgnore_field_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.Core.RecordIgnore_field_postscanMacro.Namespace" />
    <member name="M:Nemerle.Core.RecordIgnore_field_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.Core.RecordIgnore_field_postscanMacro.get_Usage" />
    <member name="P:Nemerle.Core.RecordIgnore_field_postscanMacro.Usage" />
    <member name="M:Nemerle.Core.RecordIgnore_field_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core.RecordIgnore_field_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core.RecordIgnore_field_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core.RecordIgnore_field_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core.RecordIgnore_field_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.Core.RecordIgnore_property_postscanMacro" />
    <member name="M:Nemerle.Core.RecordIgnore_property_postscanMacro.#ctor" />
    <member name="F:Nemerle.Core.RecordIgnore_property_postscanMacro.my_usage" />
    <member name="F:Nemerle.Core.RecordIgnore_property_postscanMacro.keywords" />
    <member name="M:Nemerle.Core.RecordIgnore_property_postscanMacro.#cctor" />
    <member name="M:Nemerle.Core.RecordIgnore_property_postscanMacro.get_Location" />
    <member name="P:Nemerle.Core.RecordIgnore_property_postscanMacro.Location" />
    <member name="M:Nemerle.Core.RecordIgnore_property_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.Core.RecordIgnore_property_postscanMacro.IsInherited" />
    <member name="M:Nemerle.Core.RecordIgnore_property_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.Core.RecordIgnore_property_postscanMacro.Keywords" />
    <member name="M:Nemerle.Core.RecordIgnore_property_postscanMacro.GetName" />
    <member name="M:Nemerle.Core.RecordIgnore_property_postscanMacro.get_Name" />
    <member name="P:Nemerle.Core.RecordIgnore_property_postscanMacro.Name" />
    <member name="M:Nemerle.Core.RecordIgnore_property_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.Core.RecordIgnore_property_postscanMacro.Namespace" />
    <member name="M:Nemerle.Core.RecordIgnore_property_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.Core.RecordIgnore_property_postscanMacro.get_Usage" />
    <member name="P:Nemerle.Core.RecordIgnore_property_postscanMacro.Usage" />
    <member name="M:Nemerle.Core.RecordIgnore_property_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core.RecordIgnore_property_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core.RecordIgnore_property_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core.RecordIgnore_property_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core.RecordIgnore_property_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.Core.RecordIgnore_method_postscanMacro" />
    <member name="M:Nemerle.Core.RecordIgnore_method_postscanMacro.#ctor" />
    <member name="F:Nemerle.Core.RecordIgnore_method_postscanMacro.my_usage" />
    <member name="F:Nemerle.Core.RecordIgnore_method_postscanMacro.keywords" />
    <member name="M:Nemerle.Core.RecordIgnore_method_postscanMacro.#cctor" />
    <member name="M:Nemerle.Core.RecordIgnore_method_postscanMacro.get_Location" />
    <member name="P:Nemerle.Core.RecordIgnore_method_postscanMacro.Location" />
    <member name="M:Nemerle.Core.RecordIgnore_method_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.Core.RecordIgnore_method_postscanMacro.IsInherited" />
    <member name="M:Nemerle.Core.RecordIgnore_method_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.Core.RecordIgnore_method_postscanMacro.Keywords" />
    <member name="M:Nemerle.Core.RecordIgnore_method_postscanMacro.GetName" />
    <member name="M:Nemerle.Core.RecordIgnore_method_postscanMacro.get_Name" />
    <member name="P:Nemerle.Core.RecordIgnore_method_postscanMacro.Name" />
    <member name="M:Nemerle.Core.RecordIgnore_method_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.Core.RecordIgnore_method_postscanMacro.Namespace" />
    <member name="M:Nemerle.Core.RecordIgnore_method_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.Core.RecordIgnore_method_postscanMacro.get_Usage" />
    <member name="P:Nemerle.Core.RecordIgnore_method_postscanMacro.Usage" />
    <member name="M:Nemerle.Core.RecordIgnore_method_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core.RecordIgnore_method_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core.RecordIgnore_method_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core.RecordIgnore_method_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core.RecordIgnore_method_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.Core.Record_type_postscanMacro" />
    <member name="M:Nemerle.Core.Record_type_postscanMacro.#ctor" />
    <member name="F:Nemerle.Core.Record_type_postscanMacro.my_usage" />
    <member name="F:Nemerle.Core.Record_type_postscanMacro.keywords" />
    <member name="M:Nemerle.Core.Record_type_postscanMacro.#cctor" />
    <member name="M:Nemerle.Core.Record_type_postscanMacro.get_Location" />
    <member name="P:Nemerle.Core.Record_type_postscanMacro.Location" />
    <member name="M:Nemerle.Core.Record_type_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.Core.Record_type_postscanMacro.IsInherited" />
    <member name="M:Nemerle.Core.Record_type_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.Core.Record_type_postscanMacro.Keywords" />
    <member name="M:Nemerle.Core.Record_type_postscanMacro.GetName" />
    <member name="M:Nemerle.Core.Record_type_postscanMacro.get_Name" />
    <member name="P:Nemerle.Core.Record_type_postscanMacro.Name" />
    <member name="M:Nemerle.Core.Record_type_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.Core.Record_type_postscanMacro.Namespace" />
    <member name="M:Nemerle.Core.Record_type_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.Core.Record_type_postscanMacro.get_Usage" />
    <member name="P:Nemerle.Core.Record_type_postscanMacro.Usage" />
    <member name="M:Nemerle.Core.Record_type_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core.Record_type_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core.Record_type_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core.Record_type_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core.Record_type_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.Core.Record_type_preaddMacro" />
    <member name="M:Nemerle.Core.Record_type_preaddMacro.#ctor" />
    <member name="F:Nemerle.Core.Record_type_preaddMacro.my_usage" />
    <member name="F:Nemerle.Core.Record_type_preaddMacro.keywords" />
    <member name="M:Nemerle.Core.Record_type_preaddMacro.#cctor" />
    <member name="M:Nemerle.Core.Record_type_preaddMacro.get_Location" />
    <member name="P:Nemerle.Core.Record_type_preaddMacro.Location" />
    <member name="M:Nemerle.Core.Record_type_preaddMacro.get_IsInherited" />
    <member name="P:Nemerle.Core.Record_type_preaddMacro.IsInherited" />
    <member name="M:Nemerle.Core.Record_type_preaddMacro.get_Keywords" />
    <member name="P:Nemerle.Core.Record_type_preaddMacro.Keywords" />
    <member name="M:Nemerle.Core.Record_type_preaddMacro.GetName" />
    <member name="M:Nemerle.Core.Record_type_preaddMacro.get_Name" />
    <member name="P:Nemerle.Core.Record_type_preaddMacro.Name" />
    <member name="M:Nemerle.Core.Record_type_preaddMacro.get_Namespace" />
    <member name="P:Nemerle.Core.Record_type_preaddMacro.Namespace" />
    <member name="M:Nemerle.Core.Record_type_preaddMacro.GetNamespace" />
    <member name="M:Nemerle.Core.Record_type_preaddMacro.get_Usage" />
    <member name="P:Nemerle.Core.Record_type_preaddMacro.Usage" />
    <member name="M:Nemerle.Core.Record_type_preaddMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core.Record_type_preaddMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core.Record_type_preaddMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core.Record_type_preaddMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core.Record_type_preaddMacro.SyntaxExtension" />
    <member name="T:Nemerle.Core.MacrosHelper" />
    <member name="M:Nemerle.Core.MacrosHelper._N_matchNotNull_32155(Nemerle.Core.MacrosHelper._N_closureOf_CollectFields_32113,System.String)" />
    <member name="M:Nemerle.Core.MacrosHelper._N_isIgnored_32125(Nemerle.Core.MacrosHelper._N_closureOf_CollectFields_32113,Nemerle.Compiler.Parsetree.ClassMember)" />
    <member name="M:Nemerle.Core.MacrosHelper._N_getNewName_31943(Nemerle.Compiler.Parsetree.ClassMember.Field)" />
    <member name="F:Nemerle.Core.MacrosHelper.InstanceFlags" />
    <member name="F:Nemerle.Core.MacrosHelper.IgnoreMapKey" />
    <member name="M:Nemerle.Core.MacrosHelper.MakeRecord(Nemerle.Compiler.TypeBuilder,Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core.MacrosHelper.InheritConstructorsAddingFields(Nemerle.Compiler.TypeBuilder,Nemerle.Core.list{Nemerle.Builtins.Tuple{Nemerle.Compiler.Parsetree.ClassMember.Field,System.Boolean}},Nemerle.Compiler.NemerleModifiers)" />
    <member name="M:Nemerle.Core.MacrosHelper.AnalyseNameInclusionPatterns(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core.MacrosHelper.NameMatchesPatterns(System.String,Nemerle.Builtins.Tuple{System.Text.RegularExpressions.Regex,System.Text.RegularExpressions.Regex,System.Text.RegularExpressions.Regex})" />
    <member name="M:Nemerle.Core.MacrosHelper.MarkIgnored(Nemerle.Compiler.TypeBuilder,Nemerle.Compiler.Parsetree.ClassMember)" />
    <member name="M:Nemerle.Core.MacrosHelper.CollectFields(Nemerle.Compiler.TypeBuilder,Nemerle.Builtins.Tuple{System.Text.RegularExpressions.Regex,System.Text.RegularExpressions.Regex,System.Text.RegularExpressions.Regex})" />
    <member name="M:Nemerle.Core.MacrosHelper.CollectBaseConstructors(Nemerle.Compiler.TypeBuilder)" />
    <member name="T:Nemerle.Core.MacrosHelper.BaseConstructor" />
    <member name="T:Nemerle.Core.ExternallyVisibleOptions_type_postscanMacro" />
    <member name="M:Nemerle.Core.ExternallyVisibleOptions_type_postscanMacro.#ctor" />
    <member name="F:Nemerle.Core.ExternallyVisibleOptions_type_postscanMacro.my_usage" />
    <member name="F:Nemerle.Core.ExternallyVisibleOptions_type_postscanMacro.keywords" />
    <member name="M:Nemerle.Core.ExternallyVisibleOptions_type_postscanMacro.#cctor" />
    <member name="M:Nemerle.Core.ExternallyVisibleOptions_type_postscanMacro.get_Location" />
    <member name="P:Nemerle.Core.ExternallyVisibleOptions_type_postscanMacro.Location" />
    <member name="M:Nemerle.Core.ExternallyVisibleOptions_type_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.Core.ExternallyVisibleOptions_type_postscanMacro.IsInherited" />
    <member name="M:Nemerle.Core.ExternallyVisibleOptions_type_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.Core.ExternallyVisibleOptions_type_postscanMacro.Keywords" />
    <member name="M:Nemerle.Core.ExternallyVisibleOptions_type_postscanMacro.GetName" />
    <member name="M:Nemerle.Core.ExternallyVisibleOptions_type_postscanMacro.get_Name" />
    <member name="P:Nemerle.Core.ExternallyVisibleOptions_type_postscanMacro.Name" />
    <member name="M:Nemerle.Core.ExternallyVisibleOptions_type_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.Core.ExternallyVisibleOptions_type_postscanMacro.Namespace" />
    <member name="M:Nemerle.Core.ExternallyVisibleOptions_type_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.Core.ExternallyVisibleOptions_type_postscanMacro.get_Usage" />
    <member name="P:Nemerle.Core.ExternallyVisibleOptions_type_postscanMacro.Usage" />
    <member name="M:Nemerle.Core.ExternallyVisibleOptions_type_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core.ExternallyVisibleOptions_type_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core.ExternallyVisibleOptions_type_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core.ExternallyVisibleOptions_type_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core.ExternallyVisibleOptions_type_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.Core._N_ExtensionMethodOnThisParameter_param_postscanMacro" />
    <member name="M:Nemerle.Core._N_ExtensionMethodOnThisParameter_param_postscanMacro.#ctor" />
    <member name="F:Nemerle.Core._N_ExtensionMethodOnThisParameter_param_postscanMacro.my_usage" />
    <member name="F:Nemerle.Core._N_ExtensionMethodOnThisParameter_param_postscanMacro.keywords" />
    <member name="M:Nemerle.Core._N_ExtensionMethodOnThisParameter_param_postscanMacro.#cctor" />
    <member name="M:Nemerle.Core._N_ExtensionMethodOnThisParameter_param_postscanMacro.get_Location" />
    <member name="P:Nemerle.Core._N_ExtensionMethodOnThisParameter_param_postscanMacro.Location" />
    <member name="M:Nemerle.Core._N_ExtensionMethodOnThisParameter_param_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.Core._N_ExtensionMethodOnThisParameter_param_postscanMacro.IsInherited" />
    <member name="M:Nemerle.Core._N_ExtensionMethodOnThisParameter_param_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.Core._N_ExtensionMethodOnThisParameter_param_postscanMacro.Keywords" />
    <member name="M:Nemerle.Core._N_ExtensionMethodOnThisParameter_param_postscanMacro.GetName" />
    <member name="M:Nemerle.Core._N_ExtensionMethodOnThisParameter_param_postscanMacro.get_Name" />
    <member name="P:Nemerle.Core._N_ExtensionMethodOnThisParameter_param_postscanMacro.Name" />
    <member name="M:Nemerle.Core._N_ExtensionMethodOnThisParameter_param_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.Core._N_ExtensionMethodOnThisParameter_param_postscanMacro.Namespace" />
    <member name="M:Nemerle.Core._N_ExtensionMethodOnThisParameter_param_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.Core._N_ExtensionMethodOnThisParameter_param_postscanMacro.get_Usage" />
    <member name="P:Nemerle.Core._N_ExtensionMethodOnThisParameter_param_postscanMacro.Usage" />
    <member name="M:Nemerle.Core._N_ExtensionMethodOnThisParameter_param_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core._N_ExtensionMethodOnThisParameter_param_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core._N_ExtensionMethodOnThisParameter_param_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core._N_ExtensionMethodOnThisParameter_param_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core._N_ExtensionMethodOnThisParameter_param_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.Macros.Hygienic_method_postscanMacro" />
    <member name="M:Nemerle.Macros.Hygienic_method_postscanMacro.#ctor" />
    <member name="F:Nemerle.Macros.Hygienic_method_postscanMacro.my_usage" />
    <member name="F:Nemerle.Macros.Hygienic_method_postscanMacro.keywords" />
    <member name="M:Nemerle.Macros.Hygienic_method_postscanMacro.#cctor" />
    <member name="M:Nemerle.Macros.Hygienic_method_postscanMacro.get_Location" />
    <member name="P:Nemerle.Macros.Hygienic_method_postscanMacro.Location" />
    <member name="M:Nemerle.Macros.Hygienic_method_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.Macros.Hygienic_method_postscanMacro.IsInherited" />
    <member name="M:Nemerle.Macros.Hygienic_method_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.Macros.Hygienic_method_postscanMacro.Keywords" />
    <member name="M:Nemerle.Macros.Hygienic_method_postscanMacro.GetName" />
    <member name="M:Nemerle.Macros.Hygienic_method_postscanMacro.get_Name" />
    <member name="P:Nemerle.Macros.Hygienic_method_postscanMacro.Name" />
    <member name="M:Nemerle.Macros.Hygienic_method_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.Macros.Hygienic_method_postscanMacro.Namespace" />
    <member name="M:Nemerle.Macros.Hygienic_method_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.Macros.Hygienic_method_postscanMacro.get_Usage" />
    <member name="P:Nemerle.Macros.Hygienic_method_postscanMacro.Usage" />
    <member name="M:Nemerle.Macros.Hygienic_method_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Macros.Hygienic_method_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Macros.Hygienic_method_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Macros.Hygienic_method_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Macros.Hygienic_method_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.Macros.DefineCTXMacro" />
    <member name="M:Nemerle.Macros.DefineCTXMacro.#ctor" />
    <member name="F:Nemerle.Macros.DefineCTXMacro.my_usage" />
    <member name="F:Nemerle.Macros.DefineCTXMacro.keywords" />
    <member name="M:Nemerle.Macros.DefineCTXMacro.#cctor" />
    <member name="M:Nemerle.Macros.DefineCTXMacro.get_Location" />
    <member name="P:Nemerle.Macros.DefineCTXMacro.Location" />
    <member name="M:Nemerle.Macros.DefineCTXMacro.get_IsInherited" />
    <member name="P:Nemerle.Macros.DefineCTXMacro.IsInherited" />
    <member name="M:Nemerle.Macros.DefineCTXMacro.get_Keywords" />
    <member name="P:Nemerle.Macros.DefineCTXMacro.Keywords" />
    <member name="M:Nemerle.Macros.DefineCTXMacro.GetName" />
    <member name="M:Nemerle.Macros.DefineCTXMacro.get_Name" />
    <member name="P:Nemerle.Macros.DefineCTXMacro.Name" />
    <member name="M:Nemerle.Macros.DefineCTXMacro.get_Namespace" />
    <member name="P:Nemerle.Macros.DefineCTXMacro.Namespace" />
    <member name="M:Nemerle.Macros.DefineCTXMacro.GetNamespace" />
    <member name="M:Nemerle.Macros.DefineCTXMacro.get_Usage" />
    <member name="P:Nemerle.Macros.DefineCTXMacro.Usage" />
    <member name="M:Nemerle.Macros.DefineCTXMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Macros.DefineCTXMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Macros.DefineCTXMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Macros.DefineCTXMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Macros.DefineCTXMacro.SyntaxExtension" />
    <member name="T:Nemerle.Macros.DefineMacroContextMacro" />
    <member name="M:Nemerle.Macros.DefineMacroContextMacro.#ctor" />
    <member name="F:Nemerle.Macros.DefineMacroContextMacro.my_usage" />
    <member name="F:Nemerle.Macros.DefineMacroContextMacro.keywords" />
    <member name="M:Nemerle.Macros.DefineMacroContextMacro.#cctor" />
    <member name="M:Nemerle.Macros.DefineMacroContextMacro.get_Location" />
    <member name="P:Nemerle.Macros.DefineMacroContextMacro.Location" />
    <member name="M:Nemerle.Macros.DefineMacroContextMacro.get_IsInherited" />
    <member name="P:Nemerle.Macros.DefineMacroContextMacro.IsInherited" />
    <member name="M:Nemerle.Macros.DefineMacroContextMacro.get_Keywords" />
    <member name="P:Nemerle.Macros.DefineMacroContextMacro.Keywords" />
    <member name="M:Nemerle.Macros.DefineMacroContextMacro.GetName" />
    <member name="M:Nemerle.Macros.DefineMacroContextMacro.get_Name" />
    <member name="P:Nemerle.Macros.DefineMacroContextMacro.Name" />
    <member name="M:Nemerle.Macros.DefineMacroContextMacro.get_Namespace" />
    <member name="P:Nemerle.Macros.DefineMacroContextMacro.Namespace" />
    <member name="M:Nemerle.Macros.DefineMacroContextMacro.GetNamespace" />
    <member name="M:Nemerle.Macros.DefineMacroContextMacro.get_Usage" />
    <member name="P:Nemerle.Macros.DefineMacroContextMacro.Usage" />
    <member name="M:Nemerle.Macros.DefineMacroContextMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Macros.DefineMacroContextMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Macros.DefineMacroContextMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Macros.DefineMacroContextMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Macros.DefineMacroContextMacro.SyntaxExtension" />
    <member name="T:Nemerle.Macros.ImplicitCTXMacro" />
    <member name="M:Nemerle.Macros.ImplicitCTXMacro.#ctor" />
    <member name="F:Nemerle.Macros.ImplicitCTXMacro.my_usage" />
    <member name="F:Nemerle.Macros.ImplicitCTXMacro.keywords" />
    <member name="M:Nemerle.Macros.ImplicitCTXMacro.#cctor" />
    <member name="M:Nemerle.Macros.ImplicitCTXMacro.get_Location" />
    <member name="P:Nemerle.Macros.ImplicitCTXMacro.Location" />
    <member name="M:Nemerle.Macros.ImplicitCTXMacro.get_IsInherited" />
    <member name="P:Nemerle.Macros.ImplicitCTXMacro.IsInherited" />
    <member name="M:Nemerle.Macros.ImplicitCTXMacro.get_Keywords" />
    <member name="P:Nemerle.Macros.ImplicitCTXMacro.Keywords" />
    <member name="M:Nemerle.Macros.ImplicitCTXMacro.GetName" />
    <member name="M:Nemerle.Macros.ImplicitCTXMacro.get_Name" />
    <member name="P:Nemerle.Macros.ImplicitCTXMacro.Name" />
    <member name="M:Nemerle.Macros.ImplicitCTXMacro.get_Namespace" />
    <member name="P:Nemerle.Macros.ImplicitCTXMacro.Namespace" />
    <member name="M:Nemerle.Macros.ImplicitCTXMacro.GetNamespace" />
    <member name="M:Nemerle.Macros.ImplicitCTXMacro.get_Usage" />
    <member name="P:Nemerle.Macros.ImplicitCTXMacro.Usage" />
    <member name="M:Nemerle.Macros.ImplicitCTXMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Macros.ImplicitCTXMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Macros.ImplicitCTXMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Macros.ImplicitCTXMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Macros.ImplicitCTXMacro.SyntaxExtension" />
    <member name="T:Nemerle.Macros.GetTyperMacro" />
    <member name="M:Nemerle.Macros.GetTyperMacro.#ctor" />
    <member name="F:Nemerle.Macros.GetTyperMacro.my_usage" />
    <member name="F:Nemerle.Macros.GetTyperMacro.keywords" />
    <member name="M:Nemerle.Macros.GetTyperMacro.#cctor" />
    <member name="M:Nemerle.Macros.GetTyperMacro.get_Location" />
    <member name="P:Nemerle.Macros.GetTyperMacro.Location" />
    <member name="M:Nemerle.Macros.GetTyperMacro.get_IsInherited" />
    <member name="P:Nemerle.Macros.GetTyperMacro.IsInherited" />
    <member name="M:Nemerle.Macros.GetTyperMacro.get_Keywords" />
    <member name="P:Nemerle.Macros.GetTyperMacro.Keywords" />
    <member name="M:Nemerle.Macros.GetTyperMacro.GetName" />
    <member name="M:Nemerle.Macros.GetTyperMacro.get_Name" />
    <member name="P:Nemerle.Macros.GetTyperMacro.Name" />
    <member name="M:Nemerle.Macros.GetTyperMacro.get_Namespace" />
    <member name="P:Nemerle.Macros.GetTyperMacro.Namespace" />
    <member name="M:Nemerle.Macros.GetTyperMacro.GetNamespace" />
    <member name="M:Nemerle.Macros.GetTyperMacro.get_Usage" />
    <member name="P:Nemerle.Macros.GetTyperMacro.Usage" />
    <member name="M:Nemerle.Macros.GetTyperMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Macros.GetTyperMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Macros.GetTyperMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Macros.GetTyperMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Macros.GetTyperMacro.SyntaxExtension" />
    <member name="T:Nemerle.Macros.ManagerMacro" />
    <member name="M:Nemerle.Macros.ManagerMacro.#ctor" />
    <member name="F:Nemerle.Macros.ManagerMacro.my_usage" />
    <member name="F:Nemerle.Macros.ManagerMacro.keywords" />
    <member name="M:Nemerle.Macros.ManagerMacro.#cctor" />
    <member name="M:Nemerle.Macros.ManagerMacro.get_Location" />
    <member name="P:Nemerle.Macros.ManagerMacro.Location" />
    <member name="M:Nemerle.Macros.ManagerMacro.get_IsInherited" />
    <member name="P:Nemerle.Macros.ManagerMacro.IsInherited" />
    <member name="M:Nemerle.Macros.ManagerMacro.get_Keywords" />
    <member name="P:Nemerle.Macros.ManagerMacro.Keywords" />
    <member name="M:Nemerle.Macros.ManagerMacro.GetName" />
    <member name="M:Nemerle.Macros.ManagerMacro.get_Name" />
    <member name="P:Nemerle.Macros.ManagerMacro.Name" />
    <member name="M:Nemerle.Macros.ManagerMacro.get_Namespace" />
    <member name="P:Nemerle.Macros.ManagerMacro.Namespace" />
    <member name="M:Nemerle.Macros.ManagerMacro.GetNamespace" />
    <member name="M:Nemerle.Macros.ManagerMacro.get_Usage" />
    <member name="P:Nemerle.Macros.ManagerMacro.Usage" />
    <member name="M:Nemerle.Macros.ManagerMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Macros.ManagerMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Macros.ManagerMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Macros.ManagerMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Macros.ManagerMacro.SyntaxExtension" />
    <member name="T:Nemerle.Macros.SymbolMacro">
      <summary>
        <para>creates new symbol with given id and current global context
</para>
      </summary>
    </member>
    <member name="M:Nemerle.Macros.SymbolMacro.#ctor" />
    <member name="F:Nemerle.Macros.SymbolMacro.my_usage" />
    <member name="F:Nemerle.Macros.SymbolMacro.keywords" />
    <member name="M:Nemerle.Macros.SymbolMacro.#cctor" />
    <member name="M:Nemerle.Macros.SymbolMacro.get_Location" />
    <member name="P:Nemerle.Macros.SymbolMacro.Location" />
    <member name="M:Nemerle.Macros.SymbolMacro.get_IsInherited" />
    <member name="P:Nemerle.Macros.SymbolMacro.IsInherited" />
    <member name="M:Nemerle.Macros.SymbolMacro.get_Keywords" />
    <member name="P:Nemerle.Macros.SymbolMacro.Keywords" />
    <member name="M:Nemerle.Macros.SymbolMacro.GetName" />
    <member name="M:Nemerle.Macros.SymbolMacro.get_Name" />
    <member name="P:Nemerle.Macros.SymbolMacro.Name" />
    <member name="M:Nemerle.Macros.SymbolMacro.get_Namespace" />
    <member name="P:Nemerle.Macros.SymbolMacro.Namespace" />
    <member name="M:Nemerle.Macros.SymbolMacro.GetNamespace" />
    <member name="M:Nemerle.Macros.SymbolMacro.get_Usage" />
    <member name="P:Nemerle.Macros.SymbolMacro.Usage" />
    <member name="M:Nemerle.Macros.SymbolMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Macros.SymbolMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Macros.SymbolMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Macros.SymbolMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Macros.SymbolMacro.SyntaxExtension" />
    <member name="T:Nemerle.Macros.pretty_print_exprMacro" />
    <member name="M:Nemerle.Macros.pretty_print_exprMacro.#ctor" />
    <member name="F:Nemerle.Macros.pretty_print_exprMacro.my_usage" />
    <member name="F:Nemerle.Macros.pretty_print_exprMacro.keywords" />
    <member name="M:Nemerle.Macros.pretty_print_exprMacro.#cctor" />
    <member name="M:Nemerle.Macros.pretty_print_exprMacro.get_Location" />
    <member name="P:Nemerle.Macros.pretty_print_exprMacro.Location" />
    <member name="M:Nemerle.Macros.pretty_print_exprMacro.get_IsInherited" />
    <member name="P:Nemerle.Macros.pretty_print_exprMacro.IsInherited" />
    <member name="M:Nemerle.Macros.pretty_print_exprMacro.get_Keywords" />
    <member name="P:Nemerle.Macros.pretty_print_exprMacro.Keywords" />
    <member name="M:Nemerle.Macros.pretty_print_exprMacro.GetName" />
    <member name="M:Nemerle.Macros.pretty_print_exprMacro.get_Name" />
    <member name="P:Nemerle.Macros.pretty_print_exprMacro.Name" />
    <member name="M:Nemerle.Macros.pretty_print_exprMacro.get_Namespace" />
    <member name="P:Nemerle.Macros.pretty_print_exprMacro.Namespace" />
    <member name="M:Nemerle.Macros.pretty_print_exprMacro.GetNamespace" />
    <member name="M:Nemerle.Macros.pretty_print_exprMacro.get_Usage" />
    <member name="P:Nemerle.Macros.pretty_print_exprMacro.Usage" />
    <member name="M:Nemerle.Macros.pretty_print_exprMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Macros.pretty_print_exprMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Macros.pretty_print_exprMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Macros.pretty_print_exprMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Macros.pretty_print_exprMacro.SyntaxExtension" />
    <member name="T:Nemerle.Macros.ExprToStringMacro" />
    <member name="M:Nemerle.Macros.ExprToStringMacro.#ctor" />
    <member name="F:Nemerle.Macros.ExprToStringMacro.my_usage" />
    <member name="F:Nemerle.Macros.ExprToStringMacro.keywords" />
    <member name="M:Nemerle.Macros.ExprToStringMacro.#cctor" />
    <member name="M:Nemerle.Macros.ExprToStringMacro.get_Location" />
    <member name="P:Nemerle.Macros.ExprToStringMacro.Location" />
    <member name="M:Nemerle.Macros.ExprToStringMacro.get_IsInherited" />
    <member name="P:Nemerle.Macros.ExprToStringMacro.IsInherited" />
    <member name="M:Nemerle.Macros.ExprToStringMacro.get_Keywords" />
    <member name="P:Nemerle.Macros.ExprToStringMacro.Keywords" />
    <member name="M:Nemerle.Macros.ExprToStringMacro.GetName" />
    <member name="M:Nemerle.Macros.ExprToStringMacro.get_Name" />
    <member name="P:Nemerle.Macros.ExprToStringMacro.Name" />
    <member name="M:Nemerle.Macros.ExprToStringMacro.get_Namespace" />
    <member name="P:Nemerle.Macros.ExprToStringMacro.Namespace" />
    <member name="M:Nemerle.Macros.ExprToStringMacro.GetNamespace" />
    <member name="M:Nemerle.Macros.ExprToStringMacro.get_Usage" />
    <member name="P:Nemerle.Macros.ExprToStringMacro.Usage" />
    <member name="M:Nemerle.Macros.ExprToStringMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Macros.ExprToStringMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Macros.ExprToStringMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Macros.ExprToStringMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Macros.ExprToStringMacro.SyntaxExtension" />
    <member name="T:Nemerle.Extensions.TupleToString_type_postaddMacro" />
    <member name="M:Nemerle.Extensions.TupleToString_type_postaddMacro.#ctor" />
    <member name="F:Nemerle.Extensions.TupleToString_type_postaddMacro.my_usage" />
    <member name="F:Nemerle.Extensions.TupleToString_type_postaddMacro.keywords" />
    <member name="M:Nemerle.Extensions.TupleToString_type_postaddMacro.#cctor" />
    <member name="M:Nemerle.Extensions.TupleToString_type_postaddMacro.get_Location" />
    <member name="P:Nemerle.Extensions.TupleToString_type_postaddMacro.Location" />
    <member name="M:Nemerle.Extensions.TupleToString_type_postaddMacro.get_IsInherited" />
    <member name="P:Nemerle.Extensions.TupleToString_type_postaddMacro.IsInherited" />
    <member name="M:Nemerle.Extensions.TupleToString_type_postaddMacro.get_Keywords" />
    <member name="P:Nemerle.Extensions.TupleToString_type_postaddMacro.Keywords" />
    <member name="M:Nemerle.Extensions.TupleToString_type_postaddMacro.GetName" />
    <member name="M:Nemerle.Extensions.TupleToString_type_postaddMacro.get_Name" />
    <member name="P:Nemerle.Extensions.TupleToString_type_postaddMacro.Name" />
    <member name="M:Nemerle.Extensions.TupleToString_type_postaddMacro.get_Namespace" />
    <member name="P:Nemerle.Extensions.TupleToString_type_postaddMacro.Namespace" />
    <member name="M:Nemerle.Extensions.TupleToString_type_postaddMacro.GetNamespace" />
    <member name="M:Nemerle.Extensions.TupleToString_type_postaddMacro.get_Usage" />
    <member name="P:Nemerle.Extensions.TupleToString_type_postaddMacro.Usage" />
    <member name="M:Nemerle.Extensions.TupleToString_type_postaddMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Extensions.TupleToString_type_postaddMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Extensions.TupleToString_type_postaddMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Extensions.TupleToString_type_postaddMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Extensions.TupleToString_type_postaddMacro.SyntaxExtension" />
    <member name="T:Nemerle.Extensions.DisableImplicitConstructor_type_postscanMacro" />
    <member name="M:Nemerle.Extensions.DisableImplicitConstructor_type_postscanMacro.#ctor" />
    <member name="F:Nemerle.Extensions.DisableImplicitConstructor_type_postscanMacro.my_usage" />
    <member name="F:Nemerle.Extensions.DisableImplicitConstructor_type_postscanMacro.keywords" />
    <member name="M:Nemerle.Extensions.DisableImplicitConstructor_type_postscanMacro.#cctor" />
    <member name="M:Nemerle.Extensions.DisableImplicitConstructor_type_postscanMacro.get_Location" />
    <member name="P:Nemerle.Extensions.DisableImplicitConstructor_type_postscanMacro.Location" />
    <member name="M:Nemerle.Extensions.DisableImplicitConstructor_type_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.Extensions.DisableImplicitConstructor_type_postscanMacro.IsInherited" />
    <member name="M:Nemerle.Extensions.DisableImplicitConstructor_type_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.Extensions.DisableImplicitConstructor_type_postscanMacro.Keywords" />
    <member name="M:Nemerle.Extensions.DisableImplicitConstructor_type_postscanMacro.GetName" />
    <member name="M:Nemerle.Extensions.DisableImplicitConstructor_type_postscanMacro.get_Name" />
    <member name="P:Nemerle.Extensions.DisableImplicitConstructor_type_postscanMacro.Name" />
    <member name="M:Nemerle.Extensions.DisableImplicitConstructor_type_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.Extensions.DisableImplicitConstructor_type_postscanMacro.Namespace" />
    <member name="M:Nemerle.Extensions.DisableImplicitConstructor_type_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.Extensions.DisableImplicitConstructor_type_postscanMacro.get_Usage" />
    <member name="P:Nemerle.Extensions.DisableImplicitConstructor_type_postscanMacro.Usage" />
    <member name="M:Nemerle.Extensions.DisableImplicitConstructor_type_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Extensions.DisableImplicitConstructor_type_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Extensions.DisableImplicitConstructor_type_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Extensions.DisableImplicitConstructor_type_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Extensions.DisableImplicitConstructor_type_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.Extensions.LexicographicCompareTo_type_postaddMacro" />
    <member name="M:Nemerle.Extensions.LexicographicCompareTo_type_postaddMacro._N_compareField_33993(Nemerle.Compiler.IField)" />
    <member name="M:Nemerle.Extensions.LexicographicCompareTo_type_postaddMacro.#ctor" />
    <member name="F:Nemerle.Extensions.LexicographicCompareTo_type_postaddMacro.my_usage" />
    <member name="F:Nemerle.Extensions.LexicographicCompareTo_type_postaddMacro.keywords" />
    <member name="M:Nemerle.Extensions.LexicographicCompareTo_type_postaddMacro.#cctor" />
    <member name="M:Nemerle.Extensions.LexicographicCompareTo_type_postaddMacro.get_Location" />
    <member name="P:Nemerle.Extensions.LexicographicCompareTo_type_postaddMacro.Location" />
    <member name="M:Nemerle.Extensions.LexicographicCompareTo_type_postaddMacro.get_IsInherited" />
    <member name="P:Nemerle.Extensions.LexicographicCompareTo_type_postaddMacro.IsInherited" />
    <member name="M:Nemerle.Extensions.LexicographicCompareTo_type_postaddMacro.get_Keywords" />
    <member name="P:Nemerle.Extensions.LexicographicCompareTo_type_postaddMacro.Keywords" />
    <member name="M:Nemerle.Extensions.LexicographicCompareTo_type_postaddMacro.GetName" />
    <member name="M:Nemerle.Extensions.LexicographicCompareTo_type_postaddMacro.get_Name" />
    <member name="P:Nemerle.Extensions.LexicographicCompareTo_type_postaddMacro.Name" />
    <member name="M:Nemerle.Extensions.LexicographicCompareTo_type_postaddMacro.get_Namespace" />
    <member name="P:Nemerle.Extensions.LexicographicCompareTo_type_postaddMacro.Namespace" />
    <member name="M:Nemerle.Extensions.LexicographicCompareTo_type_postaddMacro.GetNamespace" />
    <member name="M:Nemerle.Extensions.LexicographicCompareTo_type_postaddMacro.get_Usage" />
    <member name="P:Nemerle.Extensions.LexicographicCompareTo_type_postaddMacro.Usage" />
    <member name="M:Nemerle.Extensions.LexicographicCompareTo_type_postaddMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Extensions.LexicographicCompareTo_type_postaddMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Extensions.LexicographicCompareTo_type_postaddMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Extensions.LexicographicCompareTo_type_postaddMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Extensions.LexicographicCompareTo_type_postaddMacro.SyntaxExtension" />
    <member name="T:Nemerle.Extensions.StructuralHashCode_type_postaddMacro" />
    <member name="M:Nemerle.Extensions.StructuralHashCode_type_postaddMacro.#ctor" />
    <member name="F:Nemerle.Extensions.StructuralHashCode_type_postaddMacro.my_usage" />
    <member name="F:Nemerle.Extensions.StructuralHashCode_type_postaddMacro.keywords" />
    <member name="M:Nemerle.Extensions.StructuralHashCode_type_postaddMacro.#cctor" />
    <member name="M:Nemerle.Extensions.StructuralHashCode_type_postaddMacro.get_Location" />
    <member name="P:Nemerle.Extensions.StructuralHashCode_type_postaddMacro.Location" />
    <member name="M:Nemerle.Extensions.StructuralHashCode_type_postaddMacro.get_IsInherited" />
    <member name="P:Nemerle.Extensions.StructuralHashCode_type_postaddMacro.IsInherited" />
    <member name="M:Nemerle.Extensions.StructuralHashCode_type_postaddMacro.get_Keywords" />
    <member name="P:Nemerle.Extensions.StructuralHashCode_type_postaddMacro.Keywords" />
    <member name="M:Nemerle.Extensions.StructuralHashCode_type_postaddMacro.GetName" />
    <member name="M:Nemerle.Extensions.StructuralHashCode_type_postaddMacro.get_Name" />
    <member name="P:Nemerle.Extensions.StructuralHashCode_type_postaddMacro.Name" />
    <member name="M:Nemerle.Extensions.StructuralHashCode_type_postaddMacro.get_Namespace" />
    <member name="P:Nemerle.Extensions.StructuralHashCode_type_postaddMacro.Namespace" />
    <member name="M:Nemerle.Extensions.StructuralHashCode_type_postaddMacro.GetNamespace" />
    <member name="M:Nemerle.Extensions.StructuralHashCode_type_postaddMacro.get_Usage" />
    <member name="P:Nemerle.Extensions.StructuralHashCode_type_postaddMacro.Usage" />
    <member name="M:Nemerle.Extensions.StructuralHashCode_type_postaddMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Extensions.StructuralHashCode_type_postaddMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Extensions.StructuralHashCode_type_postaddMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Extensions.StructuralHashCode_type_postaddMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Extensions.StructuralHashCode_type_postaddMacro.SyntaxExtension" />
    <member name="T:Nemerle.Extensions.HashCodeHelper" />
    <member name="M:Nemerle.Extensions.HashCodeHelper.#cctor" />
    <member name="F:Nemerle.Extensions.HashCodeHelper.primes" />
    <member name="M:Nemerle.Extensions.HashCodeHelper.GetPrimePair(System.Int32)" />
    <member name="T:Nemerle.Extensions.SelectFromTupleMacro">
      <summary>
        <para>MACROS, WHICH WE CAN DO BETTER THAN HASKELL
</para>
      </summary>
    </member>
    <member name="M:Nemerle.Extensions.SelectFromTupleMacro.#ctor" />
    <member name="F:Nemerle.Extensions.SelectFromTupleMacro.my_usage" />
    <member name="F:Nemerle.Extensions.SelectFromTupleMacro.keywords" />
    <member name="M:Nemerle.Extensions.SelectFromTupleMacro.#cctor" />
    <member name="M:Nemerle.Extensions.SelectFromTupleMacro.get_Location" />
    <member name="P:Nemerle.Extensions.SelectFromTupleMacro.Location" />
    <member name="M:Nemerle.Extensions.SelectFromTupleMacro.get_IsInherited" />
    <member name="P:Nemerle.Extensions.SelectFromTupleMacro.IsInherited" />
    <member name="M:Nemerle.Extensions.SelectFromTupleMacro.get_Keywords" />
    <member name="P:Nemerle.Extensions.SelectFromTupleMacro.Keywords" />
    <member name="M:Nemerle.Extensions.SelectFromTupleMacro.GetName" />
    <member name="M:Nemerle.Extensions.SelectFromTupleMacro.get_Name" />
    <member name="P:Nemerle.Extensions.SelectFromTupleMacro.Name" />
    <member name="M:Nemerle.Extensions.SelectFromTupleMacro.get_Namespace" />
    <member name="P:Nemerle.Extensions.SelectFromTupleMacro.Namespace" />
    <member name="M:Nemerle.Extensions.SelectFromTupleMacro.GetNamespace" />
    <member name="M:Nemerle.Extensions.SelectFromTupleMacro.get_Usage" />
    <member name="P:Nemerle.Extensions.SelectFromTupleMacro.Usage" />
    <member name="M:Nemerle.Extensions.SelectFromTupleMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Extensions.SelectFromTupleMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Extensions.SelectFromTupleMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Extensions.SelectFromTupleMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Extensions.SelectFromTupleMacro.SyntaxExtension" />
    <member name="T:Nemerle.Extensions.TupleMapMacro" />
    <member name="M:Nemerle.Extensions.TupleMapMacro.#ctor" />
    <member name="F:Nemerle.Extensions.TupleMapMacro.my_usage" />
    <member name="F:Nemerle.Extensions.TupleMapMacro.keywords" />
    <member name="M:Nemerle.Extensions.TupleMapMacro.#cctor" />
    <member name="M:Nemerle.Extensions.TupleMapMacro.get_Location" />
    <member name="P:Nemerle.Extensions.TupleMapMacro.Location" />
    <member name="M:Nemerle.Extensions.TupleMapMacro.get_IsInherited" />
    <member name="P:Nemerle.Extensions.TupleMapMacro.IsInherited" />
    <member name="M:Nemerle.Extensions.TupleMapMacro.get_Keywords" />
    <member name="P:Nemerle.Extensions.TupleMapMacro.Keywords" />
    <member name="M:Nemerle.Extensions.TupleMapMacro.GetName" />
    <member name="M:Nemerle.Extensions.TupleMapMacro.get_Name" />
    <member name="P:Nemerle.Extensions.TupleMapMacro.Name" />
    <member name="M:Nemerle.Extensions.TupleMapMacro.get_Namespace" />
    <member name="P:Nemerle.Extensions.TupleMapMacro.Namespace" />
    <member name="M:Nemerle.Extensions.TupleMapMacro.GetNamespace" />
    <member name="M:Nemerle.Extensions.TupleMapMacro.get_Usage" />
    <member name="P:Nemerle.Extensions.TupleMapMacro.Usage" />
    <member name="M:Nemerle.Extensions.TupleMapMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Extensions.TupleMapMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Extensions.TupleMapMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Extensions.TupleMapMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Extensions.TupleMapMacro.SyntaxExtension" />
    <member name="T:Nemerle.Extensions.PrintTupleMacro" />
    <member name="M:Nemerle.Extensions.PrintTupleMacro.#ctor" />
    <member name="F:Nemerle.Extensions.PrintTupleMacro.my_usage" />
    <member name="F:Nemerle.Extensions.PrintTupleMacro.keywords" />
    <member name="M:Nemerle.Extensions.PrintTupleMacro.#cctor" />
    <member name="M:Nemerle.Extensions.PrintTupleMacro.get_Location" />
    <member name="P:Nemerle.Extensions.PrintTupleMacro.Location" />
    <member name="M:Nemerle.Extensions.PrintTupleMacro.get_IsInherited" />
    <member name="P:Nemerle.Extensions.PrintTupleMacro.IsInherited" />
    <member name="M:Nemerle.Extensions.PrintTupleMacro.get_Keywords" />
    <member name="P:Nemerle.Extensions.PrintTupleMacro.Keywords" />
    <member name="M:Nemerle.Extensions.PrintTupleMacro.GetName" />
    <member name="M:Nemerle.Extensions.PrintTupleMacro.get_Name" />
    <member name="P:Nemerle.Extensions.PrintTupleMacro.Name" />
    <member name="M:Nemerle.Extensions.PrintTupleMacro.get_Namespace" />
    <member name="P:Nemerle.Extensions.PrintTupleMacro.Namespace" />
    <member name="M:Nemerle.Extensions.PrintTupleMacro.GetNamespace" />
    <member name="M:Nemerle.Extensions.PrintTupleMacro.get_Usage" />
    <member name="P:Nemerle.Extensions.PrintTupleMacro.Usage" />
    <member name="M:Nemerle.Extensions.PrintTupleMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Extensions.PrintTupleMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Extensions.PrintTupleMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Extensions.PrintTupleMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Extensions.PrintTupleMacro.SyntaxExtension" />
    <member name="T:Nemerle.Extensions.PrintTupleTypedMacro" />
    <member name="M:Nemerle.Extensions.PrintTupleTypedMacro.#ctor" />
    <member name="F:Nemerle.Extensions.PrintTupleTypedMacro.my_usage" />
    <member name="F:Nemerle.Extensions.PrintTupleTypedMacro.keywords" />
    <member name="M:Nemerle.Extensions.PrintTupleTypedMacro.#cctor" />
    <member name="M:Nemerle.Extensions.PrintTupleTypedMacro.get_Location" />
    <member name="P:Nemerle.Extensions.PrintTupleTypedMacro.Location" />
    <member name="M:Nemerle.Extensions.PrintTupleTypedMacro.get_IsInherited" />
    <member name="P:Nemerle.Extensions.PrintTupleTypedMacro.IsInherited" />
    <member name="M:Nemerle.Extensions.PrintTupleTypedMacro.get_Keywords" />
    <member name="P:Nemerle.Extensions.PrintTupleTypedMacro.Keywords" />
    <member name="M:Nemerle.Extensions.PrintTupleTypedMacro.GetName" />
    <member name="M:Nemerle.Extensions.PrintTupleTypedMacro.get_Name" />
    <member name="P:Nemerle.Extensions.PrintTupleTypedMacro.Name" />
    <member name="M:Nemerle.Extensions.PrintTupleTypedMacro.get_Namespace" />
    <member name="P:Nemerle.Extensions.PrintTupleTypedMacro.Namespace" />
    <member name="M:Nemerle.Extensions.PrintTupleTypedMacro.GetNamespace" />
    <member name="M:Nemerle.Extensions.PrintTupleTypedMacro.get_Usage" />
    <member name="P:Nemerle.Extensions.PrintTupleTypedMacro.Usage" />
    <member name="M:Nemerle.Extensions.PrintTupleTypedMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Extensions.PrintTupleTypedMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Extensions.PrintTupleTypedMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Extensions.PrintTupleTypedMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Extensions.PrintTupleTypedMacro.SyntaxExtension" />
    <member name="T:Nemerle.Extensions.DefaultValueMacro" />
    <member name="M:Nemerle.Extensions.DefaultValueMacro.#ctor" />
    <member name="F:Nemerle.Extensions.DefaultValueMacro.my_usage" />
    <member name="F:Nemerle.Extensions.DefaultValueMacro.keywords" />
    <member name="M:Nemerle.Extensions.DefaultValueMacro.#cctor" />
    <member name="M:Nemerle.Extensions.DefaultValueMacro.get_Location" />
    <member name="P:Nemerle.Extensions.DefaultValueMacro.Location" />
    <member name="M:Nemerle.Extensions.DefaultValueMacro.get_IsInherited" />
    <member name="P:Nemerle.Extensions.DefaultValueMacro.IsInherited" />
    <member name="M:Nemerle.Extensions.DefaultValueMacro.get_Keywords" />
    <member name="P:Nemerle.Extensions.DefaultValueMacro.Keywords" />
    <member name="M:Nemerle.Extensions.DefaultValueMacro.GetName" />
    <member name="M:Nemerle.Extensions.DefaultValueMacro.get_Name" />
    <member name="P:Nemerle.Extensions.DefaultValueMacro.Name" />
    <member name="M:Nemerle.Extensions.DefaultValueMacro.get_Namespace" />
    <member name="P:Nemerle.Extensions.DefaultValueMacro.Namespace" />
    <member name="M:Nemerle.Extensions.DefaultValueMacro.GetNamespace" />
    <member name="M:Nemerle.Extensions.DefaultValueMacro.get_Usage" />
    <member name="P:Nemerle.Extensions.DefaultValueMacro.Usage" />
    <member name="M:Nemerle.Extensions.DefaultValueMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Extensions.DefaultValueMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Extensions.DefaultValueMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Extensions.DefaultValueMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Extensions.DefaultValueMacro.SyntaxExtension" />
    <member name="T:Nemerle.Extensions.CompilerMutable_field_postscanMacro" />
    <member name="M:Nemerle.Extensions.CompilerMutable_field_postscanMacro.#ctor" />
    <member name="F:Nemerle.Extensions.CompilerMutable_field_postscanMacro.my_usage" />
    <member name="F:Nemerle.Extensions.CompilerMutable_field_postscanMacro.keywords" />
    <member name="M:Nemerle.Extensions.CompilerMutable_field_postscanMacro.#cctor" />
    <member name="M:Nemerle.Extensions.CompilerMutable_field_postscanMacro.get_Location" />
    <member name="P:Nemerle.Extensions.CompilerMutable_field_postscanMacro.Location" />
    <member name="M:Nemerle.Extensions.CompilerMutable_field_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.Extensions.CompilerMutable_field_postscanMacro.IsInherited" />
    <member name="M:Nemerle.Extensions.CompilerMutable_field_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.Extensions.CompilerMutable_field_postscanMacro.Keywords" />
    <member name="M:Nemerle.Extensions.CompilerMutable_field_postscanMacro.GetName" />
    <member name="M:Nemerle.Extensions.CompilerMutable_field_postscanMacro.get_Name" />
    <member name="P:Nemerle.Extensions.CompilerMutable_field_postscanMacro.Name" />
    <member name="M:Nemerle.Extensions.CompilerMutable_field_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.Extensions.CompilerMutable_field_postscanMacro.Namespace" />
    <member name="M:Nemerle.Extensions.CompilerMutable_field_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.Extensions.CompilerMutable_field_postscanMacro.get_Usage" />
    <member name="P:Nemerle.Extensions.CompilerMutable_field_postscanMacro.Usage" />
    <member name="M:Nemerle.Extensions.CompilerMutable_field_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Extensions.CompilerMutable_field_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Extensions.CompilerMutable_field_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Extensions.CompilerMutable_field_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Extensions.CompilerMutable_field_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.Diagnostics.Trace_method_postaddMacro">
      <summary>
        <para>Insert given expression before every expression in every sequence
     of method's body.
     Implicitly visible variables are [_line : int], [_file : string],
     [_method : string], [_expr : string]
     Meaning current line number, filename, method's name, next expression
     which will be executed converted to human readable string

</para>
      </summary>
    </member>
    <member name="M:Nemerle.Diagnostics.Trace_method_postaddMacro.#ctor" />
    <member name="F:Nemerle.Diagnostics.Trace_method_postaddMacro.my_usage" />
    <member name="F:Nemerle.Diagnostics.Trace_method_postaddMacro.keywords" />
    <member name="M:Nemerle.Diagnostics.Trace_method_postaddMacro.#cctor" />
    <member name="M:Nemerle.Diagnostics.Trace_method_postaddMacro.get_Location" />
    <member name="P:Nemerle.Diagnostics.Trace_method_postaddMacro.Location" />
    <member name="M:Nemerle.Diagnostics.Trace_method_postaddMacro.get_IsInherited" />
    <member name="P:Nemerle.Diagnostics.Trace_method_postaddMacro.IsInherited" />
    <member name="M:Nemerle.Diagnostics.Trace_method_postaddMacro.get_Keywords" />
    <member name="P:Nemerle.Diagnostics.Trace_method_postaddMacro.Keywords" />
    <member name="M:Nemerle.Diagnostics.Trace_method_postaddMacro.GetName" />
    <member name="M:Nemerle.Diagnostics.Trace_method_postaddMacro.get_Name" />
    <member name="P:Nemerle.Diagnostics.Trace_method_postaddMacro.Name" />
    <member name="M:Nemerle.Diagnostics.Trace_method_postaddMacro.get_Namespace" />
    <member name="P:Nemerle.Diagnostics.Trace_method_postaddMacro.Namespace" />
    <member name="M:Nemerle.Diagnostics.Trace_method_postaddMacro.GetNamespace" />
    <member name="M:Nemerle.Diagnostics.Trace_method_postaddMacro.get_Usage" />
    <member name="P:Nemerle.Diagnostics.Trace_method_postaddMacro.Usage" />
    <member name="M:Nemerle.Diagnostics.Trace_method_postaddMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Diagnostics.Trace_method_postaddMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Diagnostics.Trace_method_postaddMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Diagnostics.Trace_method_postaddMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Diagnostics.Trace_method_postaddMacro.SyntaxExtension" />
    <member name="T:Nemerle.Diagnostics.Trace_type_postaddMacro" />
    <member name="M:Nemerle.Diagnostics.Trace_type_postaddMacro.#ctor" />
    <member name="F:Nemerle.Diagnostics.Trace_type_postaddMacro.my_usage" />
    <member name="F:Nemerle.Diagnostics.Trace_type_postaddMacro.keywords" />
    <member name="M:Nemerle.Diagnostics.Trace_type_postaddMacro.#cctor" />
    <member name="M:Nemerle.Diagnostics.Trace_type_postaddMacro.get_Location" />
    <member name="P:Nemerle.Diagnostics.Trace_type_postaddMacro.Location" />
    <member name="M:Nemerle.Diagnostics.Trace_type_postaddMacro.get_IsInherited" />
    <member name="P:Nemerle.Diagnostics.Trace_type_postaddMacro.IsInherited" />
    <member name="M:Nemerle.Diagnostics.Trace_type_postaddMacro.get_Keywords" />
    <member name="P:Nemerle.Diagnostics.Trace_type_postaddMacro.Keywords" />
    <member name="M:Nemerle.Diagnostics.Trace_type_postaddMacro.GetName" />
    <member name="M:Nemerle.Diagnostics.Trace_type_postaddMacro.get_Name" />
    <member name="P:Nemerle.Diagnostics.Trace_type_postaddMacro.Name" />
    <member name="M:Nemerle.Diagnostics.Trace_type_postaddMacro.get_Namespace" />
    <member name="P:Nemerle.Diagnostics.Trace_type_postaddMacro.Namespace" />
    <member name="M:Nemerle.Diagnostics.Trace_type_postaddMacro.GetNamespace" />
    <member name="M:Nemerle.Diagnostics.Trace_type_postaddMacro.get_Usage" />
    <member name="P:Nemerle.Diagnostics.Trace_type_postaddMacro.Usage" />
    <member name="M:Nemerle.Diagnostics.Trace_type_postaddMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Diagnostics.Trace_type_postaddMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Diagnostics.Trace_type_postaddMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Diagnostics.Trace_type_postaddMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Diagnostics.Trace_type_postaddMacro.SyntaxExtension" />
    <member name="T:Nemerle.Diagnostics.timeMacro" />
    <member name="M:Nemerle.Diagnostics.timeMacro.#ctor" />
    <member name="F:Nemerle.Diagnostics.timeMacro.my_usage" />
    <member name="F:Nemerle.Diagnostics.timeMacro.keywords" />
    <member name="M:Nemerle.Diagnostics.timeMacro.#cctor" />
    <member name="M:Nemerle.Diagnostics.timeMacro.get_Location" />
    <member name="P:Nemerle.Diagnostics.timeMacro.Location" />
    <member name="M:Nemerle.Diagnostics.timeMacro.get_IsInherited" />
    <member name="P:Nemerle.Diagnostics.timeMacro.IsInherited" />
    <member name="M:Nemerle.Diagnostics.timeMacro.get_Keywords" />
    <member name="P:Nemerle.Diagnostics.timeMacro.Keywords" />
    <member name="M:Nemerle.Diagnostics.timeMacro.GetName" />
    <member name="M:Nemerle.Diagnostics.timeMacro.get_Name" />
    <member name="P:Nemerle.Diagnostics.timeMacro.Name" />
    <member name="M:Nemerle.Diagnostics.timeMacro.get_Namespace" />
    <member name="P:Nemerle.Diagnostics.timeMacro.Namespace" />
    <member name="M:Nemerle.Diagnostics.timeMacro.GetNamespace" />
    <member name="M:Nemerle.Diagnostics.timeMacro.get_Usage" />
    <member name="P:Nemerle.Diagnostics.timeMacro.Usage" />
    <member name="M:Nemerle.Diagnostics.timeMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Diagnostics.timeMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Diagnostics.timeMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Diagnostics.timeMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Diagnostics.timeMacro.SyntaxExtension" />
    <member name="T:Nemerle.NotImplemented_method_postscanMacro" />
    <member name="M:Nemerle.NotImplemented_method_postscanMacro.#ctor" />
    <member name="F:Nemerle.NotImplemented_method_postscanMacro.my_usage" />
    <member name="F:Nemerle.NotImplemented_method_postscanMacro.keywords" />
    <member name="M:Nemerle.NotImplemented_method_postscanMacro.#cctor" />
    <member name="M:Nemerle.NotImplemented_method_postscanMacro.get_Location" />
    <member name="P:Nemerle.NotImplemented_method_postscanMacro.Location" />
    <member name="M:Nemerle.NotImplemented_method_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.NotImplemented_method_postscanMacro.IsInherited" />
    <member name="M:Nemerle.NotImplemented_method_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.NotImplemented_method_postscanMacro.Keywords" />
    <member name="M:Nemerle.NotImplemented_method_postscanMacro.GetName" />
    <member name="M:Nemerle.NotImplemented_method_postscanMacro.get_Name" />
    <member name="P:Nemerle.NotImplemented_method_postscanMacro.Name" />
    <member name="M:Nemerle.NotImplemented_method_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.NotImplemented_method_postscanMacro.Namespace" />
    <member name="M:Nemerle.NotImplemented_method_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.NotImplemented_method_postscanMacro.get_Usage" />
    <member name="P:Nemerle.NotImplemented_method_postscanMacro.Usage" />
    <member name="M:Nemerle.NotImplemented_method_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.NotImplemented_method_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.NotImplemented_method_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.NotImplemented_method_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.NotImplemented_method_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.OverrideObjectEquals_method_postscanMacro" />
    <member name="M:Nemerle.OverrideObjectEquals_method_postscanMacro.#ctor" />
    <member name="F:Nemerle.OverrideObjectEquals_method_postscanMacro.my_usage" />
    <member name="F:Nemerle.OverrideObjectEquals_method_postscanMacro.keywords" />
    <member name="M:Nemerle.OverrideObjectEquals_method_postscanMacro.#cctor" />
    <member name="M:Nemerle.OverrideObjectEquals_method_postscanMacro.get_Location" />
    <member name="P:Nemerle.OverrideObjectEquals_method_postscanMacro.Location" />
    <member name="M:Nemerle.OverrideObjectEquals_method_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.OverrideObjectEquals_method_postscanMacro.IsInherited" />
    <member name="M:Nemerle.OverrideObjectEquals_method_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.OverrideObjectEquals_method_postscanMacro.Keywords" />
    <member name="M:Nemerle.OverrideObjectEquals_method_postscanMacro.GetName" />
    <member name="M:Nemerle.OverrideObjectEquals_method_postscanMacro.get_Name" />
    <member name="P:Nemerle.OverrideObjectEquals_method_postscanMacro.Name" />
    <member name="M:Nemerle.OverrideObjectEquals_method_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.OverrideObjectEquals_method_postscanMacro.Namespace" />
    <member name="M:Nemerle.OverrideObjectEquals_method_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.OverrideObjectEquals_method_postscanMacro.get_Usage" />
    <member name="P:Nemerle.OverrideObjectEquals_method_postscanMacro.Usage" />
    <member name="M:Nemerle.OverrideObjectEquals_method_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.OverrideObjectEquals_method_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.OverrideObjectEquals_method_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.OverrideObjectEquals_method_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.OverrideObjectEquals_method_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.ForwardThis_method_postscanMacro" />
    <member name="M:Nemerle.ForwardThis_method_postscanMacro.#ctor" />
    <member name="F:Nemerle.ForwardThis_method_postscanMacro.my_usage" />
    <member name="F:Nemerle.ForwardThis_method_postscanMacro.keywords" />
    <member name="M:Nemerle.ForwardThis_method_postscanMacro.#cctor" />
    <member name="M:Nemerle.ForwardThis_method_postscanMacro.get_Location" />
    <member name="P:Nemerle.ForwardThis_method_postscanMacro.Location" />
    <member name="M:Nemerle.ForwardThis_method_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.ForwardThis_method_postscanMacro.IsInherited" />
    <member name="M:Nemerle.ForwardThis_method_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.ForwardThis_method_postscanMacro.Keywords" />
    <member name="M:Nemerle.ForwardThis_method_postscanMacro.GetName" />
    <member name="M:Nemerle.ForwardThis_method_postscanMacro.get_Name" />
    <member name="P:Nemerle.ForwardThis_method_postscanMacro.Name" />
    <member name="M:Nemerle.ForwardThis_method_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.ForwardThis_method_postscanMacro.Namespace" />
    <member name="M:Nemerle.ForwardThis_method_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.ForwardThis_method_postscanMacro.get_Usage" />
    <member name="P:Nemerle.ForwardThis_method_postscanMacro.Usage" />
    <member name="M:Nemerle.ForwardThis_method_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.ForwardThis_method_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.ForwardThis_method_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.ForwardThis_method_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.ForwardThis_method_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.Data.ConfigureConnection_assembly_postscanMacro">
      <summary>
        <para>Define connection string, which will be used by application
    (also for compile-time verification of SQL queries by compiler)

</para>
      </summary>
    </member>
    <member name="M:Nemerle.Data.ConfigureConnection_assembly_postscanMacro.#ctor" />
    <member name="F:Nemerle.Data.ConfigureConnection_assembly_postscanMacro.my_usage" />
    <member name="F:Nemerle.Data.ConfigureConnection_assembly_postscanMacro.keywords" />
    <member name="M:Nemerle.Data.ConfigureConnection_assembly_postscanMacro.#cctor" />
    <member name="M:Nemerle.Data.ConfigureConnection_assembly_postscanMacro.get_Location" />
    <member name="P:Nemerle.Data.ConfigureConnection_assembly_postscanMacro.Location" />
    <member name="M:Nemerle.Data.ConfigureConnection_assembly_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.Data.ConfigureConnection_assembly_postscanMacro.IsInherited" />
    <member name="M:Nemerle.Data.ConfigureConnection_assembly_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.Data.ConfigureConnection_assembly_postscanMacro.Keywords" />
    <member name="M:Nemerle.Data.ConfigureConnection_assembly_postscanMacro.GetName" />
    <member name="M:Nemerle.Data.ConfigureConnection_assembly_postscanMacro.get_Name" />
    <member name="P:Nemerle.Data.ConfigureConnection_assembly_postscanMacro.Name" />
    <member name="M:Nemerle.Data.ConfigureConnection_assembly_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.Data.ConfigureConnection_assembly_postscanMacro.Namespace" />
    <member name="M:Nemerle.Data.ConfigureConnection_assembly_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.Data.ConfigureConnection_assembly_postscanMacro.get_Usage" />
    <member name="P:Nemerle.Data.ConfigureConnection_assembly_postscanMacro.Usage" />
    <member name="M:Nemerle.Data.ConfigureConnection_assembly_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Data.ConfigureConnection_assembly_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Data.ConfigureConnection_assembly_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Data.ConfigureConnection_assembly_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Data.ConfigureConnection_assembly_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.Data.CreateConnectionMacro" />
    <member name="M:Nemerle.Data.CreateConnectionMacro.#ctor" />
    <member name="F:Nemerle.Data.CreateConnectionMacro.my_usage" />
    <member name="F:Nemerle.Data.CreateConnectionMacro.keywords" />
    <member name="M:Nemerle.Data.CreateConnectionMacro.#cctor" />
    <member name="M:Nemerle.Data.CreateConnectionMacro.get_Location" />
    <member name="P:Nemerle.Data.CreateConnectionMacro.Location" />
    <member name="M:Nemerle.Data.CreateConnectionMacro.get_IsInherited" />
    <member name="P:Nemerle.Data.CreateConnectionMacro.IsInherited" />
    <member name="M:Nemerle.Data.CreateConnectionMacro.get_Keywords" />
    <member name="P:Nemerle.Data.CreateConnectionMacro.Keywords" />
    <member name="M:Nemerle.Data.CreateConnectionMacro.GetName" />
    <member name="M:Nemerle.Data.CreateConnectionMacro.get_Name" />
    <member name="P:Nemerle.Data.CreateConnectionMacro.Name" />
    <member name="M:Nemerle.Data.CreateConnectionMacro.get_Namespace" />
    <member name="P:Nemerle.Data.CreateConnectionMacro.Namespace" />
    <member name="M:Nemerle.Data.CreateConnectionMacro.GetNamespace" />
    <member name="M:Nemerle.Data.CreateConnectionMacro.get_Usage" />
    <member name="P:Nemerle.Data.CreateConnectionMacro.Usage" />
    <member name="M:Nemerle.Data.CreateConnectionMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Data.CreateConnectionMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Data.CreateConnectionMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Data.CreateConnectionMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Data.CreateConnectionMacro.SyntaxExtension" />
    <member name="T:Nemerle.Data.ExecuteNonQueryMacro" />
    <member name="M:Nemerle.Data.ExecuteNonQueryMacro.#ctor" />
    <member name="F:Nemerle.Data.ExecuteNonQueryMacro.my_usage" />
    <member name="F:Nemerle.Data.ExecuteNonQueryMacro.keywords" />
    <member name="M:Nemerle.Data.ExecuteNonQueryMacro.#cctor" />
    <member name="M:Nemerle.Data.ExecuteNonQueryMacro.get_Location" />
    <member name="P:Nemerle.Data.ExecuteNonQueryMacro.Location" />
    <member name="M:Nemerle.Data.ExecuteNonQueryMacro.get_IsInherited" />
    <member name="P:Nemerle.Data.ExecuteNonQueryMacro.IsInherited" />
    <member name="M:Nemerle.Data.ExecuteNonQueryMacro.get_Keywords" />
    <member name="P:Nemerle.Data.ExecuteNonQueryMacro.Keywords" />
    <member name="M:Nemerle.Data.ExecuteNonQueryMacro.GetName" />
    <member name="M:Nemerle.Data.ExecuteNonQueryMacro.get_Name" />
    <member name="P:Nemerle.Data.ExecuteNonQueryMacro.Name" />
    <member name="M:Nemerle.Data.ExecuteNonQueryMacro.get_Namespace" />
    <member name="P:Nemerle.Data.ExecuteNonQueryMacro.Namespace" />
    <member name="M:Nemerle.Data.ExecuteNonQueryMacro.GetNamespace" />
    <member name="M:Nemerle.Data.ExecuteNonQueryMacro.get_Usage" />
    <member name="P:Nemerle.Data.ExecuteNonQueryMacro.Usage" />
    <member name="M:Nemerle.Data.ExecuteNonQueryMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Data.ExecuteNonQueryMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Data.ExecuteNonQueryMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Data.ExecuteNonQueryMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Data.ExecuteNonQueryMacro.SyntaxExtension" />
    <member name="T:Nemerle.Data.ExecuteScalarMacro" />
    <member name="M:Nemerle.Data.ExecuteScalarMacro.#ctor" />
    <member name="F:Nemerle.Data.ExecuteScalarMacro.my_usage" />
    <member name="F:Nemerle.Data.ExecuteScalarMacro.keywords" />
    <member name="M:Nemerle.Data.ExecuteScalarMacro.#cctor" />
    <member name="M:Nemerle.Data.ExecuteScalarMacro.get_Location" />
    <member name="P:Nemerle.Data.ExecuteScalarMacro.Location" />
    <member name="M:Nemerle.Data.ExecuteScalarMacro.get_IsInherited" />
    <member name="P:Nemerle.Data.ExecuteScalarMacro.IsInherited" />
    <member name="M:Nemerle.Data.ExecuteScalarMacro.get_Keywords" />
    <member name="P:Nemerle.Data.ExecuteScalarMacro.Keywords" />
    <member name="M:Nemerle.Data.ExecuteScalarMacro.GetName" />
    <member name="M:Nemerle.Data.ExecuteScalarMacro.get_Name" />
    <member name="P:Nemerle.Data.ExecuteScalarMacro.Name" />
    <member name="M:Nemerle.Data.ExecuteScalarMacro.get_Namespace" />
    <member name="P:Nemerle.Data.ExecuteScalarMacro.Namespace" />
    <member name="M:Nemerle.Data.ExecuteScalarMacro.GetNamespace" />
    <member name="M:Nemerle.Data.ExecuteScalarMacro.get_Usage" />
    <member name="P:Nemerle.Data.ExecuteScalarMacro.Usage" />
    <member name="M:Nemerle.Data.ExecuteScalarMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Data.ExecuteScalarMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Data.ExecuteScalarMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Data.ExecuteScalarMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Data.ExecuteScalarMacro.SyntaxExtension" />
    <member name="T:Nemerle.Data.ExecuteReaderMacro" />
    <member name="M:Nemerle.Data.ExecuteReaderMacro.#ctor" />
    <member name="F:Nemerle.Data.ExecuteReaderMacro.my_usage" />
    <member name="F:Nemerle.Data.ExecuteReaderMacro.keywords" />
    <member name="M:Nemerle.Data.ExecuteReaderMacro.#cctor" />
    <member name="M:Nemerle.Data.ExecuteReaderMacro.get_Location" />
    <member name="P:Nemerle.Data.ExecuteReaderMacro.Location" />
    <member name="M:Nemerle.Data.ExecuteReaderMacro.get_IsInherited" />
    <member name="P:Nemerle.Data.ExecuteReaderMacro.IsInherited" />
    <member name="M:Nemerle.Data.ExecuteReaderMacro.get_Keywords" />
    <member name="P:Nemerle.Data.ExecuteReaderMacro.Keywords" />
    <member name="M:Nemerle.Data.ExecuteReaderMacro.GetName" />
    <member name="M:Nemerle.Data.ExecuteReaderMacro.get_Name" />
    <member name="P:Nemerle.Data.ExecuteReaderMacro.Name" />
    <member name="M:Nemerle.Data.ExecuteReaderMacro.get_Namespace" />
    <member name="P:Nemerle.Data.ExecuteReaderMacro.Namespace" />
    <member name="M:Nemerle.Data.ExecuteReaderMacro.GetNamespace" />
    <member name="M:Nemerle.Data.ExecuteReaderMacro.get_Usage" />
    <member name="P:Nemerle.Data.ExecuteReaderMacro.Usage" />
    <member name="M:Nemerle.Data.ExecuteReaderMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Data.ExecuteReaderMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Data.ExecuteReaderMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Data.ExecuteReaderMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Data.ExecuteReaderMacro.SyntaxExtension" />
    <member name="T:Nemerle.Data.ExecuteReaderLoopMacro" />
    <member name="M:Nemerle.Data.ExecuteReaderLoopMacro.#ctor" />
    <member name="F:Nemerle.Data.ExecuteReaderLoopMacro.my_usage" />
    <member name="F:Nemerle.Data.ExecuteReaderLoopMacro.keywords" />
    <member name="M:Nemerle.Data.ExecuteReaderLoopMacro.#cctor" />
    <member name="M:Nemerle.Data.ExecuteReaderLoopMacro.get_Location" />
    <member name="P:Nemerle.Data.ExecuteReaderLoopMacro.Location" />
    <member name="M:Nemerle.Data.ExecuteReaderLoopMacro.get_IsInherited" />
    <member name="P:Nemerle.Data.ExecuteReaderLoopMacro.IsInherited" />
    <member name="M:Nemerle.Data.ExecuteReaderLoopMacro.get_Keywords" />
    <member name="P:Nemerle.Data.ExecuteReaderLoopMacro.Keywords" />
    <member name="M:Nemerle.Data.ExecuteReaderLoopMacro.GetName" />
    <member name="M:Nemerle.Data.ExecuteReaderLoopMacro.get_Name" />
    <member name="P:Nemerle.Data.ExecuteReaderLoopMacro.Name" />
    <member name="M:Nemerle.Data.ExecuteReaderLoopMacro.get_Namespace" />
    <member name="P:Nemerle.Data.ExecuteReaderLoopMacro.Namespace" />
    <member name="M:Nemerle.Data.ExecuteReaderLoopMacro.GetNamespace" />
    <member name="M:Nemerle.Data.ExecuteReaderLoopMacro.get_Usage" />
    <member name="P:Nemerle.Data.ExecuteReaderLoopMacro.Usage" />
    <member name="M:Nemerle.Data.ExecuteReaderLoopMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Data.ExecuteReaderLoopMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Data.ExecuteReaderLoopMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Data.ExecuteReaderLoopMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Data.ExecuteReaderLoopMacro.SyntaxExtension" />
    <member name="T:Nemerle.Data.Helper" />
    <member name="M:Nemerle.Data.Helper.#cctor" />
    <member name="F:Nemerle.Data.Helper.connections" />
    <member name="M:Nemerle.Data.Helper.CreateConnection(Nemerle.Compiler.ManagerClass,System.String,System.String)" />
    <member name="M:Nemerle.Data.Helper.CreateCommand(System.String,System.String,System.Boolean)" />
    <member name="M:Nemerle.Data.Helper.InitParameter(System.Data.IDbCommand,System.String,Nemerle.Compiler.FixedType)" />
    <member name="M:Nemerle.Data.Helper.ConnectionExpr(Nemerle.Compiler.ManagerClass,System.String)" />
    <member name="M:Nemerle.Data.Helper.CommandExpr(Nemerle.Compiler.ManagerClass,System.String,System.String,Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="M:Nemerle.Data.Helper.ParameterChar(System.String)" />
    <member name="M:Nemerle.Data.Helper.get_connection(System.String)" />
    <member name="M:Nemerle.Data.Helper.type_representant(Nemerle.Compiler.FixedType)" />
    <member name="M:Nemerle.Data.Helper.ExtractParameters(Nemerle.Compiler.Typer,System.String,System.Char)">
      <summary>
        <para>Extracts parameters after $, perform typing of expressions containing
        variables with names of those parameters.

</para>
      </summary>        <remarks><para>Returns:
        - final SQL provider specific query
        - collection of pairs of name and typed expression containing variable with this
          name
        - list of expressions initializing [querycmd.Parameters] to value of
          above variables

</para></remarks></member>
    <member name="M:Nemerle.Data.Helper.GenerateFetchExpr(Nemerle.Compiler.ManagerClass,System.String,System.Int32,System.Boolean)" />
    <member name="T:Nemerle.DesignPatterns.ProxyPublicMembers_field_postaddMacro" />
    <member name="M:Nemerle.DesignPatterns.ProxyPublicMembers_field_postaddMacro.#ctor" />
    <member name="F:Nemerle.DesignPatterns.ProxyPublicMembers_field_postaddMacro.my_usage" />
    <member name="F:Nemerle.DesignPatterns.ProxyPublicMembers_field_postaddMacro.keywords" />
    <member name="M:Nemerle.DesignPatterns.ProxyPublicMembers_field_postaddMacro.#cctor" />
    <member name="M:Nemerle.DesignPatterns.ProxyPublicMembers_field_postaddMacro.get_Location" />
    <member name="P:Nemerle.DesignPatterns.ProxyPublicMembers_field_postaddMacro.Location" />
    <member name="M:Nemerle.DesignPatterns.ProxyPublicMembers_field_postaddMacro.get_IsInherited" />
    <member name="P:Nemerle.DesignPatterns.ProxyPublicMembers_field_postaddMacro.IsInherited" />
    <member name="M:Nemerle.DesignPatterns.ProxyPublicMembers_field_postaddMacro.get_Keywords" />
    <member name="P:Nemerle.DesignPatterns.ProxyPublicMembers_field_postaddMacro.Keywords" />
    <member name="M:Nemerle.DesignPatterns.ProxyPublicMembers_field_postaddMacro.GetName" />
    <member name="M:Nemerle.DesignPatterns.ProxyPublicMembers_field_postaddMacro.get_Name" />
    <member name="P:Nemerle.DesignPatterns.ProxyPublicMembers_field_postaddMacro.Name" />
    <member name="M:Nemerle.DesignPatterns.ProxyPublicMembers_field_postaddMacro.get_Namespace" />
    <member name="P:Nemerle.DesignPatterns.ProxyPublicMembers_field_postaddMacro.Namespace" />
    <member name="M:Nemerle.DesignPatterns.ProxyPublicMembers_field_postaddMacro.GetNamespace" />
    <member name="M:Nemerle.DesignPatterns.ProxyPublicMembers_field_postaddMacro.get_Usage" />
    <member name="P:Nemerle.DesignPatterns.ProxyPublicMembers_field_postaddMacro.Usage" />
    <member name="M:Nemerle.DesignPatterns.ProxyPublicMembers_field_postaddMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.DesignPatterns.ProxyPublicMembers_field_postaddMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.DesignPatterns.ProxyPublicMembers_field_postaddMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.DesignPatterns.ProxyPublicMembers_field_postaddMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.DesignPatterns.ProxyPublicMembers_field_postaddMacro.SyntaxExtension" />
    <member name="T:Nemerle.DesignPatterns.AbstractFactory_type_preaddMacro" />
    <member name="M:Nemerle.DesignPatterns.AbstractFactory_type_preaddMacro._N_get_simple_name_39119(Nemerle.Compiler.Parsetree.PExpr,Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="M:Nemerle.DesignPatterns.AbstractFactory_type_preaddMacro._N_interpret_expr_39079(Nemerle.DesignPatterns.AbstractFactory_type_preaddMacro._N_closureOf_Run_39051,Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="M:Nemerle.DesignPatterns.AbstractFactory_type_preaddMacro._N_interpret_generics_39069(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr},Nemerle.Builtins.Tuple{Nemerle.Core.list{Nemerle.Compiler.Parsetree.Splicable},Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr}})" />
    <member name="M:Nemerle.DesignPatterns.AbstractFactory_type_preaddMacro.#ctor" />
    <member name="F:Nemerle.DesignPatterns.AbstractFactory_type_preaddMacro.my_usage" />
    <member name="F:Nemerle.DesignPatterns.AbstractFactory_type_preaddMacro.keywords" />
    <member name="M:Nemerle.DesignPatterns.AbstractFactory_type_preaddMacro.#cctor" />
    <member name="M:Nemerle.DesignPatterns.AbstractFactory_type_preaddMacro.get_Location" />
    <member name="P:Nemerle.DesignPatterns.AbstractFactory_type_preaddMacro.Location" />
    <member name="M:Nemerle.DesignPatterns.AbstractFactory_type_preaddMacro.get_IsInherited" />
    <member name="P:Nemerle.DesignPatterns.AbstractFactory_type_preaddMacro.IsInherited" />
    <member name="M:Nemerle.DesignPatterns.AbstractFactory_type_preaddMacro.get_Keywords" />
    <member name="P:Nemerle.DesignPatterns.AbstractFactory_type_preaddMacro.Keywords" />
    <member name="M:Nemerle.DesignPatterns.AbstractFactory_type_preaddMacro.GetName" />
    <member name="M:Nemerle.DesignPatterns.AbstractFactory_type_preaddMacro.get_Name" />
    <member name="P:Nemerle.DesignPatterns.AbstractFactory_type_preaddMacro.Name" />
    <member name="M:Nemerle.DesignPatterns.AbstractFactory_type_preaddMacro.get_Namespace" />
    <member name="P:Nemerle.DesignPatterns.AbstractFactory_type_preaddMacro.Namespace" />
    <member name="M:Nemerle.DesignPatterns.AbstractFactory_type_preaddMacro.GetNamespace" />
    <member name="M:Nemerle.DesignPatterns.AbstractFactory_type_preaddMacro.get_Usage" />
    <member name="P:Nemerle.DesignPatterns.AbstractFactory_type_preaddMacro.Usage" />
    <member name="M:Nemerle.DesignPatterns.AbstractFactory_type_preaddMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.DesignPatterns.AbstractFactory_type_preaddMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.DesignPatterns.AbstractFactory_type_preaddMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.DesignPatterns.AbstractFactory_type_preaddMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.DesignPatterns.AbstractFactory_type_preaddMacro.SyntaxExtension" />
    <member name="T:Nemerle.DesignPatterns.CtorsHelper" />
    <member name="M:Nemerle.DesignPatterns.CtorsHelper.GetConstructorParameterProviders(Nemerle.Compiler.TypeInfo)" />
    <member name="T:Nemerle.DesignPatterns.Aggregate_type_preaddMacro" />
    <member name="M:Nemerle.DesignPatterns.Aggregate_type_preaddMacro.#ctor" />
    <member name="F:Nemerle.DesignPatterns.Aggregate_type_preaddMacro.my_usage" />
    <member name="F:Nemerle.DesignPatterns.Aggregate_type_preaddMacro.keywords" />
    <member name="M:Nemerle.DesignPatterns.Aggregate_type_preaddMacro.#cctor" />
    <member name="M:Nemerle.DesignPatterns.Aggregate_type_preaddMacro.get_Location" />
    <member name="P:Nemerle.DesignPatterns.Aggregate_type_preaddMacro.Location" />
    <member name="M:Nemerle.DesignPatterns.Aggregate_type_preaddMacro.get_IsInherited" />
    <member name="P:Nemerle.DesignPatterns.Aggregate_type_preaddMacro.IsInherited" />
    <member name="M:Nemerle.DesignPatterns.Aggregate_type_preaddMacro.get_Keywords" />
    <member name="P:Nemerle.DesignPatterns.Aggregate_type_preaddMacro.Keywords" />
    <member name="M:Nemerle.DesignPatterns.Aggregate_type_preaddMacro.GetName" />
    <member name="M:Nemerle.DesignPatterns.Aggregate_type_preaddMacro.get_Name" />
    <member name="P:Nemerle.DesignPatterns.Aggregate_type_preaddMacro.Name" />
    <member name="M:Nemerle.DesignPatterns.Aggregate_type_preaddMacro.get_Namespace" />
    <member name="P:Nemerle.DesignPatterns.Aggregate_type_preaddMacro.Namespace" />
    <member name="M:Nemerle.DesignPatterns.Aggregate_type_preaddMacro.GetNamespace" />
    <member name="M:Nemerle.DesignPatterns.Aggregate_type_preaddMacro.get_Usage" />
    <member name="P:Nemerle.DesignPatterns.Aggregate_type_preaddMacro.Usage" />
    <member name="M:Nemerle.DesignPatterns.Aggregate_type_preaddMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.DesignPatterns.Aggregate_type_preaddMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.DesignPatterns.Aggregate_type_preaddMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.DesignPatterns.Aggregate_type_preaddMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.DesignPatterns.Aggregate_type_preaddMacro.SyntaxExtension" />
    <member name="T:Nemerle.DesignPatterns.Singleton_type_postaddMacro">
      <summary>
        <para>Usage
     [Singleton(Protected, Internal)]
     class Class1[T]:List[T]
     {
     }
 Generates static threadsafe property Instance, in parameters we may set accesslevel
 or [Singleton(Accessor = AccessorName)]

</para>
      </summary>
    </member>
    <member name="M:Nemerle.DesignPatterns.Singleton_type_postaddMacro.#ctor" />
    <member name="F:Nemerle.DesignPatterns.Singleton_type_postaddMacro.my_usage" />
    <member name="F:Nemerle.DesignPatterns.Singleton_type_postaddMacro.keywords" />
    <member name="M:Nemerle.DesignPatterns.Singleton_type_postaddMacro.#cctor" />
    <member name="M:Nemerle.DesignPatterns.Singleton_type_postaddMacro.get_Location" />
    <member name="P:Nemerle.DesignPatterns.Singleton_type_postaddMacro.Location" />
    <member name="M:Nemerle.DesignPatterns.Singleton_type_postaddMacro.get_IsInherited" />
    <member name="P:Nemerle.DesignPatterns.Singleton_type_postaddMacro.IsInherited" />
    <member name="M:Nemerle.DesignPatterns.Singleton_type_postaddMacro.get_Keywords" />
    <member name="P:Nemerle.DesignPatterns.Singleton_type_postaddMacro.Keywords" />
    <member name="M:Nemerle.DesignPatterns.Singleton_type_postaddMacro.GetName" />
    <member name="M:Nemerle.DesignPatterns.Singleton_type_postaddMacro.get_Name" />
    <member name="P:Nemerle.DesignPatterns.Singleton_type_postaddMacro.Name" />
    <member name="M:Nemerle.DesignPatterns.Singleton_type_postaddMacro.get_Namespace" />
    <member name="P:Nemerle.DesignPatterns.Singleton_type_postaddMacro.Namespace" />
    <member name="M:Nemerle.DesignPatterns.Singleton_type_postaddMacro.GetNamespace" />
    <member name="M:Nemerle.DesignPatterns.Singleton_type_postaddMacro.get_Usage" />
    <member name="P:Nemerle.DesignPatterns.Singleton_type_postaddMacro.Usage" />
    <member name="M:Nemerle.DesignPatterns.Singleton_type_postaddMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.DesignPatterns.Singleton_type_postaddMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.DesignPatterns.Singleton_type_postaddMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.DesignPatterns.Singleton_type_postaddMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.DesignPatterns.Singleton_type_postaddMacro.SyntaxExtension" />
    <member name="T:Nemerle.English.andMacro" />
    <member name="M:Nemerle.English.andMacro.#ctor" />
    <member name="F:Nemerle.English.andMacro.my_usage" />
    <member name="F:Nemerle.English.andMacro.keywords" />
    <member name="M:Nemerle.English.andMacro.#cctor" />
    <member name="M:Nemerle.English.andMacro.get_Location" />
    <member name="P:Nemerle.English.andMacro.Location" />
    <member name="M:Nemerle.English.andMacro.get_IsInherited" />
    <member name="P:Nemerle.English.andMacro.IsInherited" />
    <member name="M:Nemerle.English.andMacro.get_Keywords" />
    <member name="P:Nemerle.English.andMacro.Keywords" />
    <member name="M:Nemerle.English.andMacro.GetName" />
    <member name="M:Nemerle.English.andMacro.get_Name" />
    <member name="P:Nemerle.English.andMacro.Name" />
    <member name="M:Nemerle.English.andMacro.get_Namespace" />
    <member name="P:Nemerle.English.andMacro.Namespace" />
    <member name="M:Nemerle.English.andMacro.GetNamespace" />
    <member name="M:Nemerle.English.andMacro.get_Usage" />
    <member name="P:Nemerle.English.andMacro.Usage" />
    <member name="M:Nemerle.English.andMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.English.andMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.English.andMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.English.andMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.English.andMacro.SyntaxExtension" />
    <member name="T:Nemerle.English.orMacro" />
    <member name="M:Nemerle.English.orMacro.#ctor" />
    <member name="F:Nemerle.English.orMacro.my_usage" />
    <member name="F:Nemerle.English.orMacro.keywords" />
    <member name="M:Nemerle.English.orMacro.#cctor" />
    <member name="M:Nemerle.English.orMacro.get_Location" />
    <member name="P:Nemerle.English.orMacro.Location" />
    <member name="M:Nemerle.English.orMacro.get_IsInherited" />
    <member name="P:Nemerle.English.orMacro.IsInherited" />
    <member name="M:Nemerle.English.orMacro.get_Keywords" />
    <member name="P:Nemerle.English.orMacro.Keywords" />
    <member name="M:Nemerle.English.orMacro.GetName" />
    <member name="M:Nemerle.English.orMacro.get_Name" />
    <member name="P:Nemerle.English.orMacro.Name" />
    <member name="M:Nemerle.English.orMacro.get_Namespace" />
    <member name="P:Nemerle.English.orMacro.Namespace" />
    <member name="M:Nemerle.English.orMacro.GetNamespace" />
    <member name="M:Nemerle.English.orMacro.get_Usage" />
    <member name="P:Nemerle.English.orMacro.Usage" />
    <member name="M:Nemerle.English.orMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.English.orMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.English.orMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.English.orMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.English.orMacro.SyntaxExtension" />
    <member name="T:Nemerle.English.notMacro" />
    <member name="M:Nemerle.English.notMacro.#ctor" />
    <member name="F:Nemerle.English.notMacro.my_usage" />
    <member name="F:Nemerle.English.notMacro.keywords" />
    <member name="M:Nemerle.English.notMacro.#cctor" />
    <member name="M:Nemerle.English.notMacro.get_Location" />
    <member name="P:Nemerle.English.notMacro.Location" />
    <member name="M:Nemerle.English.notMacro.get_IsInherited" />
    <member name="P:Nemerle.English.notMacro.IsInherited" />
    <member name="M:Nemerle.English.notMacro.get_Keywords" />
    <member name="P:Nemerle.English.notMacro.Keywords" />
    <member name="M:Nemerle.English.notMacro.GetName" />
    <member name="M:Nemerle.English.notMacro.get_Name" />
    <member name="P:Nemerle.English.notMacro.Name" />
    <member name="M:Nemerle.English.notMacro.get_Namespace" />
    <member name="P:Nemerle.English.notMacro.Namespace" />
    <member name="M:Nemerle.English.notMacro.GetNamespace" />
    <member name="M:Nemerle.English.notMacro.get_Usage" />
    <member name="P:Nemerle.English.notMacro.Usage" />
    <member name="M:Nemerle.English.notMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.English.notMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.English.notMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.English.notMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.English.notMacro.SyntaxExtension" />
    <member name="T:Nemerle.Utility.ExpandEnvMacro" />
    <member name="M:Nemerle.Utility.ExpandEnvMacro.#ctor" />
    <member name="F:Nemerle.Utility.ExpandEnvMacro.my_usage" />
    <member name="F:Nemerle.Utility.ExpandEnvMacro.keywords" />
    <member name="M:Nemerle.Utility.ExpandEnvMacro.#cctor" />
    <member name="M:Nemerle.Utility.ExpandEnvMacro.get_Location" />
    <member name="P:Nemerle.Utility.ExpandEnvMacro.Location" />
    <member name="M:Nemerle.Utility.ExpandEnvMacro.get_IsInherited" />
    <member name="P:Nemerle.Utility.ExpandEnvMacro.IsInherited" />
    <member name="M:Nemerle.Utility.ExpandEnvMacro.get_Keywords" />
    <member name="P:Nemerle.Utility.ExpandEnvMacro.Keywords" />
    <member name="M:Nemerle.Utility.ExpandEnvMacro.GetName" />
    <member name="M:Nemerle.Utility.ExpandEnvMacro.get_Name" />
    <member name="P:Nemerle.Utility.ExpandEnvMacro.Name" />
    <member name="M:Nemerle.Utility.ExpandEnvMacro.get_Namespace" />
    <member name="P:Nemerle.Utility.ExpandEnvMacro.Namespace" />
    <member name="M:Nemerle.Utility.ExpandEnvMacro.GetNamespace" />
    <member name="M:Nemerle.Utility.ExpandEnvMacro.get_Usage" />
    <member name="P:Nemerle.Utility.ExpandEnvMacro.Usage" />
    <member name="M:Nemerle.Utility.ExpandEnvMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Utility.ExpandEnvMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Utility.ExpandEnvMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Utility.ExpandEnvMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Utility.ExpandEnvMacro.SyntaxExtension" />
    <member name="T:Nemerle.Utility.ExpandEnvHelper" />
    <member name="M:Nemerle.Utility.ExpandEnvHelper._N_evaluateVar_40285(Nemerle.Utility.ExpandEnvHelper._N_closureOf_Expand_40226,System.String)" />
    <member name="M:Nemerle.Utility.ExpandEnvHelper.#cctor" />
    <member name="F:Nemerle.Utility.ExpandEnvHelper.VarRegex" />
    <member name="M:Nemerle.Utility.ExpandEnvHelper.Expand(Nemerle.Compiler.Parsetree.PExpr,Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="T:Nemerle.Utility.ExpandListComprehensionMacro" />
    <member name="M:Nemerle.Utility.ExpandListComprehensionMacro.#ctor" />
    <member name="F:Nemerle.Utility.ExpandListComprehensionMacro.my_usage" />
    <member name="F:Nemerle.Utility.ExpandListComprehensionMacro.keywords" />
    <member name="M:Nemerle.Utility.ExpandListComprehensionMacro.#cctor" />
    <member name="M:Nemerle.Utility.ExpandListComprehensionMacro.get_Location" />
    <member name="P:Nemerle.Utility.ExpandListComprehensionMacro.Location" />
    <member name="M:Nemerle.Utility.ExpandListComprehensionMacro.get_IsInherited" />
    <member name="P:Nemerle.Utility.ExpandListComprehensionMacro.IsInherited" />
    <member name="M:Nemerle.Utility.ExpandListComprehensionMacro.get_Keywords" />
    <member name="P:Nemerle.Utility.ExpandListComprehensionMacro.Keywords" />
    <member name="M:Nemerle.Utility.ExpandListComprehensionMacro.GetName" />
    <member name="M:Nemerle.Utility.ExpandListComprehensionMacro.get_Name" />
    <member name="P:Nemerle.Utility.ExpandListComprehensionMacro.Name" />
    <member name="M:Nemerle.Utility.ExpandListComprehensionMacro.get_Namespace" />
    <member name="P:Nemerle.Utility.ExpandListComprehensionMacro.Namespace" />
    <member name="M:Nemerle.Utility.ExpandListComprehensionMacro.GetNamespace" />
    <member name="M:Nemerle.Utility.ExpandListComprehensionMacro.get_Usage" />
    <member name="P:Nemerle.Utility.ExpandListComprehensionMacro.Usage" />
    <member name="M:Nemerle.Utility.ExpandListComprehensionMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Utility.ExpandListComprehensionMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Utility.ExpandListComprehensionMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Utility.ExpandListComprehensionMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Utility.ExpandListComprehensionMacro.SyntaxExtension" />
    <member name="T:Nemerle.Utility.ListComprehensionHelper" />
    <member name="M:Nemerle.Utility.ListComprehensionHelper.ExpandRange(Nemerle.Compiler.Parsetree.PExpr,Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="T:Nemerle.Utility.ExtensionPattern_type_postaddMacro" />
    <member name="M:Nemerle.Utility.ExtensionPattern_type_postaddMacro.#ctor" />
    <member name="F:Nemerle.Utility.ExtensionPattern_type_postaddMacro.my_usage" />
    <member name="F:Nemerle.Utility.ExtensionPattern_type_postaddMacro.keywords" />
    <member name="M:Nemerle.Utility.ExtensionPattern_type_postaddMacro.#cctor" />
    <member name="M:Nemerle.Utility.ExtensionPattern_type_postaddMacro.get_Location" />
    <member name="P:Nemerle.Utility.ExtensionPattern_type_postaddMacro.Location" />
    <member name="M:Nemerle.Utility.ExtensionPattern_type_postaddMacro.get_IsInherited" />
    <member name="P:Nemerle.Utility.ExtensionPattern_type_postaddMacro.IsInherited" />
    <member name="M:Nemerle.Utility.ExtensionPattern_type_postaddMacro.get_Keywords" />
    <member name="P:Nemerle.Utility.ExtensionPattern_type_postaddMacro.Keywords" />
    <member name="M:Nemerle.Utility.ExtensionPattern_type_postaddMacro.GetName" />
    <member name="M:Nemerle.Utility.ExtensionPattern_type_postaddMacro.get_Name" />
    <member name="P:Nemerle.Utility.ExtensionPattern_type_postaddMacro.Name" />
    <member name="M:Nemerle.Utility.ExtensionPattern_type_postaddMacro.get_Namespace" />
    <member name="P:Nemerle.Utility.ExtensionPattern_type_postaddMacro.Namespace" />
    <member name="M:Nemerle.Utility.ExtensionPattern_type_postaddMacro.GetNamespace" />
    <member name="M:Nemerle.Utility.ExtensionPattern_type_postaddMacro.get_Usage" />
    <member name="P:Nemerle.Utility.ExtensionPattern_type_postaddMacro.Usage" />
    <member name="M:Nemerle.Utility.ExtensionPattern_type_postaddMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Utility.ExtensionPattern_type_postaddMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Utility.ExtensionPattern_type_postaddMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Utility.ExtensionPattern_type_postaddMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Utility.ExtensionPattern_type_postaddMacro.SyntaxExtension" />
    <member name="T:Nemerle.Utility.ExtensionPattern_assembly_postaddMacro" />
    <member name="M:Nemerle.Utility.ExtensionPattern_assembly_postaddMacro.#ctor" />
    <member name="F:Nemerle.Utility.ExtensionPattern_assembly_postaddMacro.my_usage" />
    <member name="F:Nemerle.Utility.ExtensionPattern_assembly_postaddMacro.keywords" />
    <member name="M:Nemerle.Utility.ExtensionPattern_assembly_postaddMacro.#cctor" />
    <member name="M:Nemerle.Utility.ExtensionPattern_assembly_postaddMacro.get_Location" />
    <member name="P:Nemerle.Utility.ExtensionPattern_assembly_postaddMacro.Location" />
    <member name="M:Nemerle.Utility.ExtensionPattern_assembly_postaddMacro.get_IsInherited" />
    <member name="P:Nemerle.Utility.ExtensionPattern_assembly_postaddMacro.IsInherited" />
    <member name="M:Nemerle.Utility.ExtensionPattern_assembly_postaddMacro.get_Keywords" />
    <member name="P:Nemerle.Utility.ExtensionPattern_assembly_postaddMacro.Keywords" />
    <member name="M:Nemerle.Utility.ExtensionPattern_assembly_postaddMacro.GetName" />
    <member name="M:Nemerle.Utility.ExtensionPattern_assembly_postaddMacro.get_Name" />
    <member name="P:Nemerle.Utility.ExtensionPattern_assembly_postaddMacro.Name" />
    <member name="M:Nemerle.Utility.ExtensionPattern_assembly_postaddMacro.get_Namespace" />
    <member name="P:Nemerle.Utility.ExtensionPattern_assembly_postaddMacro.Namespace" />
    <member name="M:Nemerle.Utility.ExtensionPattern_assembly_postaddMacro.GetNamespace" />
    <member name="M:Nemerle.Utility.ExtensionPattern_assembly_postaddMacro.get_Usage" />
    <member name="P:Nemerle.Utility.ExtensionPattern_assembly_postaddMacro.Usage" />
    <member name="M:Nemerle.Utility.ExtensionPattern_assembly_postaddMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Utility.ExtensionPattern_assembly_postaddMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Utility.ExtensionPattern_assembly_postaddMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Utility.ExtensionPattern_assembly_postaddMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Utility.ExtensionPattern_assembly_postaddMacro.SyntaxExtension" />
    <member name="T:Nemerle.Utility.ExtensionPatternImpl" />
    <member name="M:Nemerle.Utility.ExtensionPatternImpl.DoTransform(Nemerle.Compiler.Typer,Nemerle.Compiler.Parsetree.PExpr,Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="M:Nemerle.Utility.ExtensionPatternImpl.AddExtensionPattern(Nemerle.Compiler.TypeInfo,Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="T:Nemerle.Utility.FlagAccessor_field_postscanMacro" />
    <member name="M:Nemerle.Utility.FlagAccessor_field_postscanMacro._N_parse_opts_40929(Nemerle.Utility.FlagAccessor_field_postscanMacro._N_closureOf_Run_40884,Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="M:Nemerle.Utility.FlagAccessor_field_postscanMacro.#ctor" />
    <member name="F:Nemerle.Utility.FlagAccessor_field_postscanMacro.my_usage" />
    <member name="F:Nemerle.Utility.FlagAccessor_field_postscanMacro.keywords" />
    <member name="M:Nemerle.Utility.FlagAccessor_field_postscanMacro.#cctor" />
    <member name="M:Nemerle.Utility.FlagAccessor_field_postscanMacro.get_Location" />
    <member name="P:Nemerle.Utility.FlagAccessor_field_postscanMacro.Location" />
    <member name="M:Nemerle.Utility.FlagAccessor_field_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.Utility.FlagAccessor_field_postscanMacro.IsInherited" />
    <member name="M:Nemerle.Utility.FlagAccessor_field_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.Utility.FlagAccessor_field_postscanMacro.Keywords" />
    <member name="M:Nemerle.Utility.FlagAccessor_field_postscanMacro.GetName" />
    <member name="M:Nemerle.Utility.FlagAccessor_field_postscanMacro.get_Name" />
    <member name="P:Nemerle.Utility.FlagAccessor_field_postscanMacro.Name" />
    <member name="M:Nemerle.Utility.FlagAccessor_field_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.Utility.FlagAccessor_field_postscanMacro.Namespace" />
    <member name="M:Nemerle.Utility.FlagAccessor_field_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.Utility.FlagAccessor_field_postscanMacro.get_Usage" />
    <member name="P:Nemerle.Utility.FlagAccessor_field_postscanMacro.Usage" />
    <member name="M:Nemerle.Utility.FlagAccessor_field_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Utility.FlagAccessor_field_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Utility.FlagAccessor_field_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Utility.FlagAccessor_field_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Utility.FlagAccessor_field_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.Utility.GeneratedAssemblyVersion_assembly_postscanMacro" />
    <member name="M:Nemerle.Utility.GeneratedAssemblyVersion_assembly_postscanMacro.#ctor" />
    <member name="F:Nemerle.Utility.GeneratedAssemblyVersion_assembly_postscanMacro.my_usage" />
    <member name="F:Nemerle.Utility.GeneratedAssemblyVersion_assembly_postscanMacro.keywords" />
    <member name="M:Nemerle.Utility.GeneratedAssemblyVersion_assembly_postscanMacro.#cctor" />
    <member name="M:Nemerle.Utility.GeneratedAssemblyVersion_assembly_postscanMacro.get_Location" />
    <member name="P:Nemerle.Utility.GeneratedAssemblyVersion_assembly_postscanMacro.Location" />
    <member name="M:Nemerle.Utility.GeneratedAssemblyVersion_assembly_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.Utility.GeneratedAssemblyVersion_assembly_postscanMacro.IsInherited" />
    <member name="M:Nemerle.Utility.GeneratedAssemblyVersion_assembly_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.Utility.GeneratedAssemblyVersion_assembly_postscanMacro.Keywords" />
    <member name="M:Nemerle.Utility.GeneratedAssemblyVersion_assembly_postscanMacro.GetName" />
    <member name="M:Nemerle.Utility.GeneratedAssemblyVersion_assembly_postscanMacro.get_Name" />
    <member name="P:Nemerle.Utility.GeneratedAssemblyVersion_assembly_postscanMacro.Name" />
    <member name="M:Nemerle.Utility.GeneratedAssemblyVersion_assembly_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.Utility.GeneratedAssemblyVersion_assembly_postscanMacro.Namespace" />
    <member name="M:Nemerle.Utility.GeneratedAssemblyVersion_assembly_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.Utility.GeneratedAssemblyVersion_assembly_postscanMacro.get_Usage" />
    <member name="P:Nemerle.Utility.GeneratedAssemblyVersion_assembly_postscanMacro.Usage" />
    <member name="M:Nemerle.Utility.GeneratedAssemblyVersion_assembly_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Utility.GeneratedAssemblyVersion_assembly_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Utility.GeneratedAssemblyVersion_assembly_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Utility.GeneratedAssemblyVersion_assembly_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Utility.GeneratedAssemblyVersion_assembly_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.Utility.GitRevisionHelper" />
    <member name="M:Nemerle.Utility.GitRevisionHelper._N_execGit_41160(Nemerle.Utility.GitRevisionHelper._N_closureOf_GetRevisionGeneric_41144,Nemerle.Builtins.FunctionVoid{System.Diagnostics.ProcessStartInfo})" />
    <member name="F:Nemerle.Utility.GitRevisionHelper._N_cache_14253" />
    <member name="M:Nemerle.Utility.GitRevisionHelper.GetRevisionGeneric(System.String)" />
    <member name="T:Nemerle.Imperative.GoTo.GoToMacroMacro" />
    <member name="M:Nemerle.Imperative.GoTo.GoToMacroMacro.#ctor" />
    <member name="F:Nemerle.Imperative.GoTo.GoToMacroMacro.my_usage" />
    <member name="F:Nemerle.Imperative.GoTo.GoToMacroMacro.keywords" />
    <member name="M:Nemerle.Imperative.GoTo.GoToMacroMacro.#cctor" />
    <member name="M:Nemerle.Imperative.GoTo.GoToMacroMacro.get_Location" />
    <member name="P:Nemerle.Imperative.GoTo.GoToMacroMacro.Location" />
    <member name="M:Nemerle.Imperative.GoTo.GoToMacroMacro.get_IsInherited" />
    <member name="P:Nemerle.Imperative.GoTo.GoToMacroMacro.IsInherited" />
    <member name="M:Nemerle.Imperative.GoTo.GoToMacroMacro.get_Keywords" />
    <member name="P:Nemerle.Imperative.GoTo.GoToMacroMacro.Keywords" />
    <member name="M:Nemerle.Imperative.GoTo.GoToMacroMacro.GetName" />
    <member name="M:Nemerle.Imperative.GoTo.GoToMacroMacro.get_Name" />
    <member name="P:Nemerle.Imperative.GoTo.GoToMacroMacro.Name" />
    <member name="M:Nemerle.Imperative.GoTo.GoToMacroMacro.get_Namespace" />
    <member name="P:Nemerle.Imperative.GoTo.GoToMacroMacro.Namespace" />
    <member name="M:Nemerle.Imperative.GoTo.GoToMacroMacro.GetNamespace" />
    <member name="M:Nemerle.Imperative.GoTo.GoToMacroMacro.get_Usage" />
    <member name="P:Nemerle.Imperative.GoTo.GoToMacroMacro.Usage" />
    <member name="M:Nemerle.Imperative.GoTo.GoToMacroMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Imperative.GoTo.GoToMacroMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Imperative.GoTo.GoToMacroMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Imperative.GoTo.GoToMacroMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Imperative.GoTo.GoToMacroMacro.SyntaxExtension" />
    <member name="T:Nemerle.Imperative.GoTo.LabelMacroMacro" />
    <member name="M:Nemerle.Imperative.GoTo.LabelMacroMacro.#ctor" />
    <member name="F:Nemerle.Imperative.GoTo.LabelMacroMacro.my_usage" />
    <member name="F:Nemerle.Imperative.GoTo.LabelMacroMacro.keywords" />
    <member name="M:Nemerle.Imperative.GoTo.LabelMacroMacro.#cctor" />
    <member name="M:Nemerle.Imperative.GoTo.LabelMacroMacro.get_Location" />
    <member name="P:Nemerle.Imperative.GoTo.LabelMacroMacro.Location" />
    <member name="M:Nemerle.Imperative.GoTo.LabelMacroMacro.get_IsInherited" />
    <member name="P:Nemerle.Imperative.GoTo.LabelMacroMacro.IsInherited" />
    <member name="M:Nemerle.Imperative.GoTo.LabelMacroMacro.get_Keywords" />
    <member name="P:Nemerle.Imperative.GoTo.LabelMacroMacro.Keywords" />
    <member name="M:Nemerle.Imperative.GoTo.LabelMacroMacro.GetName" />
    <member name="M:Nemerle.Imperative.GoTo.LabelMacroMacro.get_Name" />
    <member name="P:Nemerle.Imperative.GoTo.LabelMacroMacro.Name" />
    <member name="M:Nemerle.Imperative.GoTo.LabelMacroMacro.get_Namespace" />
    <member name="P:Nemerle.Imperative.GoTo.LabelMacroMacro.Namespace" />
    <member name="M:Nemerle.Imperative.GoTo.LabelMacroMacro.GetNamespace" />
    <member name="M:Nemerle.Imperative.GoTo.LabelMacroMacro.get_Usage" />
    <member name="P:Nemerle.Imperative.GoTo.LabelMacroMacro.Usage" />
    <member name="M:Nemerle.Imperative.GoTo.LabelMacroMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Imperative.GoTo.LabelMacroMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Imperative.GoTo.LabelMacroMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Imperative.GoTo.LabelMacroMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Imperative.GoTo.LabelMacroMacro.SyntaxExtension" />
    <member name="T:Nemerle.Imperative.GoTo.Implementation" />
    <member name="M:Nemerle.Imperative.GoTo.Implementation.GetLabelMap(Nemerle.Compiler.Typer)" />
    <member name="M:Nemerle.Imperative.GoTo.Implementation.GetLabel(Nemerle.Compiler.Typer,Nemerle.Compiler.Parsetree.Name)" />
    <member name="M:Nemerle.Imperative.GoTo.Implementation.DoTransformGoTo(Nemerle.Compiler.Typer,Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="M:Nemerle.Imperative.GoTo.Implementation.DoTransformLabel(Nemerle.Compiler.Typer,Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="T:Nemerle.Imperative.GoTo.PExprLabel" />
    <member name="F:Nemerle.Imperative.GoTo.PExprLabel._nextId" />
    <member name="F:Nemerle.Imperative.GoTo.PExprLabel._manager" />
    <member name="F:Nemerle.Imperative.GoTo.PExprLabel._name" />
    <member name="F:Nemerle.Imperative.GoTo.PExprLabel._id" />
    <member name="F:Nemerle.Imperative.GoTo.PExprLabel._isLabelDefined" />
    <member name="M:Nemerle.Imperative.GoTo.PExprLabel.#ctor(Nemerle.Compiler.ManagerClass,Nemerle.Compiler.Parsetree.Name)" />
    <member name="M:Nemerle.Imperative.GoTo.PExprLabel.Goto" />
    <member name="M:Nemerle.Imperative.GoTo.PExprLabel.Label(Nemerle.Compiler.Location)" />
    <member name="T:Nemerle.InternalMacros.initializerMacro" />
    <member name="M:Nemerle.InternalMacros.initializerMacro.#ctor" />
    <member name="F:Nemerle.InternalMacros.initializerMacro.my_usage" />
    <member name="F:Nemerle.InternalMacros.initializerMacro.keywords" />
    <member name="M:Nemerle.InternalMacros.initializerMacro.#cctor" />
    <member name="M:Nemerle.InternalMacros.initializerMacro.get_Location" />
    <member name="P:Nemerle.InternalMacros.initializerMacro.Location" />
    <member name="M:Nemerle.InternalMacros.initializerMacro.get_IsInherited" />
    <member name="P:Nemerle.InternalMacros.initializerMacro.IsInherited" />
    <member name="M:Nemerle.InternalMacros.initializerMacro.get_Keywords" />
    <member name="P:Nemerle.InternalMacros.initializerMacro.Keywords" />
    <member name="M:Nemerle.InternalMacros.initializerMacro.GetName" />
    <member name="M:Nemerle.InternalMacros.initializerMacro.get_Name" />
    <member name="P:Nemerle.InternalMacros.initializerMacro.Name" />
    <member name="M:Nemerle.InternalMacros.initializerMacro.get_Namespace" />
    <member name="P:Nemerle.InternalMacros.initializerMacro.Namespace" />
    <member name="M:Nemerle.InternalMacros.initializerMacro.GetNamespace" />
    <member name="M:Nemerle.InternalMacros.initializerMacro.get_Usage" />
    <member name="P:Nemerle.InternalMacros.initializerMacro.Usage" />
    <member name="M:Nemerle.InternalMacros.initializerMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.InternalMacros.initializerMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.InternalMacros.initializerMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.InternalMacros.initializerMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.InternalMacros.initializerMacro.SyntaxExtension" />
    <member name="T:Nemerle.InternalMacros.StaticInitializer_field_preaddMacro" />
    <member name="M:Nemerle.InternalMacros.StaticInitializer_field_preaddMacro.#ctor" />
    <member name="F:Nemerle.InternalMacros.StaticInitializer_field_preaddMacro.my_usage" />
    <member name="F:Nemerle.InternalMacros.StaticInitializer_field_preaddMacro.keywords" />
    <member name="M:Nemerle.InternalMacros.StaticInitializer_field_preaddMacro.#cctor" />
    <member name="M:Nemerle.InternalMacros.StaticInitializer_field_preaddMacro.get_Location" />
    <member name="P:Nemerle.InternalMacros.StaticInitializer_field_preaddMacro.Location" />
    <member name="M:Nemerle.InternalMacros.StaticInitializer_field_preaddMacro.get_IsInherited" />
    <member name="P:Nemerle.InternalMacros.StaticInitializer_field_preaddMacro.IsInherited" />
    <member name="M:Nemerle.InternalMacros.StaticInitializer_field_preaddMacro.get_Keywords" />
    <member name="P:Nemerle.InternalMacros.StaticInitializer_field_preaddMacro.Keywords" />
    <member name="M:Nemerle.InternalMacros.StaticInitializer_field_preaddMacro.GetName" />
    <member name="M:Nemerle.InternalMacros.StaticInitializer_field_preaddMacro.get_Name" />
    <member name="P:Nemerle.InternalMacros.StaticInitializer_field_preaddMacro.Name" />
    <member name="M:Nemerle.InternalMacros.StaticInitializer_field_preaddMacro.get_Namespace" />
    <member name="P:Nemerle.InternalMacros.StaticInitializer_field_preaddMacro.Namespace" />
    <member name="M:Nemerle.InternalMacros.StaticInitializer_field_preaddMacro.GetNamespace" />
    <member name="M:Nemerle.InternalMacros.StaticInitializer_field_preaddMacro.get_Usage" />
    <member name="P:Nemerle.InternalMacros.StaticInitializer_field_preaddMacro.Usage" />
    <member name="M:Nemerle.InternalMacros.StaticInitializer_field_preaddMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.InternalMacros.StaticInitializer_field_preaddMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.InternalMacros.StaticInitializer_field_preaddMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.InternalMacros.StaticInitializer_field_preaddMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.InternalMacros.StaticInitializer_field_preaddMacro.SyntaxExtension" />
    <member name="T:Nemerle.InternalMacros.StaticInitializer_field_postaddMacro" />
    <member name="M:Nemerle.InternalMacros.StaticInitializer_field_postaddMacro._N_fetch_inits_41817(Nemerle.InternalMacros.StaticInitializer_field_postaddMacro._N_closureOf_Run_41750,Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.InternalMacros.StaticInitializer_field_postaddMacro.#ctor" />
    <member name="F:Nemerle.InternalMacros.StaticInitializer_field_postaddMacro.my_usage" />
    <member name="F:Nemerle.InternalMacros.StaticInitializer_field_postaddMacro.keywords" />
    <member name="M:Nemerle.InternalMacros.StaticInitializer_field_postaddMacro.#cctor" />
    <member name="M:Nemerle.InternalMacros.StaticInitializer_field_postaddMacro.get_Location" />
    <member name="P:Nemerle.InternalMacros.StaticInitializer_field_postaddMacro.Location" />
    <member name="M:Nemerle.InternalMacros.StaticInitializer_field_postaddMacro.get_IsInherited" />
    <member name="P:Nemerle.InternalMacros.StaticInitializer_field_postaddMacro.IsInherited" />
    <member name="M:Nemerle.InternalMacros.StaticInitializer_field_postaddMacro.get_Keywords" />
    <member name="P:Nemerle.InternalMacros.StaticInitializer_field_postaddMacro.Keywords" />
    <member name="M:Nemerle.InternalMacros.StaticInitializer_field_postaddMacro.GetName" />
    <member name="M:Nemerle.InternalMacros.StaticInitializer_field_postaddMacro.get_Name" />
    <member name="P:Nemerle.InternalMacros.StaticInitializer_field_postaddMacro.Name" />
    <member name="M:Nemerle.InternalMacros.StaticInitializer_field_postaddMacro.get_Namespace" />
    <member name="P:Nemerle.InternalMacros.StaticInitializer_field_postaddMacro.Namespace" />
    <member name="M:Nemerle.InternalMacros.StaticInitializer_field_postaddMacro.GetNamespace" />
    <member name="M:Nemerle.InternalMacros.StaticInitializer_field_postaddMacro.get_Usage" />
    <member name="P:Nemerle.InternalMacros.StaticInitializer_field_postaddMacro.Usage" />
    <member name="M:Nemerle.InternalMacros.StaticInitializer_field_postaddMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.InternalMacros.StaticInitializer_field_postaddMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.InternalMacros.StaticInitializer_field_postaddMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.InternalMacros.StaticInitializer_field_postaddMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.InternalMacros.StaticInitializer_field_postaddMacro.SyntaxExtension" />
    <member name="T:Nemerle.InternalMacros.PropertyEmbeddedField_property_postscanMacro" />
    <member name="M:Nemerle.InternalMacros.PropertyEmbeddedField_property_postscanMacro._N_redirect_41967(Nemerle.InternalMacros.PropertyEmbeddedField_property_postscanMacro._N_closureOf_Run_41951,Nemerle.Core.option{Nemerle.Compiler.Parsetree.ClassMember.Function})" />
    <member name="M:Nemerle.InternalMacros.PropertyEmbeddedField_property_postscanMacro.#ctor" />
    <member name="F:Nemerle.InternalMacros.PropertyEmbeddedField_property_postscanMacro.my_usage" />
    <member name="F:Nemerle.InternalMacros.PropertyEmbeddedField_property_postscanMacro.keywords" />
    <member name="M:Nemerle.InternalMacros.PropertyEmbeddedField_property_postscanMacro.#cctor" />
    <member name="M:Nemerle.InternalMacros.PropertyEmbeddedField_property_postscanMacro.get_Location" />
    <member name="P:Nemerle.InternalMacros.PropertyEmbeddedField_property_postscanMacro.Location" />
    <member name="M:Nemerle.InternalMacros.PropertyEmbeddedField_property_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.InternalMacros.PropertyEmbeddedField_property_postscanMacro.IsInherited" />
    <member name="M:Nemerle.InternalMacros.PropertyEmbeddedField_property_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.InternalMacros.PropertyEmbeddedField_property_postscanMacro.Keywords" />
    <member name="M:Nemerle.InternalMacros.PropertyEmbeddedField_property_postscanMacro.GetName" />
    <member name="M:Nemerle.InternalMacros.PropertyEmbeddedField_property_postscanMacro.get_Name" />
    <member name="P:Nemerle.InternalMacros.PropertyEmbeddedField_property_postscanMacro.Name" />
    <member name="M:Nemerle.InternalMacros.PropertyEmbeddedField_property_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.InternalMacros.PropertyEmbeddedField_property_postscanMacro.Namespace" />
    <member name="M:Nemerle.InternalMacros.PropertyEmbeddedField_property_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.InternalMacros.PropertyEmbeddedField_property_postscanMacro.get_Usage" />
    <member name="P:Nemerle.InternalMacros.PropertyEmbeddedField_property_postscanMacro.Usage" />
    <member name="M:Nemerle.InternalMacros.PropertyEmbeddedField_property_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.InternalMacros.PropertyEmbeddedField_property_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.InternalMacros.PropertyEmbeddedField_property_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.InternalMacros.PropertyEmbeddedField_property_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.InternalMacros.PropertyEmbeddedField_property_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.InternalMacros.EventEmbeddedField_event_postaddMacro" />
    <member name="M:Nemerle.InternalMacros.EventEmbeddedField_event_postaddMacro.#ctor" />
    <member name="F:Nemerle.InternalMacros.EventEmbeddedField_event_postaddMacro.my_usage" />
    <member name="F:Nemerle.InternalMacros.EventEmbeddedField_event_postaddMacro.keywords" />
    <member name="M:Nemerle.InternalMacros.EventEmbeddedField_event_postaddMacro.#cctor" />
    <member name="M:Nemerle.InternalMacros.EventEmbeddedField_event_postaddMacro.get_Location" />
    <member name="P:Nemerle.InternalMacros.EventEmbeddedField_event_postaddMacro.Location" />
    <member name="M:Nemerle.InternalMacros.EventEmbeddedField_event_postaddMacro.get_IsInherited" />
    <member name="P:Nemerle.InternalMacros.EventEmbeddedField_event_postaddMacro.IsInherited" />
    <member name="M:Nemerle.InternalMacros.EventEmbeddedField_event_postaddMacro.get_Keywords" />
    <member name="P:Nemerle.InternalMacros.EventEmbeddedField_event_postaddMacro.Keywords" />
    <member name="M:Nemerle.InternalMacros.EventEmbeddedField_event_postaddMacro.GetName" />
    <member name="M:Nemerle.InternalMacros.EventEmbeddedField_event_postaddMacro.get_Name" />
    <member name="P:Nemerle.InternalMacros.EventEmbeddedField_event_postaddMacro.Name" />
    <member name="M:Nemerle.InternalMacros.EventEmbeddedField_event_postaddMacro.get_Namespace" />
    <member name="P:Nemerle.InternalMacros.EventEmbeddedField_event_postaddMacro.Namespace" />
    <member name="M:Nemerle.InternalMacros.EventEmbeddedField_event_postaddMacro.GetNamespace" />
    <member name="M:Nemerle.InternalMacros.EventEmbeddedField_event_postaddMacro.get_Usage" />
    <member name="P:Nemerle.InternalMacros.EventEmbeddedField_event_postaddMacro.Usage" />
    <member name="M:Nemerle.InternalMacros.EventEmbeddedField_event_postaddMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.InternalMacros.EventEmbeddedField_event_postaddMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.InternalMacros.EventEmbeddedField_event_postaddMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.InternalMacros.EventEmbeddedField_event_postaddMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.InternalMacros.EventEmbeddedField_event_postaddMacro.SyntaxExtension" />
    <member name="T:Nemerle.InternalMacros.RedirectNameMacro" />
    <member name="M:Nemerle.InternalMacros.RedirectNameMacro.#ctor" />
    <member name="F:Nemerle.InternalMacros.RedirectNameMacro.my_usage" />
    <member name="F:Nemerle.InternalMacros.RedirectNameMacro.keywords" />
    <member name="M:Nemerle.InternalMacros.RedirectNameMacro.#cctor" />
    <member name="M:Nemerle.InternalMacros.RedirectNameMacro.get_Location" />
    <member name="P:Nemerle.InternalMacros.RedirectNameMacro.Location" />
    <member name="M:Nemerle.InternalMacros.RedirectNameMacro.get_IsInherited" />
    <member name="P:Nemerle.InternalMacros.RedirectNameMacro.IsInherited" />
    <member name="M:Nemerle.InternalMacros.RedirectNameMacro.get_Keywords" />
    <member name="P:Nemerle.InternalMacros.RedirectNameMacro.Keywords" />
    <member name="M:Nemerle.InternalMacros.RedirectNameMacro.GetName" />
    <member name="M:Nemerle.InternalMacros.RedirectNameMacro.get_Name" />
    <member name="P:Nemerle.InternalMacros.RedirectNameMacro.Name" />
    <member name="M:Nemerle.InternalMacros.RedirectNameMacro.get_Namespace" />
    <member name="P:Nemerle.InternalMacros.RedirectNameMacro.Namespace" />
    <member name="M:Nemerle.InternalMacros.RedirectNameMacro.GetNamespace" />
    <member name="M:Nemerle.InternalMacros.RedirectNameMacro.get_Usage" />
    <member name="P:Nemerle.InternalMacros.RedirectNameMacro.Usage" />
    <member name="M:Nemerle.InternalMacros.RedirectNameMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.InternalMacros.RedirectNameMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.InternalMacros.RedirectNameMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.InternalMacros.RedirectNameMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.InternalMacros.RedirectNameMacro.SyntaxExtension" />
    <member name="T:Nemerle.IO.printfMacro" />
    <member name="M:Nemerle.IO.printfMacro.#ctor" />
    <member name="F:Nemerle.IO.printfMacro.my_usage" />
    <member name="F:Nemerle.IO.printfMacro.keywords" />
    <member name="M:Nemerle.IO.printfMacro.#cctor" />
    <member name="M:Nemerle.IO.printfMacro.get_Location" />
    <member name="P:Nemerle.IO.printfMacro.Location" />
    <member name="M:Nemerle.IO.printfMacro.get_IsInherited" />
    <member name="P:Nemerle.IO.printfMacro.IsInherited" />
    <member name="M:Nemerle.IO.printfMacro.get_Keywords" />
    <member name="P:Nemerle.IO.printfMacro.Keywords" />
    <member name="M:Nemerle.IO.printfMacro.GetName" />
    <member name="M:Nemerle.IO.printfMacro.get_Name" />
    <member name="P:Nemerle.IO.printfMacro.Name" />
    <member name="M:Nemerle.IO.printfMacro.get_Namespace" />
    <member name="P:Nemerle.IO.printfMacro.Namespace" />
    <member name="M:Nemerle.IO.printfMacro.GetNamespace" />
    <member name="M:Nemerle.IO.printfMacro.get_Usage" />
    <member name="P:Nemerle.IO.printfMacro.Usage" />
    <member name="M:Nemerle.IO.printfMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.IO.printfMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.IO.printfMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.IO.printfMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.IO.printfMacro.SyntaxExtension" />
    <member name="T:Nemerle.IO.sprintfMacro" />
    <member name="M:Nemerle.IO.sprintfMacro.#ctor" />
    <member name="F:Nemerle.IO.sprintfMacro.my_usage" />
    <member name="F:Nemerle.IO.sprintfMacro.keywords" />
    <member name="M:Nemerle.IO.sprintfMacro.#cctor" />
    <member name="M:Nemerle.IO.sprintfMacro.get_Location" />
    <member name="P:Nemerle.IO.sprintfMacro.Location" />
    <member name="M:Nemerle.IO.sprintfMacro.get_IsInherited" />
    <member name="P:Nemerle.IO.sprintfMacro.IsInherited" />
    <member name="M:Nemerle.IO.sprintfMacro.get_Keywords" />
    <member name="P:Nemerle.IO.sprintfMacro.Keywords" />
    <member name="M:Nemerle.IO.sprintfMacro.GetName" />
    <member name="M:Nemerle.IO.sprintfMacro.get_Name" />
    <member name="P:Nemerle.IO.sprintfMacro.Name" />
    <member name="M:Nemerle.IO.sprintfMacro.get_Namespace" />
    <member name="P:Nemerle.IO.sprintfMacro.Namespace" />
    <member name="M:Nemerle.IO.sprintfMacro.GetNamespace" />
    <member name="M:Nemerle.IO.sprintfMacro.get_Usage" />
    <member name="P:Nemerle.IO.sprintfMacro.Usage" />
    <member name="M:Nemerle.IO.sprintfMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.IO.sprintfMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.IO.sprintfMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.IO.sprintfMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.IO.sprintfMacro.SyntaxExtension" />
    <member name="T:Nemerle.IO.fprintfMacro">
      <summary>
        <para>Writes output to given System.IO.TextWriter
</para>
      </summary>
    </member>
    <member name="M:Nemerle.IO.fprintfMacro.#ctor" />
    <member name="F:Nemerle.IO.fprintfMacro.my_usage" />
    <member name="F:Nemerle.IO.fprintfMacro.keywords" />
    <member name="M:Nemerle.IO.fprintfMacro.#cctor" />
    <member name="M:Nemerle.IO.fprintfMacro.get_Location" />
    <member name="P:Nemerle.IO.fprintfMacro.Location" />
    <member name="M:Nemerle.IO.fprintfMacro.get_IsInherited" />
    <member name="P:Nemerle.IO.fprintfMacro.IsInherited" />
    <member name="M:Nemerle.IO.fprintfMacro.get_Keywords" />
    <member name="P:Nemerle.IO.fprintfMacro.Keywords" />
    <member name="M:Nemerle.IO.fprintfMacro.GetName" />
    <member name="M:Nemerle.IO.fprintfMacro.get_Name" />
    <member name="P:Nemerle.IO.fprintfMacro.Name" />
    <member name="M:Nemerle.IO.fprintfMacro.get_Namespace" />
    <member name="P:Nemerle.IO.fprintfMacro.Namespace" />
    <member name="M:Nemerle.IO.fprintfMacro.GetNamespace" />
    <member name="M:Nemerle.IO.fprintfMacro.get_Usage" />
    <member name="P:Nemerle.IO.fprintfMacro.Usage" />
    <member name="M:Nemerle.IO.fprintfMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.IO.fprintfMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.IO.fprintfMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.IO.fprintfMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.IO.fprintfMacro.SyntaxExtension" />
    <member name="T:Nemerle.IO.scanfMacro" />
    <member name="M:Nemerle.IO.scanfMacro.#ctor" />
    <member name="F:Nemerle.IO.scanfMacro.my_usage" />
    <member name="F:Nemerle.IO.scanfMacro.keywords" />
    <member name="M:Nemerle.IO.scanfMacro.#cctor" />
    <member name="M:Nemerle.IO.scanfMacro.get_Location" />
    <member name="P:Nemerle.IO.scanfMacro.Location" />
    <member name="M:Nemerle.IO.scanfMacro.get_IsInherited" />
    <member name="P:Nemerle.IO.scanfMacro.IsInherited" />
    <member name="M:Nemerle.IO.scanfMacro.get_Keywords" />
    <member name="P:Nemerle.IO.scanfMacro.Keywords" />
    <member name="M:Nemerle.IO.scanfMacro.GetName" />
    <member name="M:Nemerle.IO.scanfMacro.get_Name" />
    <member name="P:Nemerle.IO.scanfMacro.Name" />
    <member name="M:Nemerle.IO.scanfMacro.get_Namespace" />
    <member name="P:Nemerle.IO.scanfMacro.Namespace" />
    <member name="M:Nemerle.IO.scanfMacro.GetNamespace" />
    <member name="M:Nemerle.IO.scanfMacro.get_Usage" />
    <member name="P:Nemerle.IO.scanfMacro.Usage" />
    <member name="M:Nemerle.IO.scanfMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.IO.scanfMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.IO.scanfMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.IO.scanfMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.IO.scanfMacro.SyntaxExtension" />
    <member name="T:Nemerle.IO.fscanfMacro" />
    <member name="M:Nemerle.IO.fscanfMacro.#ctor" />
    <member name="F:Nemerle.IO.fscanfMacro.my_usage" />
    <member name="F:Nemerle.IO.fscanfMacro.keywords" />
    <member name="M:Nemerle.IO.fscanfMacro.#cctor" />
    <member name="M:Nemerle.IO.fscanfMacro.get_Location" />
    <member name="P:Nemerle.IO.fscanfMacro.Location" />
    <member name="M:Nemerle.IO.fscanfMacro.get_IsInherited" />
    <member name="P:Nemerle.IO.fscanfMacro.IsInherited" />
    <member name="M:Nemerle.IO.fscanfMacro.get_Keywords" />
    <member name="P:Nemerle.IO.fscanfMacro.Keywords" />
    <member name="M:Nemerle.IO.fscanfMacro.GetName" />
    <member name="M:Nemerle.IO.fscanfMacro.get_Name" />
    <member name="P:Nemerle.IO.fscanfMacro.Name" />
    <member name="M:Nemerle.IO.fscanfMacro.get_Namespace" />
    <member name="P:Nemerle.IO.fscanfMacro.Namespace" />
    <member name="M:Nemerle.IO.fscanfMacro.GetNamespace" />
    <member name="M:Nemerle.IO.fscanfMacro.get_Usage" />
    <member name="P:Nemerle.IO.fscanfMacro.Usage" />
    <member name="M:Nemerle.IO.fscanfMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.IO.fscanfMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.IO.fscanfMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.IO.fscanfMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.IO.fscanfMacro.SyntaxExtension" />
    <member name="T:Nemerle.IO.sscanfMacro" />
    <member name="M:Nemerle.IO.sscanfMacro.#ctor" />
    <member name="F:Nemerle.IO.sscanfMacro.my_usage" />
    <member name="F:Nemerle.IO.sscanfMacro.keywords" />
    <member name="M:Nemerle.IO.sscanfMacro.#cctor" />
    <member name="M:Nemerle.IO.sscanfMacro.get_Location" />
    <member name="P:Nemerle.IO.sscanfMacro.Location" />
    <member name="M:Nemerle.IO.sscanfMacro.get_IsInherited" />
    <member name="P:Nemerle.IO.sscanfMacro.IsInherited" />
    <member name="M:Nemerle.IO.sscanfMacro.get_Keywords" />
    <member name="P:Nemerle.IO.sscanfMacro.Keywords" />
    <member name="M:Nemerle.IO.sscanfMacro.GetName" />
    <member name="M:Nemerle.IO.sscanfMacro.get_Name" />
    <member name="P:Nemerle.IO.sscanfMacro.Name" />
    <member name="M:Nemerle.IO.sscanfMacro.get_Namespace" />
    <member name="P:Nemerle.IO.sscanfMacro.Namespace" />
    <member name="M:Nemerle.IO.sscanfMacro.GetNamespace" />
    <member name="M:Nemerle.IO.sscanfMacro.get_Usage" />
    <member name="P:Nemerle.IO.sscanfMacro.Usage" />
    <member name="M:Nemerle.IO.sscanfMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.IO.sscanfMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.IO.sscanfMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.IO.sscanfMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.IO.sscanfMacro.SyntaxExtension" />
    <member name="T:Nemerle.IO.sprintMacro" />
    <member name="M:Nemerle.IO.sprintMacro.#ctor" />
    <member name="F:Nemerle.IO.sprintMacro.my_usage" />
    <member name="F:Nemerle.IO.sprintMacro.keywords" />
    <member name="M:Nemerle.IO.sprintMacro.#cctor" />
    <member name="M:Nemerle.IO.sprintMacro.get_Location" />
    <member name="P:Nemerle.IO.sprintMacro.Location" />
    <member name="M:Nemerle.IO.sprintMacro.get_IsInherited" />
    <member name="P:Nemerle.IO.sprintMacro.IsInherited" />
    <member name="M:Nemerle.IO.sprintMacro.get_Keywords" />
    <member name="P:Nemerle.IO.sprintMacro.Keywords" />
    <member name="M:Nemerle.IO.sprintMacro.GetName" />
    <member name="M:Nemerle.IO.sprintMacro.get_Name" />
    <member name="P:Nemerle.IO.sprintMacro.Name" />
    <member name="M:Nemerle.IO.sprintMacro.get_Namespace" />
    <member name="P:Nemerle.IO.sprintMacro.Namespace" />
    <member name="M:Nemerle.IO.sprintMacro.GetNamespace" />
    <member name="M:Nemerle.IO.sprintMacro.get_Usage" />
    <member name="P:Nemerle.IO.sprintMacro.Usage" />
    <member name="M:Nemerle.IO.sprintMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.IO.sprintMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.IO.sprintMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.IO.sprintMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.IO.sprintMacro.SyntaxExtension" />
    <member name="T:Nemerle.IO.printMacro">
      <summary>
        <para>If string literal is supplied, then prints it to System.Console, replacing all
 occurences of $id with id.ToString () invocation
 If any other expression is supplied, it is equivalent to System.Console.Write

</para>
      </summary>
    </member>
    <member name="M:Nemerle.IO.printMacro.#ctor" />
    <member name="F:Nemerle.IO.printMacro.my_usage" />
    <member name="F:Nemerle.IO.printMacro.keywords" />
    <member name="M:Nemerle.IO.printMacro.#cctor" />
    <member name="M:Nemerle.IO.printMacro.get_Location" />
    <member name="P:Nemerle.IO.printMacro.Location" />
    <member name="M:Nemerle.IO.printMacro.get_IsInherited" />
    <member name="P:Nemerle.IO.printMacro.IsInherited" />
    <member name="M:Nemerle.IO.printMacro.get_Keywords" />
    <member name="P:Nemerle.IO.printMacro.Keywords" />
    <member name="M:Nemerle.IO.printMacro.GetName" />
    <member name="M:Nemerle.IO.printMacro.get_Name" />
    <member name="P:Nemerle.IO.printMacro.Name" />
    <member name="M:Nemerle.IO.printMacro.get_Namespace" />
    <member name="P:Nemerle.IO.printMacro.Namespace" />
    <member name="M:Nemerle.IO.printMacro.GetNamespace" />
    <member name="M:Nemerle.IO.printMacro.get_Usage" />
    <member name="P:Nemerle.IO.printMacro.Usage" />
    <member name="M:Nemerle.IO.printMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.IO.printMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.IO.printMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.IO.printMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.IO.printMacro.SyntaxExtension" />
    <member name="T:Nemerle.IO.Helper" />
    <member name="M:Nemerle.IO.Helper._N_continue_43219(Nemerle.IO.Helper._N_closureOf_make_expressions_43206,Nemerle.IO.Helper._N_closureOf_make_evaluation_exprs_43192,Nemerle.Compiler.Parsetree.PExpr,Nemerle.Core.list{Nemerle.IO.Helper.FormatToken})" />
    <member name="M:Nemerle.IO.Helper._N_make_expressions_43200(Nemerle.IO.Helper._N_closureOf_make_evaluation_exprs_43192,Nemerle.Core.list{Nemerle.IO.Helper.FormatToken},System.Int32,Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr},Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.IO.Helper._N_append_text_43119(Nemerle.IO.Helper._N_closureOf_parse_format_43109)" />
    <member name="M:Nemerle.IO.Helper.PrintfHelper(Nemerle.Compiler.Parsetree.PExpr,Nemerle.Compiler.GlobalEnv,Nemerle.Builtins.Function{System.String,Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.IO.Helper.parse_format(System.String,System.Boolean)">
      <summary>
        <para>parse printf-style formatting string
 http://www.gnu.org/software/libc/manual/html_node/Formatted-Output.html#Formatted%20Output

</para>
      </summary>
    </member>
    <member name="M:Nemerle.IO.Helper.make_evaluation_exprs(Nemerle.Core.list{Nemerle.IO.Helper.FormatToken},Nemerle.Compiler.Parsetree.PExpr[])" />
    <member name="M:Nemerle.IO.Helper.make_scan_results(System.String,Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="M:Nemerle.IO.Helper.make_scan_expressions(System.String,Nemerle.Compiler.Parsetree.PExpr[],Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="T:Nemerle.IO.Helper.FormatToken" />
    <member name="T:Nemerle.Late.LateMacro" />
    <member name="M:Nemerle.Late.LateMacro._N_call_expr_43628(Nemerle.Late.LateMacro._N_closureOf_invoke_located_43551,Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="M:Nemerle.Late.LateMacro._N_transform_43581(Nemerle.Late.LateMacro._N_closureOf_array_literal_43573,Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr},Nemerle.Core.list{System.Boolean},Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Late.LateMacro._N_array_literal_43568(Nemerle.Compiler.Parsetree.PExpr.Ref,Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr},Nemerle.Core.list{System.Boolean})" />
    <member name="F:Nemerle.Late.LateMacro.env" />
    <member name="M:Nemerle.Late.LateMacro.invoke(Nemerle.Compiler.Parsetree.Name,Nemerle.Compiler.Parsetree.PExpr,Nemerle.Compiler.Location,Nemerle.Late.LateMacro.CallInfo,System.Reflection.BindingFlags,System.Boolean)" />
    <member name="M:Nemerle.Late.LateMacro.invoke_located(Nemerle.Compiler.Parsetree.Name,Nemerle.Compiler.Parsetree.PExpr,Nemerle.Late.LateMacro.CallInfo,System.Reflection.BindingFlags,System.Boolean)" />
    <member name="M:Nemerle.Late.LateMacro.is_class_or_macro_name(Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="M:Nemerle.Late.LateMacro.special(Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="M:Nemerle.Late.LateMacro.build(Nemerle.Compiler.Parsetree.Name,Nemerle.Compiler.Parsetree.PExpr,Nemerle.Core.list{Nemerle.Late.LateMacro.LateCall})" />
    <member name="M:Nemerle.Late.LateMacro.scan(Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="M:Nemerle.Late.LateMacro.latebound(Nemerle.Compiler.Parsetree.PExpr,Nemerle.Compiler.Parsetree.PExpr@,System.Boolean)" />
    <member name="M:Nemerle.Late.LateMacro.transform(Nemerle.Compiler.Parsetree.PExpr,System.Boolean)" />
    <member name="M:Nemerle.Late.LateMacro.#ctor(Nemerle.Compiler.GlobalEnv)" />
    <member name="T:Nemerle.Late.LateMacro.CallInfo" />
    <member name="T:Nemerle.Late.LateMacro.LateCall" />
    <member name="T:Nemerle.Late.late_parens_macroMacro" />
    <member name="M:Nemerle.Late.late_parens_macroMacro.#ctor" />
    <member name="F:Nemerle.Late.late_parens_macroMacro.my_usage" />
    <member name="F:Nemerle.Late.late_parens_macroMacro.keywords" />
    <member name="M:Nemerle.Late.late_parens_macroMacro.#cctor" />
    <member name="M:Nemerle.Late.late_parens_macroMacro.get_Location" />
    <member name="P:Nemerle.Late.late_parens_macroMacro.Location" />
    <member name="M:Nemerle.Late.late_parens_macroMacro.get_IsInherited" />
    <member name="P:Nemerle.Late.late_parens_macroMacro.IsInherited" />
    <member name="M:Nemerle.Late.late_parens_macroMacro.get_Keywords" />
    <member name="P:Nemerle.Late.late_parens_macroMacro.Keywords" />
    <member name="M:Nemerle.Late.late_parens_macroMacro.GetName" />
    <member name="M:Nemerle.Late.late_parens_macroMacro.get_Name" />
    <member name="P:Nemerle.Late.late_parens_macroMacro.Name" />
    <member name="M:Nemerle.Late.late_parens_macroMacro.get_Namespace" />
    <member name="P:Nemerle.Late.late_parens_macroMacro.Namespace" />
    <member name="M:Nemerle.Late.late_parens_macroMacro.GetNamespace" />
    <member name="M:Nemerle.Late.late_parens_macroMacro.get_Usage" />
    <member name="P:Nemerle.Late.late_parens_macroMacro.Usage" />
    <member name="M:Nemerle.Late.late_parens_macroMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Late.late_parens_macroMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Late.late_parens_macroMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Late.late_parens_macroMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Late.late_parens_macroMacro.SyntaxExtension" />
    <member name="T:Nemerle.Late.late_macroMacro" />
    <member name="M:Nemerle.Late.late_macroMacro.#ctor" />
    <member name="F:Nemerle.Late.late_macroMacro.my_usage" />
    <member name="F:Nemerle.Late.late_macroMacro.keywords" />
    <member name="M:Nemerle.Late.late_macroMacro.#cctor" />
    <member name="M:Nemerle.Late.late_macroMacro.get_Location" />
    <member name="P:Nemerle.Late.late_macroMacro.Location" />
    <member name="M:Nemerle.Late.late_macroMacro.get_IsInherited" />
    <member name="P:Nemerle.Late.late_macroMacro.IsInherited" />
    <member name="M:Nemerle.Late.late_macroMacro.get_Keywords" />
    <member name="P:Nemerle.Late.late_macroMacro.Keywords" />
    <member name="M:Nemerle.Late.late_macroMacro.GetName" />
    <member name="M:Nemerle.Late.late_macroMacro.get_Name" />
    <member name="P:Nemerle.Late.late_macroMacro.Name" />
    <member name="M:Nemerle.Late.late_macroMacro.get_Namespace" />
    <member name="P:Nemerle.Late.late_macroMacro.Namespace" />
    <member name="M:Nemerle.Late.late_macroMacro.GetNamespace" />
    <member name="M:Nemerle.Late.late_macroMacro.get_Usage" />
    <member name="P:Nemerle.Late.late_macroMacro.Usage" />
    <member name="M:Nemerle.Late.late_macroMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Late.late_macroMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Late.late_macroMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Late.late_macroMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Late.late_macroMacro.SyntaxExtension" />
    <member name="T:Nemerle.Late.nolate_parens_macroMacro" />
    <member name="M:Nemerle.Late.nolate_parens_macroMacro.#ctor" />
    <member name="F:Nemerle.Late.nolate_parens_macroMacro.my_usage" />
    <member name="F:Nemerle.Late.nolate_parens_macroMacro.keywords" />
    <member name="M:Nemerle.Late.nolate_parens_macroMacro.#cctor" />
    <member name="M:Nemerle.Late.nolate_parens_macroMacro.get_Location" />
    <member name="P:Nemerle.Late.nolate_parens_macroMacro.Location" />
    <member name="M:Nemerle.Late.nolate_parens_macroMacro.get_IsInherited" />
    <member name="P:Nemerle.Late.nolate_parens_macroMacro.IsInherited" />
    <member name="M:Nemerle.Late.nolate_parens_macroMacro.get_Keywords" />
    <member name="P:Nemerle.Late.nolate_parens_macroMacro.Keywords" />
    <member name="M:Nemerle.Late.nolate_parens_macroMacro.GetName" />
    <member name="M:Nemerle.Late.nolate_parens_macroMacro.get_Name" />
    <member name="P:Nemerle.Late.nolate_parens_macroMacro.Name" />
    <member name="M:Nemerle.Late.nolate_parens_macroMacro.get_Namespace" />
    <member name="P:Nemerle.Late.nolate_parens_macroMacro.Namespace" />
    <member name="M:Nemerle.Late.nolate_parens_macroMacro.GetNamespace" />
    <member name="M:Nemerle.Late.nolate_parens_macroMacro.get_Usage" />
    <member name="P:Nemerle.Late.nolate_parens_macroMacro.Usage" />
    <member name="M:Nemerle.Late.nolate_parens_macroMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Late.nolate_parens_macroMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Late.nolate_parens_macroMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Late.nolate_parens_macroMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Late.nolate_parens_macroMacro.SyntaxExtension" />
    <member name="T:Nemerle.Late.nolate_macroMacro" />
    <member name="M:Nemerle.Late.nolate_macroMacro.#ctor" />
    <member name="F:Nemerle.Late.nolate_macroMacro.my_usage" />
    <member name="F:Nemerle.Late.nolate_macroMacro.keywords" />
    <member name="M:Nemerle.Late.nolate_macroMacro.#cctor" />
    <member name="M:Nemerle.Late.nolate_macroMacro.get_Location" />
    <member name="P:Nemerle.Late.nolate_macroMacro.Location" />
    <member name="M:Nemerle.Late.nolate_macroMacro.get_IsInherited" />
    <member name="P:Nemerle.Late.nolate_macroMacro.IsInherited" />
    <member name="M:Nemerle.Late.nolate_macroMacro.get_Keywords" />
    <member name="P:Nemerle.Late.nolate_macroMacro.Keywords" />
    <member name="M:Nemerle.Late.nolate_macroMacro.GetName" />
    <member name="M:Nemerle.Late.nolate_macroMacro.get_Name" />
    <member name="P:Nemerle.Late.nolate_macroMacro.Name" />
    <member name="M:Nemerle.Late.nolate_macroMacro.get_Namespace" />
    <member name="P:Nemerle.Late.nolate_macroMacro.Namespace" />
    <member name="M:Nemerle.Late.nolate_macroMacro.GetNamespace" />
    <member name="M:Nemerle.Late.nolate_macroMacro.get_Usage" />
    <member name="P:Nemerle.Late.nolate_macroMacro.Usage" />
    <member name="M:Nemerle.Late.nolate_macroMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Late.nolate_macroMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Late.nolate_macroMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Late.nolate_macroMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Late.nolate_macroMacro.SyntaxExtension" />
    <member name="T:Nemerle.Logging.Helper" />
    <member name="F:Nemerle.Logging.Helper.Flags" />
    <member name="F:Nemerle.Logging.Helper.FlagsToFunctions" />
    <member name="F:Nemerle.Logging.Helper.SetPrintExpression" />
    <member name="F:Nemerle.Logging.Helper.PrependFlag" />
    <member name="F:Nemerle.Logging.Helper.AdditionalLoggingCondition" />
    <member name="M:Nemerle.Logging.Helper.GetName(Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="M:Nemerle.Logging.Helper.Init" />
    <member name="M:Nemerle.Logging.Helper.#cctor" />
    <member name="M:Nemerle.Logging.Helper.LogFlag(Nemerle.Compiler.Parsetree.PExpr,Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="M:Nemerle.Logging.Helper.LogFunction(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr},Nemerle.Compiler.Typer)" />
    <member name="M:Nemerle.Logging.Helper.AddCondition(Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="T:Nemerle.Logging.LogFlag_assembly_postscanMacro" />
    <member name="M:Nemerle.Logging.LogFlag_assembly_postscanMacro.#ctor" />
    <member name="F:Nemerle.Logging.LogFlag_assembly_postscanMacro.my_usage" />
    <member name="F:Nemerle.Logging.LogFlag_assembly_postscanMacro.keywords" />
    <member name="M:Nemerle.Logging.LogFlag_assembly_postscanMacro.#cctor" />
    <member name="M:Nemerle.Logging.LogFlag_assembly_postscanMacro.get_Location" />
    <member name="P:Nemerle.Logging.LogFlag_assembly_postscanMacro.Location" />
    <member name="M:Nemerle.Logging.LogFlag_assembly_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.Logging.LogFlag_assembly_postscanMacro.IsInherited" />
    <member name="M:Nemerle.Logging.LogFlag_assembly_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.Logging.LogFlag_assembly_postscanMacro.Keywords" />
    <member name="M:Nemerle.Logging.LogFlag_assembly_postscanMacro.GetName" />
    <member name="M:Nemerle.Logging.LogFlag_assembly_postscanMacro.get_Name" />
    <member name="P:Nemerle.Logging.LogFlag_assembly_postscanMacro.Name" />
    <member name="M:Nemerle.Logging.LogFlag_assembly_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.Logging.LogFlag_assembly_postscanMacro.Namespace" />
    <member name="M:Nemerle.Logging.LogFlag_assembly_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.Logging.LogFlag_assembly_postscanMacro.get_Usage" />
    <member name="P:Nemerle.Logging.LogFlag_assembly_postscanMacro.Usage" />
    <member name="M:Nemerle.Logging.LogFlag_assembly_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Logging.LogFlag_assembly_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Logging.LogFlag_assembly_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Logging.LogFlag_assembly_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Logging.LogFlag_assembly_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.Logging.LogFlag_type_postscanMacro" />
    <member name="M:Nemerle.Logging.LogFlag_type_postscanMacro.#ctor" />
    <member name="F:Nemerle.Logging.LogFlag_type_postscanMacro.my_usage" />
    <member name="F:Nemerle.Logging.LogFlag_type_postscanMacro.keywords" />
    <member name="M:Nemerle.Logging.LogFlag_type_postscanMacro.#cctor" />
    <member name="M:Nemerle.Logging.LogFlag_type_postscanMacro.get_Location" />
    <member name="P:Nemerle.Logging.LogFlag_type_postscanMacro.Location" />
    <member name="M:Nemerle.Logging.LogFlag_type_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.Logging.LogFlag_type_postscanMacro.IsInherited" />
    <member name="M:Nemerle.Logging.LogFlag_type_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.Logging.LogFlag_type_postscanMacro.Keywords" />
    <member name="M:Nemerle.Logging.LogFlag_type_postscanMacro.GetName" />
    <member name="M:Nemerle.Logging.LogFlag_type_postscanMacro.get_Name" />
    <member name="P:Nemerle.Logging.LogFlag_type_postscanMacro.Name" />
    <member name="M:Nemerle.Logging.LogFlag_type_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.Logging.LogFlag_type_postscanMacro.Namespace" />
    <member name="M:Nemerle.Logging.LogFlag_type_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.Logging.LogFlag_type_postscanMacro.get_Usage" />
    <member name="P:Nemerle.Logging.LogFlag_type_postscanMacro.Usage" />
    <member name="M:Nemerle.Logging.LogFlag_type_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Logging.LogFlag_type_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Logging.LogFlag_type_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Logging.LogFlag_type_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Logging.LogFlag_type_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.Logging.LogFunction_assembly_postscanMacro" />
    <member name="M:Nemerle.Logging.LogFunction_assembly_postscanMacro.#ctor" />
    <member name="F:Nemerle.Logging.LogFunction_assembly_postscanMacro.my_usage" />
    <member name="F:Nemerle.Logging.LogFunction_assembly_postscanMacro.keywords" />
    <member name="M:Nemerle.Logging.LogFunction_assembly_postscanMacro.#cctor" />
    <member name="M:Nemerle.Logging.LogFunction_assembly_postscanMacro.get_Location" />
    <member name="P:Nemerle.Logging.LogFunction_assembly_postscanMacro.Location" />
    <member name="M:Nemerle.Logging.LogFunction_assembly_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.Logging.LogFunction_assembly_postscanMacro.IsInherited" />
    <member name="M:Nemerle.Logging.LogFunction_assembly_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.Logging.LogFunction_assembly_postscanMacro.Keywords" />
    <member name="M:Nemerle.Logging.LogFunction_assembly_postscanMacro.GetName" />
    <member name="M:Nemerle.Logging.LogFunction_assembly_postscanMacro.get_Name" />
    <member name="P:Nemerle.Logging.LogFunction_assembly_postscanMacro.Name" />
    <member name="M:Nemerle.Logging.LogFunction_assembly_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.Logging.LogFunction_assembly_postscanMacro.Namespace" />
    <member name="M:Nemerle.Logging.LogFunction_assembly_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.Logging.LogFunction_assembly_postscanMacro.get_Usage" />
    <member name="P:Nemerle.Logging.LogFunction_assembly_postscanMacro.Usage" />
    <member name="M:Nemerle.Logging.LogFunction_assembly_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Logging.LogFunction_assembly_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Logging.LogFunction_assembly_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Logging.LogFunction_assembly_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Logging.LogFunction_assembly_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.Logging.LogFunction_type_postscanMacro" />
    <member name="M:Nemerle.Logging.LogFunction_type_postscanMacro.#ctor" />
    <member name="F:Nemerle.Logging.LogFunction_type_postscanMacro.my_usage" />
    <member name="F:Nemerle.Logging.LogFunction_type_postscanMacro.keywords" />
    <member name="M:Nemerle.Logging.LogFunction_type_postscanMacro.#cctor" />
    <member name="M:Nemerle.Logging.LogFunction_type_postscanMacro.get_Location" />
    <member name="P:Nemerle.Logging.LogFunction_type_postscanMacro.Location" />
    <member name="M:Nemerle.Logging.LogFunction_type_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.Logging.LogFunction_type_postscanMacro.IsInherited" />
    <member name="M:Nemerle.Logging.LogFunction_type_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.Logging.LogFunction_type_postscanMacro.Keywords" />
    <member name="M:Nemerle.Logging.LogFunction_type_postscanMacro.GetName" />
    <member name="M:Nemerle.Logging.LogFunction_type_postscanMacro.get_Name" />
    <member name="P:Nemerle.Logging.LogFunction_type_postscanMacro.Name" />
    <member name="M:Nemerle.Logging.LogFunction_type_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.Logging.LogFunction_type_postscanMacro.Namespace" />
    <member name="M:Nemerle.Logging.LogFunction_type_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.Logging.LogFunction_type_postscanMacro.get_Usage" />
    <member name="P:Nemerle.Logging.LogFunction_type_postscanMacro.Usage" />
    <member name="M:Nemerle.Logging.LogFunction_type_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Logging.LogFunction_type_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Logging.LogFunction_type_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Logging.LogFunction_type_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Logging.LogFunction_type_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.Logging.LogCondition_assembly_postscanMacro" />
    <member name="M:Nemerle.Logging.LogCondition_assembly_postscanMacro.#ctor" />
    <member name="F:Nemerle.Logging.LogCondition_assembly_postscanMacro.my_usage" />
    <member name="F:Nemerle.Logging.LogCondition_assembly_postscanMacro.keywords" />
    <member name="M:Nemerle.Logging.LogCondition_assembly_postscanMacro.#cctor" />
    <member name="M:Nemerle.Logging.LogCondition_assembly_postscanMacro.get_Location" />
    <member name="P:Nemerle.Logging.LogCondition_assembly_postscanMacro.Location" />
    <member name="M:Nemerle.Logging.LogCondition_assembly_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.Logging.LogCondition_assembly_postscanMacro.IsInherited" />
    <member name="M:Nemerle.Logging.LogCondition_assembly_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.Logging.LogCondition_assembly_postscanMacro.Keywords" />
    <member name="M:Nemerle.Logging.LogCondition_assembly_postscanMacro.GetName" />
    <member name="M:Nemerle.Logging.LogCondition_assembly_postscanMacro.get_Name" />
    <member name="P:Nemerle.Logging.LogCondition_assembly_postscanMacro.Name" />
    <member name="M:Nemerle.Logging.LogCondition_assembly_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.Logging.LogCondition_assembly_postscanMacro.Namespace" />
    <member name="M:Nemerle.Logging.LogCondition_assembly_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.Logging.LogCondition_assembly_postscanMacro.get_Usage" />
    <member name="P:Nemerle.Logging.LogCondition_assembly_postscanMacro.Usage" />
    <member name="M:Nemerle.Logging.LogCondition_assembly_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Logging.LogCondition_assembly_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Logging.LogCondition_assembly_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Logging.LogCondition_assembly_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Logging.LogCondition_assembly_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.Logging.LogFormat_assembly_postscanMacro" />
    <member name="M:Nemerle.Logging.LogFormat_assembly_postscanMacro.#ctor" />
    <member name="F:Nemerle.Logging.LogFormat_assembly_postscanMacro.my_usage" />
    <member name="F:Nemerle.Logging.LogFormat_assembly_postscanMacro.keywords" />
    <member name="M:Nemerle.Logging.LogFormat_assembly_postscanMacro.#cctor" />
    <member name="M:Nemerle.Logging.LogFormat_assembly_postscanMacro.get_Location" />
    <member name="P:Nemerle.Logging.LogFormat_assembly_postscanMacro.Location" />
    <member name="M:Nemerle.Logging.LogFormat_assembly_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.Logging.LogFormat_assembly_postscanMacro.IsInherited" />
    <member name="M:Nemerle.Logging.LogFormat_assembly_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.Logging.LogFormat_assembly_postscanMacro.Keywords" />
    <member name="M:Nemerle.Logging.LogFormat_assembly_postscanMacro.GetName" />
    <member name="M:Nemerle.Logging.LogFormat_assembly_postscanMacro.get_Name" />
    <member name="P:Nemerle.Logging.LogFormat_assembly_postscanMacro.Name" />
    <member name="M:Nemerle.Logging.LogFormat_assembly_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.Logging.LogFormat_assembly_postscanMacro.Namespace" />
    <member name="M:Nemerle.Logging.LogFormat_assembly_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.Logging.LogFormat_assembly_postscanMacro.get_Usage" />
    <member name="P:Nemerle.Logging.LogFormat_assembly_postscanMacro.Usage" />
    <member name="M:Nemerle.Logging.LogFormat_assembly_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Logging.LogFormat_assembly_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Logging.LogFormat_assembly_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Logging.LogFormat_assembly_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Logging.LogFormat_assembly_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.Logging.logMacro" />
    <member name="M:Nemerle.Logging.logMacro.#ctor" />
    <member name="F:Nemerle.Logging.logMacro.my_usage" />
    <member name="F:Nemerle.Logging.logMacro.keywords" />
    <member name="M:Nemerle.Logging.logMacro.#cctor" />
    <member name="M:Nemerle.Logging.logMacro.get_Location" />
    <member name="P:Nemerle.Logging.logMacro.Location" />
    <member name="M:Nemerle.Logging.logMacro.get_IsInherited" />
    <member name="P:Nemerle.Logging.logMacro.IsInherited" />
    <member name="M:Nemerle.Logging.logMacro.get_Keywords" />
    <member name="P:Nemerle.Logging.logMacro.Keywords" />
    <member name="M:Nemerle.Logging.logMacro.GetName" />
    <member name="M:Nemerle.Logging.logMacro.get_Name" />
    <member name="P:Nemerle.Logging.logMacro.Name" />
    <member name="M:Nemerle.Logging.logMacro.get_Namespace" />
    <member name="P:Nemerle.Logging.logMacro.Namespace" />
    <member name="M:Nemerle.Logging.logMacro.GetNamespace" />
    <member name="M:Nemerle.Logging.logMacro.get_Usage" />
    <member name="P:Nemerle.Logging.logMacro.Usage" />
    <member name="M:Nemerle.Logging.logMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Logging.logMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Logging.logMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Logging.logMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Logging.logMacro.SyntaxExtension" />
    <member name="T:Nemerle.Logging.whenloggingMacro" />
    <member name="M:Nemerle.Logging.whenloggingMacro.#ctor" />
    <member name="F:Nemerle.Logging.whenloggingMacro.my_usage" />
    <member name="F:Nemerle.Logging.whenloggingMacro.keywords" />
    <member name="M:Nemerle.Logging.whenloggingMacro.#cctor" />
    <member name="M:Nemerle.Logging.whenloggingMacro.get_Location" />
    <member name="P:Nemerle.Logging.whenloggingMacro.Location" />
    <member name="M:Nemerle.Logging.whenloggingMacro.get_IsInherited" />
    <member name="P:Nemerle.Logging.whenloggingMacro.IsInherited" />
    <member name="M:Nemerle.Logging.whenloggingMacro.get_Keywords" />
    <member name="P:Nemerle.Logging.whenloggingMacro.Keywords" />
    <member name="M:Nemerle.Logging.whenloggingMacro.GetName" />
    <member name="M:Nemerle.Logging.whenloggingMacro.get_Name" />
    <member name="P:Nemerle.Logging.whenloggingMacro.Name" />
    <member name="M:Nemerle.Logging.whenloggingMacro.get_Namespace" />
    <member name="P:Nemerle.Logging.whenloggingMacro.Namespace" />
    <member name="M:Nemerle.Logging.whenloggingMacro.GetNamespace" />
    <member name="M:Nemerle.Logging.whenloggingMacro.get_Usage" />
    <member name="P:Nemerle.Logging.whenloggingMacro.Usage" />
    <member name="M:Nemerle.Logging.whenloggingMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Logging.whenloggingMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Logging.whenloggingMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Logging.whenloggingMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Logging.whenloggingMacro.SyntaxExtension" />
    <member name="T:Nemerle.MarkOptions_type_postscanMacro" />
    <member name="M:Nemerle.MarkOptions_type_postscanMacro.#ctor" />
    <member name="F:Nemerle.MarkOptions_type_postscanMacro.my_usage" />
    <member name="F:Nemerle.MarkOptions_type_postscanMacro.keywords" />
    <member name="M:Nemerle.MarkOptions_type_postscanMacro.#cctor" />
    <member name="M:Nemerle.MarkOptions_type_postscanMacro.get_Location" />
    <member name="P:Nemerle.MarkOptions_type_postscanMacro.Location" />
    <member name="M:Nemerle.MarkOptions_type_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.MarkOptions_type_postscanMacro.IsInherited" />
    <member name="M:Nemerle.MarkOptions_type_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.MarkOptions_type_postscanMacro.Keywords" />
    <member name="M:Nemerle.MarkOptions_type_postscanMacro.GetName" />
    <member name="M:Nemerle.MarkOptions_type_postscanMacro.get_Name" />
    <member name="P:Nemerle.MarkOptions_type_postscanMacro.Name" />
    <member name="M:Nemerle.MarkOptions_type_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.MarkOptions_type_postscanMacro.Namespace" />
    <member name="M:Nemerle.MarkOptions_type_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.MarkOptions_type_postscanMacro.get_Usage" />
    <member name="P:Nemerle.MarkOptions_type_postscanMacro.Usage" />
    <member name="M:Nemerle.MarkOptions_type_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.MarkOptions_type_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.MarkOptions_type_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.MarkOptions_type_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.MarkOptions_type_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.MemoizeScope" />
    <member name="F:Nemerle.MemoizeScope.value__" />
    <member name="F:Nemerle.MemoizeScope.Instance" />
    <member name="F:Nemerle.MemoizeScope.Class" />
    <member name="T:Nemerle.Memoize_method_postaddMacro">
      <summary>
        <para>This macro implements memoization (with the default option Scope = Instance
 for instance methods and Scope = Class for static methods),
 as well as something closer to aggressive sharing, when Scope = Class is used.
 A Synchronized = true | false option is also available, to set thread safety.
 InvalidValue = x option specifies non-cachable value.

</para>
      </summary>
    </member>
    <member name="M:Nemerle.Memoize_method_postaddMacro._N_doCachedCheck_45624(Nemerle.Memoize_method_postaddMacro._N_closureOf_Run_45565,Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="M:Nemerle.Memoize_method_postaddMacro.#ctor">
      <summary>
        <para>This macro implements memoization (with the default option Scope = Instance
 for instance methods and Scope = Class for static methods),
 as well as something closer to aggressive sharing, when Scope = Class is used.
 A Synchronized = true | false option is also available, to set thread safety.
 InvalidValue = x option specifies non-cachable value.

</para>
      </summary>
    </member>
    <member name="F:Nemerle.Memoize_method_postaddMacro.my_usage" />
    <member name="F:Nemerle.Memoize_method_postaddMacro.keywords" />
    <member name="M:Nemerle.Memoize_method_postaddMacro.#cctor" />
    <member name="M:Nemerle.Memoize_method_postaddMacro.get_Location" />
    <member name="P:Nemerle.Memoize_method_postaddMacro.Location" />
    <member name="M:Nemerle.Memoize_method_postaddMacro.get_IsInherited" />
    <member name="P:Nemerle.Memoize_method_postaddMacro.IsInherited" />
    <member name="M:Nemerle.Memoize_method_postaddMacro.get_Keywords" />
    <member name="P:Nemerle.Memoize_method_postaddMacro.Keywords" />
    <member name="M:Nemerle.Memoize_method_postaddMacro.GetName" />
    <member name="M:Nemerle.Memoize_method_postaddMacro.get_Name" />
    <member name="P:Nemerle.Memoize_method_postaddMacro.Name" />
    <member name="M:Nemerle.Memoize_method_postaddMacro.get_Namespace" />
    <member name="P:Nemerle.Memoize_method_postaddMacro.Namespace" />
    <member name="M:Nemerle.Memoize_method_postaddMacro.GetNamespace" />
    <member name="M:Nemerle.Memoize_method_postaddMacro.get_Usage" />
    <member name="P:Nemerle.Memoize_method_postaddMacro.Usage" />
    <member name="M:Nemerle.Memoize_method_postaddMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Memoize_method_postaddMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Memoize_method_postaddMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Memoize_method_postaddMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Memoize_method_postaddMacro.SyntaxExtension" />
    <member name="T:Nemerle.Lazy_param_postscanMacro" />
    <member name="M:Nemerle.Lazy_param_postscanMacro.#ctor" />
    <member name="F:Nemerle.Lazy_param_postscanMacro.my_usage" />
    <member name="F:Nemerle.Lazy_param_postscanMacro.keywords" />
    <member name="M:Nemerle.Lazy_param_postscanMacro.#cctor" />
    <member name="M:Nemerle.Lazy_param_postscanMacro.get_Location" />
    <member name="P:Nemerle.Lazy_param_postscanMacro.Location" />
    <member name="M:Nemerle.Lazy_param_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.Lazy_param_postscanMacro.IsInherited" />
    <member name="M:Nemerle.Lazy_param_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.Lazy_param_postscanMacro.Keywords" />
    <member name="M:Nemerle.Lazy_param_postscanMacro.GetName" />
    <member name="M:Nemerle.Lazy_param_postscanMacro.get_Name" />
    <member name="P:Nemerle.Lazy_param_postscanMacro.Name" />
    <member name="M:Nemerle.Lazy_param_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.Lazy_param_postscanMacro.Namespace" />
    <member name="M:Nemerle.Lazy_param_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.Lazy_param_postscanMacro.get_Usage" />
    <member name="P:Nemerle.Lazy_param_postscanMacro.Usage" />
    <member name="M:Nemerle.Lazy_param_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Lazy_param_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Lazy_param_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Lazy_param_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Lazy_param_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.lazyMacro" />
    <member name="M:Nemerle.lazyMacro.#ctor" />
    <member name="F:Nemerle.lazyMacro.my_usage" />
    <member name="F:Nemerle.lazyMacro.keywords" />
    <member name="M:Nemerle.lazyMacro.#cctor" />
    <member name="M:Nemerle.lazyMacro.get_Location" />
    <member name="P:Nemerle.lazyMacro.Location" />
    <member name="M:Nemerle.lazyMacro.get_IsInherited" />
    <member name="P:Nemerle.lazyMacro.IsInherited" />
    <member name="M:Nemerle.lazyMacro.get_Keywords" />
    <member name="P:Nemerle.lazyMacro.Keywords" />
    <member name="M:Nemerle.lazyMacro.GetName" />
    <member name="M:Nemerle.lazyMacro.get_Name" />
    <member name="P:Nemerle.lazyMacro.Name" />
    <member name="M:Nemerle.lazyMacro.get_Namespace" />
    <member name="P:Nemerle.lazyMacro.Namespace" />
    <member name="M:Nemerle.lazyMacro.GetNamespace" />
    <member name="M:Nemerle.lazyMacro.get_Usage" />
    <member name="P:Nemerle.lazyMacro.Usage" />
    <member name="M:Nemerle.lazyMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.lazyMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.lazyMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.lazyMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.lazyMacro.SyntaxExtension" />
    <member name="T:Nemerle.InheritConstructors_type_postscanMacro" />
    <member name="M:Nemerle.InheritConstructors_type_postscanMacro.#ctor" />
    <member name="F:Nemerle.InheritConstructors_type_postscanMacro.my_usage" />
    <member name="F:Nemerle.InheritConstructors_type_postscanMacro.keywords" />
    <member name="M:Nemerle.InheritConstructors_type_postscanMacro.#cctor" />
    <member name="M:Nemerle.InheritConstructors_type_postscanMacro.get_Location" />
    <member name="P:Nemerle.InheritConstructors_type_postscanMacro.Location" />
    <member name="M:Nemerle.InheritConstructors_type_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.InheritConstructors_type_postscanMacro.IsInherited" />
    <member name="M:Nemerle.InheritConstructors_type_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.InheritConstructors_type_postscanMacro.Keywords" />
    <member name="M:Nemerle.InheritConstructors_type_postscanMacro.GetName" />
    <member name="M:Nemerle.InheritConstructors_type_postscanMacro.get_Name" />
    <member name="P:Nemerle.InheritConstructors_type_postscanMacro.Name" />
    <member name="M:Nemerle.InheritConstructors_type_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.InheritConstructors_type_postscanMacro.Namespace" />
    <member name="M:Nemerle.InheritConstructors_type_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.InheritConstructors_type_postscanMacro.get_Usage" />
    <member name="P:Nemerle.InheritConstructors_type_postscanMacro.Usage" />
    <member name="M:Nemerle.InheritConstructors_type_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.InheritConstructors_type_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.InheritConstructors_type_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.InheritConstructors_type_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.InheritConstructors_type_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.InheritConstructors_type_preaddMacro" />
    <member name="M:Nemerle.InheritConstructors_type_preaddMacro.#ctor" />
    <member name="F:Nemerle.InheritConstructors_type_preaddMacro.my_usage" />
    <member name="F:Nemerle.InheritConstructors_type_preaddMacro.keywords" />
    <member name="M:Nemerle.InheritConstructors_type_preaddMacro.#cctor" />
    <member name="M:Nemerle.InheritConstructors_type_preaddMacro.get_Location" />
    <member name="P:Nemerle.InheritConstructors_type_preaddMacro.Location" />
    <member name="M:Nemerle.InheritConstructors_type_preaddMacro.get_IsInherited" />
    <member name="P:Nemerle.InheritConstructors_type_preaddMacro.IsInherited" />
    <member name="M:Nemerle.InheritConstructors_type_preaddMacro.get_Keywords" />
    <member name="P:Nemerle.InheritConstructors_type_preaddMacro.Keywords" />
    <member name="M:Nemerle.InheritConstructors_type_preaddMacro.GetName" />
    <member name="M:Nemerle.InheritConstructors_type_preaddMacro.get_Name" />
    <member name="P:Nemerle.InheritConstructors_type_preaddMacro.Name" />
    <member name="M:Nemerle.InheritConstructors_type_preaddMacro.get_Namespace" />
    <member name="P:Nemerle.InheritConstructors_type_preaddMacro.Namespace" />
    <member name="M:Nemerle.InheritConstructors_type_preaddMacro.GetNamespace" />
    <member name="M:Nemerle.InheritConstructors_type_preaddMacro.get_Usage" />
    <member name="P:Nemerle.InheritConstructors_type_preaddMacro.Usage" />
    <member name="M:Nemerle.InheritConstructors_type_preaddMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.InheritConstructors_type_preaddMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.InheritConstructors_type_preaddMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.InheritConstructors_type_preaddMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.InheritConstructors_type_preaddMacro.SyntaxExtension" />
    <member name="T:Nemerle.Extensions._N_operator1214590017_4407Macro">
      <summary>
      </summary>
 <example>
 <para>Syntax is following:
 </para><code>
 &lt;[ obj &lt;- { Foo = bar; ... } ]&gt;
 or &gt;[ obj &gt;- ( Foo = bar, ... ) ]gt;
 or &lt;[ obj &gt;- [ foo, bar, ... ] ]gt;
 </code>
 </example>

</member>
    <member name="M:Nemerle.Extensions._N_operator1214590017_4407Macro.#ctor" />
    <member name="F:Nemerle.Extensions._N_operator1214590017_4407Macro.my_usage" />
    <member name="F:Nemerle.Extensions._N_operator1214590017_4407Macro.keywords" />
    <member name="M:Nemerle.Extensions._N_operator1214590017_4407Macro.#cctor" />
    <member name="M:Nemerle.Extensions._N_operator1214590017_4407Macro.get_Location" />
    <member name="P:Nemerle.Extensions._N_operator1214590017_4407Macro.Location" />
    <member name="M:Nemerle.Extensions._N_operator1214590017_4407Macro.get_IsInherited" />
    <member name="P:Nemerle.Extensions._N_operator1214590017_4407Macro.IsInherited" />
    <member name="M:Nemerle.Extensions._N_operator1214590017_4407Macro.get_Keywords" />
    <member name="P:Nemerle.Extensions._N_operator1214590017_4407Macro.Keywords" />
    <member name="M:Nemerle.Extensions._N_operator1214590017_4407Macro.GetName" />
    <member name="M:Nemerle.Extensions._N_operator1214590017_4407Macro.get_Name" />
    <member name="P:Nemerle.Extensions._N_operator1214590017_4407Macro.Name" />
    <member name="M:Nemerle.Extensions._N_operator1214590017_4407Macro.get_Namespace" />
    <member name="P:Nemerle.Extensions._N_operator1214590017_4407Macro.Namespace" />
    <member name="M:Nemerle.Extensions._N_operator1214590017_4407Macro.GetNamespace" />
    <member name="M:Nemerle.Extensions._N_operator1214590017_4407Macro.get_Usage" />
    <member name="P:Nemerle.Extensions._N_operator1214590017_4407Macro.Usage" />
    <member name="M:Nemerle.Extensions._N_operator1214590017_4407Macro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Extensions._N_operator1214590017_4407Macro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Extensions._N_operator1214590017_4407Macro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Extensions._N_operator1214590017_4407Macro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Extensions._N_operator1214590017_4407Macro.SyntaxExtension" />
    <member name="T:Nemerle.Extensions.WithMacroImpl" />
    <member name="M:Nemerle.Extensions.WithMacroImpl._N_createAssignment_46167(Nemerle.Extensions.WithMacroImpl._N_closureOf_MakeCollectionInitializers_46159,Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="M:Nemerle.Extensions.WithMacroImpl._N_createAssignment_46104(Nemerle.Extensions.WithMacroImpl._N_closureOf_MakePropertyInitializers_46096,Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="M:Nemerle.Extensions.WithMacroImpl.Run(Nemerle.Compiler.Parsetree.PExpr,Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="M:Nemerle.Extensions.WithMacroImpl.MakePropertyInitializers(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr},Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="M:Nemerle.Extensions.WithMacroImpl.MakeCollectionInitializers(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr},Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="T:Nemerle.Core.Operators" />
    <member name="M:Nemerle.Core.Operators.CacheAssignExpr(Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="M:Nemerle.Core.Operators.HandlePartialApplication(Nemerle.Compiler.Parsetree.PExpr,Nemerle.Compiler.Parsetree.PExpr,Nemerle.Builtins.Function{Nemerle.Compiler.Parsetree.PExpr,Nemerle.Compiler.Parsetree.PExpr,Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="T:Nemerle.Core._N_operator1974104882_4411Macro" />
    <member name="M:Nemerle.Core._N_operator1974104882_4411Macro.#ctor" />
    <member name="F:Nemerle.Core._N_operator1974104882_4411Macro.my_usage" />
    <member name="F:Nemerle.Core._N_operator1974104882_4411Macro.keywords" />
    <member name="M:Nemerle.Core._N_operator1974104882_4411Macro.#cctor" />
    <member name="M:Nemerle.Core._N_operator1974104882_4411Macro.get_Location" />
    <member name="P:Nemerle.Core._N_operator1974104882_4411Macro.Location" />
    <member name="M:Nemerle.Core._N_operator1974104882_4411Macro.get_IsInherited" />
    <member name="P:Nemerle.Core._N_operator1974104882_4411Macro.IsInherited" />
    <member name="M:Nemerle.Core._N_operator1974104882_4411Macro.get_Keywords" />
    <member name="P:Nemerle.Core._N_operator1974104882_4411Macro.Keywords" />
    <member name="M:Nemerle.Core._N_operator1974104882_4411Macro.GetName" />
    <member name="M:Nemerle.Core._N_operator1974104882_4411Macro.get_Name" />
    <member name="P:Nemerle.Core._N_operator1974104882_4411Macro.Name" />
    <member name="M:Nemerle.Core._N_operator1974104882_4411Macro.get_Namespace" />
    <member name="P:Nemerle.Core._N_operator1974104882_4411Macro.Namespace" />
    <member name="M:Nemerle.Core._N_operator1974104882_4411Macro.GetNamespace" />
    <member name="M:Nemerle.Core._N_operator1974104882_4411Macro.get_Usage" />
    <member name="P:Nemerle.Core._N_operator1974104882_4411Macro.Usage" />
    <member name="M:Nemerle.Core._N_operator1974104882_4411Macro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core._N_operator1974104882_4411Macro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core._N_operator1974104882_4411Macro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core._N_operator1974104882_4411Macro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core._N_operator1974104882_4411Macro.SyntaxExtension" />
    <member name="T:Nemerle.Core._N_operator_781629578_4413Macro" />
    <member name="M:Nemerle.Core._N_operator_781629578_4413Macro.#ctor" />
    <member name="F:Nemerle.Core._N_operator_781629578_4413Macro.my_usage" />
    <member name="F:Nemerle.Core._N_operator_781629578_4413Macro.keywords" />
    <member name="M:Nemerle.Core._N_operator_781629578_4413Macro.#cctor" />
    <member name="M:Nemerle.Core._N_operator_781629578_4413Macro.get_Location" />
    <member name="P:Nemerle.Core._N_operator_781629578_4413Macro.Location" />
    <member name="M:Nemerle.Core._N_operator_781629578_4413Macro.get_IsInherited" />
    <member name="P:Nemerle.Core._N_operator_781629578_4413Macro.IsInherited" />
    <member name="M:Nemerle.Core._N_operator_781629578_4413Macro.get_Keywords" />
    <member name="P:Nemerle.Core._N_operator_781629578_4413Macro.Keywords" />
    <member name="M:Nemerle.Core._N_operator_781629578_4413Macro.GetName" />
    <member name="M:Nemerle.Core._N_operator_781629578_4413Macro.get_Name" />
    <member name="P:Nemerle.Core._N_operator_781629578_4413Macro.Name" />
    <member name="M:Nemerle.Core._N_operator_781629578_4413Macro.get_Namespace" />
    <member name="P:Nemerle.Core._N_operator_781629578_4413Macro.Namespace" />
    <member name="M:Nemerle.Core._N_operator_781629578_4413Macro.GetNamespace" />
    <member name="M:Nemerle.Core._N_operator_781629578_4413Macro.get_Usage" />
    <member name="P:Nemerle.Core._N_operator_781629578_4413Macro.Usage" />
    <member name="M:Nemerle.Core._N_operator_781629578_4413Macro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core._N_operator_781629578_4413Macro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core._N_operator_781629578_4413Macro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core._N_operator_781629578_4413Macro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core._N_operator_781629578_4413Macro.SyntaxExtension" />
    <member name="T:Nemerle.Core._N_operator_775948391_4415Macro" />
    <member name="M:Nemerle.Core._N_operator_775948391_4415Macro.#ctor" />
    <member name="F:Nemerle.Core._N_operator_775948391_4415Macro.my_usage" />
    <member name="F:Nemerle.Core._N_operator_775948391_4415Macro.keywords" />
    <member name="M:Nemerle.Core._N_operator_775948391_4415Macro.#cctor" />
    <member name="M:Nemerle.Core._N_operator_775948391_4415Macro.get_Location" />
    <member name="P:Nemerle.Core._N_operator_775948391_4415Macro.Location" />
    <member name="M:Nemerle.Core._N_operator_775948391_4415Macro.get_IsInherited" />
    <member name="P:Nemerle.Core._N_operator_775948391_4415Macro.IsInherited" />
    <member name="M:Nemerle.Core._N_operator_775948391_4415Macro.get_Keywords" />
    <member name="P:Nemerle.Core._N_operator_775948391_4415Macro.Keywords" />
    <member name="M:Nemerle.Core._N_operator_775948391_4415Macro.GetName" />
    <member name="M:Nemerle.Core._N_operator_775948391_4415Macro.get_Name" />
    <member name="P:Nemerle.Core._N_operator_775948391_4415Macro.Name" />
    <member name="M:Nemerle.Core._N_operator_775948391_4415Macro.get_Namespace" />
    <member name="P:Nemerle.Core._N_operator_775948391_4415Macro.Namespace" />
    <member name="M:Nemerle.Core._N_operator_775948391_4415Macro.GetNamespace" />
    <member name="M:Nemerle.Core._N_operator_775948391_4415Macro.get_Usage" />
    <member name="P:Nemerle.Core._N_operator_775948391_4415Macro.Usage" />
    <member name="M:Nemerle.Core._N_operator_775948391_4415Macro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core._N_operator_775948391_4415Macro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core._N_operator_775948391_4415Macro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core._N_operator_775948391_4415Macro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core._N_operator_775948391_4415Macro.SyntaxExtension" />
    <member name="T:Nemerle.Core._N_operator1979786069_4417Macro" />
    <member name="M:Nemerle.Core._N_operator1979786069_4417Macro.#ctor" />
    <member name="F:Nemerle.Core._N_operator1979786069_4417Macro.my_usage" />
    <member name="F:Nemerle.Core._N_operator1979786069_4417Macro.keywords" />
    <member name="M:Nemerle.Core._N_operator1979786069_4417Macro.#cctor" />
    <member name="M:Nemerle.Core._N_operator1979786069_4417Macro.get_Location" />
    <member name="P:Nemerle.Core._N_operator1979786069_4417Macro.Location" />
    <member name="M:Nemerle.Core._N_operator1979786069_4417Macro.get_IsInherited" />
    <member name="P:Nemerle.Core._N_operator1979786069_4417Macro.IsInherited" />
    <member name="M:Nemerle.Core._N_operator1979786069_4417Macro.get_Keywords" />
    <member name="P:Nemerle.Core._N_operator1979786069_4417Macro.Keywords" />
    <member name="M:Nemerle.Core._N_operator1979786069_4417Macro.GetName" />
    <member name="M:Nemerle.Core._N_operator1979786069_4417Macro.get_Name" />
    <member name="P:Nemerle.Core._N_operator1979786069_4417Macro.Name" />
    <member name="M:Nemerle.Core._N_operator1979786069_4417Macro.get_Namespace" />
    <member name="P:Nemerle.Core._N_operator1979786069_4417Macro.Namespace" />
    <member name="M:Nemerle.Core._N_operator1979786069_4417Macro.GetNamespace" />
    <member name="M:Nemerle.Core._N_operator1979786069_4417Macro.get_Usage" />
    <member name="P:Nemerle.Core._N_operator1979786069_4417Macro.Usage" />
    <member name="M:Nemerle.Core._N_operator1979786069_4417Macro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core._N_operator1979786069_4417Macro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core._N_operator1979786069_4417Macro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core._N_operator1979786069_4417Macro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core._N_operator1979786069_4417Macro.SyntaxExtension" />
    <member name="T:Nemerle.Core._N_operator931298021_4419Macro" />
    <member name="M:Nemerle.Core._N_operator931298021_4419Macro.#ctor" />
    <member name="F:Nemerle.Core._N_operator931298021_4419Macro.my_usage" />
    <member name="F:Nemerle.Core._N_operator931298021_4419Macro.keywords" />
    <member name="M:Nemerle.Core._N_operator931298021_4419Macro.#cctor" />
    <member name="M:Nemerle.Core._N_operator931298021_4419Macro.get_Location" />
    <member name="P:Nemerle.Core._N_operator931298021_4419Macro.Location" />
    <member name="M:Nemerle.Core._N_operator931298021_4419Macro.get_IsInherited" />
    <member name="P:Nemerle.Core._N_operator931298021_4419Macro.IsInherited" />
    <member name="M:Nemerle.Core._N_operator931298021_4419Macro.get_Keywords" />
    <member name="P:Nemerle.Core._N_operator931298021_4419Macro.Keywords" />
    <member name="M:Nemerle.Core._N_operator931298021_4419Macro.GetName" />
    <member name="M:Nemerle.Core._N_operator931298021_4419Macro.get_Name" />
    <member name="P:Nemerle.Core._N_operator931298021_4419Macro.Name" />
    <member name="M:Nemerle.Core._N_operator931298021_4419Macro.get_Namespace" />
    <member name="P:Nemerle.Core._N_operator931298021_4419Macro.Namespace" />
    <member name="M:Nemerle.Core._N_operator931298021_4419Macro.GetNamespace" />
    <member name="M:Nemerle.Core._N_operator931298021_4419Macro.get_Usage" />
    <member name="P:Nemerle.Core._N_operator931298021_4419Macro.Usage" />
    <member name="M:Nemerle.Core._N_operator931298021_4419Macro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core._N_operator931298021_4419Macro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core._N_operator931298021_4419Macro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core._N_operator931298021_4419Macro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core._N_operator931298021_4419Macro.SyntaxExtension" />
    <member name="T:Nemerle.Core._N_operator2021159060_4421Macro" />
    <member name="M:Nemerle.Core._N_operator2021159060_4421Macro.#ctor" />
    <member name="F:Nemerle.Core._N_operator2021159060_4421Macro.my_usage" />
    <member name="F:Nemerle.Core._N_operator2021159060_4421Macro.keywords" />
    <member name="M:Nemerle.Core._N_operator2021159060_4421Macro.#cctor" />
    <member name="M:Nemerle.Core._N_operator2021159060_4421Macro.get_Location" />
    <member name="P:Nemerle.Core._N_operator2021159060_4421Macro.Location" />
    <member name="M:Nemerle.Core._N_operator2021159060_4421Macro.get_IsInherited" />
    <member name="P:Nemerle.Core._N_operator2021159060_4421Macro.IsInherited" />
    <member name="M:Nemerle.Core._N_operator2021159060_4421Macro.get_Keywords" />
    <member name="P:Nemerle.Core._N_operator2021159060_4421Macro.Keywords" />
    <member name="M:Nemerle.Core._N_operator2021159060_4421Macro.GetName" />
    <member name="M:Nemerle.Core._N_operator2021159060_4421Macro.get_Name" />
    <member name="P:Nemerle.Core._N_operator2021159060_4421Macro.Name" />
    <member name="M:Nemerle.Core._N_operator2021159060_4421Macro.get_Namespace" />
    <member name="P:Nemerle.Core._N_operator2021159060_4421Macro.Namespace" />
    <member name="M:Nemerle.Core._N_operator2021159060_4421Macro.GetNamespace" />
    <member name="M:Nemerle.Core._N_operator2021159060_4421Macro.get_Usage" />
    <member name="P:Nemerle.Core._N_operator2021159060_4421Macro.Usage" />
    <member name="M:Nemerle.Core._N_operator2021159060_4421Macro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core._N_operator2021159060_4421Macro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core._N_operator2021159060_4421Macro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core._N_operator2021159060_4421Macro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core._N_operator2021159060_4421Macro.SyntaxExtension" />
    <member name="T:Nemerle.Core._N_operator1214590000_4423Macro" />
    <member name="M:Nemerle.Core._N_operator1214590000_4423Macro.#ctor" />
    <member name="F:Nemerle.Core._N_operator1214590000_4423Macro.my_usage" />
    <member name="F:Nemerle.Core._N_operator1214590000_4423Macro.keywords" />
    <member name="M:Nemerle.Core._N_operator1214590000_4423Macro.#cctor" />
    <member name="M:Nemerle.Core._N_operator1214590000_4423Macro.get_Location" />
    <member name="P:Nemerle.Core._N_operator1214590000_4423Macro.Location" />
    <member name="M:Nemerle.Core._N_operator1214590000_4423Macro.get_IsInherited" />
    <member name="P:Nemerle.Core._N_operator1214590000_4423Macro.IsInherited" />
    <member name="M:Nemerle.Core._N_operator1214590000_4423Macro.get_Keywords" />
    <member name="P:Nemerle.Core._N_operator1214590000_4423Macro.Keywords" />
    <member name="M:Nemerle.Core._N_operator1214590000_4423Macro.GetName" />
    <member name="M:Nemerle.Core._N_operator1214590000_4423Macro.get_Name" />
    <member name="P:Nemerle.Core._N_operator1214590000_4423Macro.Name" />
    <member name="M:Nemerle.Core._N_operator1214590000_4423Macro.get_Namespace" />
    <member name="P:Nemerle.Core._N_operator1214590000_4423Macro.Namespace" />
    <member name="M:Nemerle.Core._N_operator1214590000_4423Macro.GetNamespace" />
    <member name="M:Nemerle.Core._N_operator1214590000_4423Macro.get_Usage" />
    <member name="P:Nemerle.Core._N_operator1214590000_4423Macro.Usage" />
    <member name="M:Nemerle.Core._N_operator1214590000_4423Macro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core._N_operator1214590000_4423Macro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core._N_operator1214590000_4423Macro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core._N_operator1214590000_4423Macro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core._N_operator1214590000_4423Macro.SyntaxExtension" />
    <member name="T:Nemerle.Core._N_operator502129286_4425Macro" />
    <member name="M:Nemerle.Core._N_operator502129286_4425Macro.#ctor" />
    <member name="F:Nemerle.Core._N_operator502129286_4425Macro.my_usage" />
    <member name="F:Nemerle.Core._N_operator502129286_4425Macro.keywords" />
    <member name="M:Nemerle.Core._N_operator502129286_4425Macro.#cctor" />
    <member name="M:Nemerle.Core._N_operator502129286_4425Macro.get_Location" />
    <member name="P:Nemerle.Core._N_operator502129286_4425Macro.Location" />
    <member name="M:Nemerle.Core._N_operator502129286_4425Macro.get_IsInherited" />
    <member name="P:Nemerle.Core._N_operator502129286_4425Macro.IsInherited" />
    <member name="M:Nemerle.Core._N_operator502129286_4425Macro.get_Keywords" />
    <member name="P:Nemerle.Core._N_operator502129286_4425Macro.Keywords" />
    <member name="M:Nemerle.Core._N_operator502129286_4425Macro.GetName" />
    <member name="M:Nemerle.Core._N_operator502129286_4425Macro.get_Name" />
    <member name="P:Nemerle.Core._N_operator502129286_4425Macro.Name" />
    <member name="M:Nemerle.Core._N_operator502129286_4425Macro.get_Namespace" />
    <member name="P:Nemerle.Core._N_operator502129286_4425Macro.Namespace" />
    <member name="M:Nemerle.Core._N_operator502129286_4425Macro.GetNamespace" />
    <member name="M:Nemerle.Core._N_operator502129286_4425Macro.get_Usage" />
    <member name="P:Nemerle.Core._N_operator502129286_4425Macro.Usage" />
    <member name="M:Nemerle.Core._N_operator502129286_4425Macro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core._N_operator502129286_4425Macro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core._N_operator502129286_4425Macro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core._N_operator502129286_4425Macro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core._N_operator502129286_4425Macro.SyntaxExtension" />
    <member name="T:Nemerle.Core._N_operator502129280_4427Macro" />
    <member name="M:Nemerle.Core._N_operator502129280_4427Macro.#ctor" />
    <member name="F:Nemerle.Core._N_operator502129280_4427Macro.my_usage" />
    <member name="F:Nemerle.Core._N_operator502129280_4427Macro.keywords" />
    <member name="M:Nemerle.Core._N_operator502129280_4427Macro.#cctor" />
    <member name="M:Nemerle.Core._N_operator502129280_4427Macro.get_Location" />
    <member name="P:Nemerle.Core._N_operator502129280_4427Macro.Location" />
    <member name="M:Nemerle.Core._N_operator502129280_4427Macro.get_IsInherited" />
    <member name="P:Nemerle.Core._N_operator502129280_4427Macro.IsInherited" />
    <member name="M:Nemerle.Core._N_operator502129280_4427Macro.get_Keywords" />
    <member name="P:Nemerle.Core._N_operator502129280_4427Macro.Keywords" />
    <member name="M:Nemerle.Core._N_operator502129280_4427Macro.GetName" />
    <member name="M:Nemerle.Core._N_operator502129280_4427Macro.get_Name" />
    <member name="P:Nemerle.Core._N_operator502129280_4427Macro.Name" />
    <member name="M:Nemerle.Core._N_operator502129280_4427Macro.get_Namespace" />
    <member name="P:Nemerle.Core._N_operator502129280_4427Macro.Namespace" />
    <member name="M:Nemerle.Core._N_operator502129280_4427Macro.GetNamespace" />
    <member name="M:Nemerle.Core._N_operator502129280_4427Macro.get_Usage" />
    <member name="P:Nemerle.Core._N_operator502129280_4427Macro.Usage" />
    <member name="M:Nemerle.Core._N_operator502129280_4427Macro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core._N_operator502129280_4427Macro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core._N_operator502129280_4427Macro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core._N_operator502129280_4427Macro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core._N_operator502129280_4427Macro.SyntaxExtension" />
    <member name="T:Nemerle.Core._N_operator502129287_4429Macro" />
    <member name="M:Nemerle.Core._N_operator502129287_4429Macro.#ctor" />
    <member name="F:Nemerle.Core._N_operator502129287_4429Macro.my_usage" />
    <member name="F:Nemerle.Core._N_operator502129287_4429Macro.keywords" />
    <member name="M:Nemerle.Core._N_operator502129287_4429Macro.#cctor" />
    <member name="M:Nemerle.Core._N_operator502129287_4429Macro.get_Location" />
    <member name="P:Nemerle.Core._N_operator502129287_4429Macro.Location" />
    <member name="M:Nemerle.Core._N_operator502129287_4429Macro.get_IsInherited" />
    <member name="P:Nemerle.Core._N_operator502129287_4429Macro.IsInherited" />
    <member name="M:Nemerle.Core._N_operator502129287_4429Macro.get_Keywords" />
    <member name="P:Nemerle.Core._N_operator502129287_4429Macro.Keywords" />
    <member name="M:Nemerle.Core._N_operator502129287_4429Macro.GetName" />
    <member name="M:Nemerle.Core._N_operator502129287_4429Macro.get_Name" />
    <member name="P:Nemerle.Core._N_operator502129287_4429Macro.Name" />
    <member name="M:Nemerle.Core._N_operator502129287_4429Macro.get_Namespace" />
    <member name="P:Nemerle.Core._N_operator502129287_4429Macro.Namespace" />
    <member name="M:Nemerle.Core._N_operator502129287_4429Macro.GetNamespace" />
    <member name="M:Nemerle.Core._N_operator502129287_4429Macro.get_Usage" />
    <member name="P:Nemerle.Core._N_operator502129287_4429Macro.Usage" />
    <member name="M:Nemerle.Core._N_operator502129287_4429Macro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core._N_operator502129287_4429Macro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core._N_operator502129287_4429Macro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core._N_operator502129287_4429Macro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core._N_operator502129287_4429Macro.SyntaxExtension" />
    <member name="T:Nemerle.Core._N_operator502129282_4431Macro" />
    <member name="M:Nemerle.Core._N_operator502129282_4431Macro.#ctor" />
    <member name="F:Nemerle.Core._N_operator502129282_4431Macro.my_usage" />
    <member name="F:Nemerle.Core._N_operator502129282_4431Macro.keywords" />
    <member name="M:Nemerle.Core._N_operator502129282_4431Macro.#cctor" />
    <member name="M:Nemerle.Core._N_operator502129282_4431Macro.get_Location" />
    <member name="P:Nemerle.Core._N_operator502129282_4431Macro.Location" />
    <member name="M:Nemerle.Core._N_operator502129282_4431Macro.get_IsInherited" />
    <member name="P:Nemerle.Core._N_operator502129282_4431Macro.IsInherited" />
    <member name="M:Nemerle.Core._N_operator502129282_4431Macro.get_Keywords" />
    <member name="P:Nemerle.Core._N_operator502129282_4431Macro.Keywords" />
    <member name="M:Nemerle.Core._N_operator502129282_4431Macro.GetName" />
    <member name="M:Nemerle.Core._N_operator502129282_4431Macro.get_Name" />
    <member name="P:Nemerle.Core._N_operator502129282_4431Macro.Name" />
    <member name="M:Nemerle.Core._N_operator502129282_4431Macro.get_Namespace" />
    <member name="P:Nemerle.Core._N_operator502129282_4431Macro.Namespace" />
    <member name="M:Nemerle.Core._N_operator502129282_4431Macro.GetNamespace" />
    <member name="M:Nemerle.Core._N_operator502129282_4431Macro.get_Usage" />
    <member name="P:Nemerle.Core._N_operator502129282_4431Macro.Usage" />
    <member name="M:Nemerle.Core._N_operator502129282_4431Macro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core._N_operator502129282_4431Macro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core._N_operator502129282_4431Macro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core._N_operator502129282_4431Macro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core._N_operator502129282_4431Macro.SyntaxExtension" />
    <member name="T:Nemerle.Core._N_operator2073895137_4433Macro" />
    <member name="M:Nemerle.Core._N_operator2073895137_4433Macro.#ctor" />
    <member name="F:Nemerle.Core._N_operator2073895137_4433Macro.my_usage" />
    <member name="F:Nemerle.Core._N_operator2073895137_4433Macro.keywords" />
    <member name="M:Nemerle.Core._N_operator2073895137_4433Macro.#cctor" />
    <member name="M:Nemerle.Core._N_operator2073895137_4433Macro.get_Location" />
    <member name="P:Nemerle.Core._N_operator2073895137_4433Macro.Location" />
    <member name="M:Nemerle.Core._N_operator2073895137_4433Macro.get_IsInherited" />
    <member name="P:Nemerle.Core._N_operator2073895137_4433Macro.IsInherited" />
    <member name="M:Nemerle.Core._N_operator2073895137_4433Macro.get_Keywords" />
    <member name="P:Nemerle.Core._N_operator2073895137_4433Macro.Keywords" />
    <member name="M:Nemerle.Core._N_operator2073895137_4433Macro.GetName" />
    <member name="M:Nemerle.Core._N_operator2073895137_4433Macro.get_Name" />
    <member name="P:Nemerle.Core._N_operator2073895137_4433Macro.Name" />
    <member name="M:Nemerle.Core._N_operator2073895137_4433Macro.get_Namespace" />
    <member name="P:Nemerle.Core._N_operator2073895137_4433Macro.Namespace" />
    <member name="M:Nemerle.Core._N_operator2073895137_4433Macro.GetNamespace" />
    <member name="M:Nemerle.Core._N_operator2073895137_4433Macro.get_Usage" />
    <member name="P:Nemerle.Core._N_operator2073895137_4433Macro.Usage" />
    <member name="M:Nemerle.Core._N_operator2073895137_4433Macro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core._N_operator2073895137_4433Macro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core._N_operator2073895137_4433Macro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core._N_operator2073895137_4433Macro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core._N_operator2073895137_4433Macro.SyntaxExtension" />
    <member name="T:Nemerle.Core._N_operator911095789_4435Macro" />
    <member name="M:Nemerle.Core._N_operator911095789_4435Macro.#ctor" />
    <member name="F:Nemerle.Core._N_operator911095789_4435Macro.my_usage" />
    <member name="F:Nemerle.Core._N_operator911095789_4435Macro.keywords" />
    <member name="M:Nemerle.Core._N_operator911095789_4435Macro.#cctor" />
    <member name="M:Nemerle.Core._N_operator911095789_4435Macro.get_Location" />
    <member name="P:Nemerle.Core._N_operator911095789_4435Macro.Location" />
    <member name="M:Nemerle.Core._N_operator911095789_4435Macro.get_IsInherited" />
    <member name="P:Nemerle.Core._N_operator911095789_4435Macro.IsInherited" />
    <member name="M:Nemerle.Core._N_operator911095789_4435Macro.get_Keywords" />
    <member name="P:Nemerle.Core._N_operator911095789_4435Macro.Keywords" />
    <member name="M:Nemerle.Core._N_operator911095789_4435Macro.GetName" />
    <member name="M:Nemerle.Core._N_operator911095789_4435Macro.get_Name" />
    <member name="P:Nemerle.Core._N_operator911095789_4435Macro.Name" />
    <member name="M:Nemerle.Core._N_operator911095789_4435Macro.get_Namespace" />
    <member name="P:Nemerle.Core._N_operator911095789_4435Macro.Namespace" />
    <member name="M:Nemerle.Core._N_operator911095789_4435Macro.GetNamespace" />
    <member name="M:Nemerle.Core._N_operator911095789_4435Macro.get_Usage" />
    <member name="P:Nemerle.Core._N_operator911095789_4435Macro.Usage" />
    <member name="M:Nemerle.Core._N_operator911095789_4435Macro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core._N_operator911095789_4435Macro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core._N_operator911095789_4435Macro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core._N_operator911095789_4435Macro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core._N_operator911095789_4435Macro.SyntaxExtension" />
    <member name="T:Nemerle.Core._N_operator502129272_4437Macro" />
    <member name="M:Nemerle.Core._N_operator502129272_4437Macro.#ctor" />
    <member name="F:Nemerle.Core._N_operator502129272_4437Macro.my_usage" />
    <member name="F:Nemerle.Core._N_operator502129272_4437Macro.keywords" />
    <member name="M:Nemerle.Core._N_operator502129272_4437Macro.#cctor" />
    <member name="M:Nemerle.Core._N_operator502129272_4437Macro.get_Location" />
    <member name="P:Nemerle.Core._N_operator502129272_4437Macro.Location" />
    <member name="M:Nemerle.Core._N_operator502129272_4437Macro.get_IsInherited" />
    <member name="P:Nemerle.Core._N_operator502129272_4437Macro.IsInherited" />
    <member name="M:Nemerle.Core._N_operator502129272_4437Macro.get_Keywords" />
    <member name="P:Nemerle.Core._N_operator502129272_4437Macro.Keywords" />
    <member name="M:Nemerle.Core._N_operator502129272_4437Macro.GetName" />
    <member name="M:Nemerle.Core._N_operator502129272_4437Macro.get_Name" />
    <member name="P:Nemerle.Core._N_operator502129272_4437Macro.Name" />
    <member name="M:Nemerle.Core._N_operator502129272_4437Macro.get_Namespace" />
    <member name="P:Nemerle.Core._N_operator502129272_4437Macro.Namespace" />
    <member name="M:Nemerle.Core._N_operator502129272_4437Macro.GetNamespace" />
    <member name="M:Nemerle.Core._N_operator502129272_4437Macro.get_Usage" />
    <member name="P:Nemerle.Core._N_operator502129272_4437Macro.Usage" />
    <member name="M:Nemerle.Core._N_operator502129272_4437Macro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core._N_operator502129272_4437Macro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core._N_operator502129272_4437Macro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core._N_operator502129272_4437Macro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core._N_operator502129272_4437Macro.SyntaxExtension" />
    <member name="T:Nemerle.Core._N_operator502129361_4439Macro" />
    <member name="M:Nemerle.Core._N_operator502129361_4439Macro.#ctor" />
    <member name="F:Nemerle.Core._N_operator502129361_4439Macro.my_usage" />
    <member name="F:Nemerle.Core._N_operator502129361_4439Macro.keywords" />
    <member name="M:Nemerle.Core._N_operator502129361_4439Macro.#cctor" />
    <member name="M:Nemerle.Core._N_operator502129361_4439Macro.get_Location" />
    <member name="P:Nemerle.Core._N_operator502129361_4439Macro.Location" />
    <member name="M:Nemerle.Core._N_operator502129361_4439Macro.get_IsInherited" />
    <member name="P:Nemerle.Core._N_operator502129361_4439Macro.IsInherited" />
    <member name="M:Nemerle.Core._N_operator502129361_4439Macro.get_Keywords" />
    <member name="P:Nemerle.Core._N_operator502129361_4439Macro.Keywords" />
    <member name="M:Nemerle.Core._N_operator502129361_4439Macro.GetName" />
    <member name="M:Nemerle.Core._N_operator502129361_4439Macro.get_Name" />
    <member name="P:Nemerle.Core._N_operator502129361_4439Macro.Name" />
    <member name="M:Nemerle.Core._N_operator502129361_4439Macro.get_Namespace" />
    <member name="P:Nemerle.Core._N_operator502129361_4439Macro.Namespace" />
    <member name="M:Nemerle.Core._N_operator502129361_4439Macro.GetNamespace" />
    <member name="M:Nemerle.Core._N_operator502129361_4439Macro.get_Usage" />
    <member name="P:Nemerle.Core._N_operator502129361_4439Macro.Usage" />
    <member name="M:Nemerle.Core._N_operator502129361_4439Macro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core._N_operator502129361_4439Macro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core._N_operator502129361_4439Macro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core._N_operator502129361_4439Macro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core._N_operator502129361_4439Macro.SyntaxExtension" />
    <member name="T:Nemerle.Core._N_operator502129275_4441Macro" />
    <member name="M:Nemerle.Core._N_operator502129275_4441Macro.#ctor" />
    <member name="F:Nemerle.Core._N_operator502129275_4441Macro.my_usage" />
    <member name="F:Nemerle.Core._N_operator502129275_4441Macro.keywords" />
    <member name="M:Nemerle.Core._N_operator502129275_4441Macro.#cctor" />
    <member name="M:Nemerle.Core._N_operator502129275_4441Macro.get_Location" />
    <member name="P:Nemerle.Core._N_operator502129275_4441Macro.Location" />
    <member name="M:Nemerle.Core._N_operator502129275_4441Macro.get_IsInherited" />
    <member name="P:Nemerle.Core._N_operator502129275_4441Macro.IsInherited" />
    <member name="M:Nemerle.Core._N_operator502129275_4441Macro.get_Keywords" />
    <member name="P:Nemerle.Core._N_operator502129275_4441Macro.Keywords" />
    <member name="M:Nemerle.Core._N_operator502129275_4441Macro.GetName" />
    <member name="M:Nemerle.Core._N_operator502129275_4441Macro.get_Name" />
    <member name="P:Nemerle.Core._N_operator502129275_4441Macro.Name" />
    <member name="M:Nemerle.Core._N_operator502129275_4441Macro.get_Namespace" />
    <member name="P:Nemerle.Core._N_operator502129275_4441Macro.Namespace" />
    <member name="M:Nemerle.Core._N_operator502129275_4441Macro.GetNamespace" />
    <member name="M:Nemerle.Core._N_operator502129275_4441Macro.get_Usage" />
    <member name="P:Nemerle.Core._N_operator502129275_4441Macro.Usage" />
    <member name="M:Nemerle.Core._N_operator502129275_4441Macro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core._N_operator502129275_4441Macro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core._N_operator502129275_4441Macro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core._N_operator502129275_4441Macro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core._N_operator502129275_4441Macro.SyntaxExtension" />
    <member name="T:Nemerle.Core._N_operator502129395_4443Macro" />
    <member name="M:Nemerle.Core._N_operator502129395_4443Macro.#ctor" />
    <member name="F:Nemerle.Core._N_operator502129395_4443Macro.my_usage" />
    <member name="F:Nemerle.Core._N_operator502129395_4443Macro.keywords" />
    <member name="M:Nemerle.Core._N_operator502129395_4443Macro.#cctor" />
    <member name="M:Nemerle.Core._N_operator502129395_4443Macro.get_Location" />
    <member name="P:Nemerle.Core._N_operator502129395_4443Macro.Location" />
    <member name="M:Nemerle.Core._N_operator502129395_4443Macro.get_IsInherited" />
    <member name="P:Nemerle.Core._N_operator502129395_4443Macro.IsInherited" />
    <member name="M:Nemerle.Core._N_operator502129395_4443Macro.get_Keywords" />
    <member name="P:Nemerle.Core._N_operator502129395_4443Macro.Keywords" />
    <member name="M:Nemerle.Core._N_operator502129395_4443Macro.GetName" />
    <member name="M:Nemerle.Core._N_operator502129395_4443Macro.get_Name" />
    <member name="P:Nemerle.Core._N_operator502129395_4443Macro.Name" />
    <member name="M:Nemerle.Core._N_operator502129395_4443Macro.get_Namespace" />
    <member name="P:Nemerle.Core._N_operator502129395_4443Macro.Namespace" />
    <member name="M:Nemerle.Core._N_operator502129395_4443Macro.GetNamespace" />
    <member name="M:Nemerle.Core._N_operator502129395_4443Macro.get_Usage" />
    <member name="P:Nemerle.Core._N_operator502129395_4443Macro.Usage" />
    <member name="M:Nemerle.Core._N_operator502129395_4443Macro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core._N_operator502129395_4443Macro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core._N_operator502129395_4443Macro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core._N_operator502129395_4443Macro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core._N_operator502129395_4443Macro.SyntaxExtension" />
    <member name="T:Nemerle.Core._N_operator1220271919_4445Macro" />
    <member name="M:Nemerle.Core._N_operator1220271919_4445Macro.#ctor" />
    <member name="F:Nemerle.Core._N_operator1220271919_4445Macro.my_usage" />
    <member name="F:Nemerle.Core._N_operator1220271919_4445Macro.keywords" />
    <member name="M:Nemerle.Core._N_operator1220271919_4445Macro.#cctor" />
    <member name="M:Nemerle.Core._N_operator1220271919_4445Macro.get_Location" />
    <member name="P:Nemerle.Core._N_operator1220271919_4445Macro.Location" />
    <member name="M:Nemerle.Core._N_operator1220271919_4445Macro.get_IsInherited" />
    <member name="P:Nemerle.Core._N_operator1220271919_4445Macro.IsInherited" />
    <member name="M:Nemerle.Core._N_operator1220271919_4445Macro.get_Keywords" />
    <member name="P:Nemerle.Core._N_operator1220271919_4445Macro.Keywords" />
    <member name="M:Nemerle.Core._N_operator1220271919_4445Macro.GetName" />
    <member name="M:Nemerle.Core._N_operator1220271919_4445Macro.get_Name" />
    <member name="P:Nemerle.Core._N_operator1220271919_4445Macro.Name" />
    <member name="M:Nemerle.Core._N_operator1220271919_4445Macro.get_Namespace" />
    <member name="P:Nemerle.Core._N_operator1220271919_4445Macro.Namespace" />
    <member name="M:Nemerle.Core._N_operator1220271919_4445Macro.GetNamespace" />
    <member name="M:Nemerle.Core._N_operator1220271919_4445Macro.get_Usage" />
    <member name="P:Nemerle.Core._N_operator1220271919_4445Macro.Usage" />
    <member name="M:Nemerle.Core._N_operator1220271919_4445Macro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core._N_operator1220271919_4445Macro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core._N_operator1220271919_4445Macro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core._N_operator1220271919_4445Macro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core._N_operator1220271919_4445Macro.SyntaxExtension" />
    <member name="T:Nemerle.Core._N_operator_1414502915_4447Macro" />
    <member name="M:Nemerle.Core._N_operator_1414502915_4447Macro.#ctor" />
    <member name="F:Nemerle.Core._N_operator_1414502915_4447Macro.my_usage" />
    <member name="F:Nemerle.Core._N_operator_1414502915_4447Macro.keywords" />
    <member name="M:Nemerle.Core._N_operator_1414502915_4447Macro.#cctor" />
    <member name="M:Nemerle.Core._N_operator_1414502915_4447Macro.get_Location" />
    <member name="P:Nemerle.Core._N_operator_1414502915_4447Macro.Location" />
    <member name="M:Nemerle.Core._N_operator_1414502915_4447Macro.get_IsInherited" />
    <member name="P:Nemerle.Core._N_operator_1414502915_4447Macro.IsInherited" />
    <member name="M:Nemerle.Core._N_operator_1414502915_4447Macro.get_Keywords" />
    <member name="P:Nemerle.Core._N_operator_1414502915_4447Macro.Keywords" />
    <member name="M:Nemerle.Core._N_operator_1414502915_4447Macro.GetName" />
    <member name="M:Nemerle.Core._N_operator_1414502915_4447Macro.get_Name" />
    <member name="P:Nemerle.Core._N_operator_1414502915_4447Macro.Name" />
    <member name="M:Nemerle.Core._N_operator_1414502915_4447Macro.get_Namespace" />
    <member name="P:Nemerle.Core._N_operator_1414502915_4447Macro.Namespace" />
    <member name="M:Nemerle.Core._N_operator_1414502915_4447Macro.GetNamespace" />
    <member name="M:Nemerle.Core._N_operator_1414502915_4447Macro.get_Usage" />
    <member name="P:Nemerle.Core._N_operator_1414502915_4447Macro.Usage" />
    <member name="M:Nemerle.Core._N_operator_1414502915_4447Macro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core._N_operator_1414502915_4447Macro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core._N_operator_1414502915_4447Macro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core._N_operator_1414502915_4447Macro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core._N_operator_1414502915_4447Macro.SyntaxExtension" />
    <member name="T:Nemerle.Core._N_operator905413823_4449Macro" />
    <member name="M:Nemerle.Core._N_operator905413823_4449Macro.#ctor" />
    <member name="F:Nemerle.Core._N_operator905413823_4449Macro.my_usage" />
    <member name="F:Nemerle.Core._N_operator905413823_4449Macro.keywords" />
    <member name="M:Nemerle.Core._N_operator905413823_4449Macro.#cctor" />
    <member name="M:Nemerle.Core._N_operator905413823_4449Macro.get_Location" />
    <member name="P:Nemerle.Core._N_operator905413823_4449Macro.Location" />
    <member name="M:Nemerle.Core._N_operator905413823_4449Macro.get_IsInherited" />
    <member name="P:Nemerle.Core._N_operator905413823_4449Macro.IsInherited" />
    <member name="M:Nemerle.Core._N_operator905413823_4449Macro.get_Keywords" />
    <member name="P:Nemerle.Core._N_operator905413823_4449Macro.Keywords" />
    <member name="M:Nemerle.Core._N_operator905413823_4449Macro.GetName" />
    <member name="M:Nemerle.Core._N_operator905413823_4449Macro.get_Name" />
    <member name="P:Nemerle.Core._N_operator905413823_4449Macro.Name" />
    <member name="M:Nemerle.Core._N_operator905413823_4449Macro.get_Namespace" />
    <member name="P:Nemerle.Core._N_operator905413823_4449Macro.Namespace" />
    <member name="M:Nemerle.Core._N_operator905413823_4449Macro.GetNamespace" />
    <member name="M:Nemerle.Core._N_operator905413823_4449Macro.get_Usage" />
    <member name="P:Nemerle.Core._N_operator905413823_4449Macro.Usage" />
    <member name="M:Nemerle.Core._N_operator905413823_4449Macro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core._N_operator905413823_4449Macro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core._N_operator905413823_4449Macro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core._N_operator905413823_4449Macro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core._N_operator905413823_4449Macro.SyntaxExtension" />
    <member name="T:Nemerle.Core._N_operator_660670116_4451Macro" />
    <member name="M:Nemerle.Core._N_operator_660670116_4451Macro._N_resolve_48199(Nemerle.Core._N_operator_660670116_4451Macro._N_closureOf_Run_48140,System.Boolean,Nemerle.Builtins.Function{Nemerle.Compiler.TypeInfo,System.Boolean},System.Boolean)" />
    <member name="M:Nemerle.Core._N_operator_660670116_4451Macro._N_isBoolPropertyOrField_48187(Nemerle.Core.list{Nemerle.Compiler.IMember})" />
    <member name="M:Nemerle.Core._N_operator_660670116_4451Macro.#ctor" />
    <member name="F:Nemerle.Core._N_operator_660670116_4451Macro.my_usage" />
    <member name="F:Nemerle.Core._N_operator_660670116_4451Macro.keywords" />
    <member name="M:Nemerle.Core._N_operator_660670116_4451Macro.#cctor" />
    <member name="M:Nemerle.Core._N_operator_660670116_4451Macro.get_Location" />
    <member name="P:Nemerle.Core._N_operator_660670116_4451Macro.Location" />
    <member name="M:Nemerle.Core._N_operator_660670116_4451Macro.get_IsInherited" />
    <member name="P:Nemerle.Core._N_operator_660670116_4451Macro.IsInherited" />
    <member name="M:Nemerle.Core._N_operator_660670116_4451Macro.get_Keywords" />
    <member name="P:Nemerle.Core._N_operator_660670116_4451Macro.Keywords" />
    <member name="M:Nemerle.Core._N_operator_660670116_4451Macro.GetName" />
    <member name="M:Nemerle.Core._N_operator_660670116_4451Macro.get_Name" />
    <member name="P:Nemerle.Core._N_operator_660670116_4451Macro.Name" />
    <member name="M:Nemerle.Core._N_operator_660670116_4451Macro.get_Namespace" />
    <member name="P:Nemerle.Core._N_operator_660670116_4451Macro.Namespace" />
    <member name="M:Nemerle.Core._N_operator_660670116_4451Macro.GetNamespace" />
    <member name="M:Nemerle.Core._N_operator_660670116_4451Macro.get_Usage" />
    <member name="P:Nemerle.Core._N_operator_660670116_4451Macro.Usage" />
    <member name="M:Nemerle.Core._N_operator_660670116_4451Macro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core._N_operator_660670116_4451Macro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core._N_operator_660670116_4451Macro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core._N_operator_660670116_4451Macro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core._N_operator_660670116_4451Macro.SyntaxExtension" />
    <member name="T:Nemerle.Core._N_operator_707724294_4453Macro" />
    <member name="M:Nemerle.Core._N_operator_707724294_4453Macro.#ctor" />
    <member name="F:Nemerle.Core._N_operator_707724294_4453Macro.my_usage" />
    <member name="F:Nemerle.Core._N_operator_707724294_4453Macro.keywords" />
    <member name="M:Nemerle.Core._N_operator_707724294_4453Macro.#cctor" />
    <member name="M:Nemerle.Core._N_operator_707724294_4453Macro.get_Location" />
    <member name="P:Nemerle.Core._N_operator_707724294_4453Macro.Location" />
    <member name="M:Nemerle.Core._N_operator_707724294_4453Macro.get_IsInherited" />
    <member name="P:Nemerle.Core._N_operator_707724294_4453Macro.IsInherited" />
    <member name="M:Nemerle.Core._N_operator_707724294_4453Macro.get_Keywords" />
    <member name="P:Nemerle.Core._N_operator_707724294_4453Macro.Keywords" />
    <member name="M:Nemerle.Core._N_operator_707724294_4453Macro.GetName" />
    <member name="M:Nemerle.Core._N_operator_707724294_4453Macro.get_Name" />
    <member name="P:Nemerle.Core._N_operator_707724294_4453Macro.Name" />
    <member name="M:Nemerle.Core._N_operator_707724294_4453Macro.get_Namespace" />
    <member name="P:Nemerle.Core._N_operator_707724294_4453Macro.Namespace" />
    <member name="M:Nemerle.Core._N_operator_707724294_4453Macro.GetNamespace" />
    <member name="M:Nemerle.Core._N_operator_707724294_4453Macro.get_Usage" />
    <member name="P:Nemerle.Core._N_operator_707724294_4453Macro.Usage" />
    <member name="M:Nemerle.Core._N_operator_707724294_4453Macro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core._N_operator_707724294_4453Macro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core._N_operator_707724294_4453Macro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core._N_operator_707724294_4453Macro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core._N_operator_707724294_4453Macro.SyntaxExtension" />
    <member name="T:Nemerle.Core._N_operator1617874545_4455Macro" />
    <member name="M:Nemerle.Core._N_operator1617874545_4455Macro._N_makeComplation_48419(Nemerle.Compiler.Location,Nemerle.Compiler.Parsetree.Name)" />
    <member name="M:Nemerle.Core._N_operator1617874545_4455Macro._N_makeMemberAccess_48414(Nemerle.Compiler.Location,Nemerle.Compiler.Parsetree.Name)" />
    <member name="M:Nemerle.Core._N_operator1617874545_4455Macro.#ctor" />
    <member name="F:Nemerle.Core._N_operator1617874545_4455Macro.my_usage" />
    <member name="F:Nemerle.Core._N_operator1617874545_4455Macro.keywords" />
    <member name="M:Nemerle.Core._N_operator1617874545_4455Macro.#cctor" />
    <member name="M:Nemerle.Core._N_operator1617874545_4455Macro.get_Location" />
    <member name="P:Nemerle.Core._N_operator1617874545_4455Macro.Location" />
    <member name="M:Nemerle.Core._N_operator1617874545_4455Macro.get_IsInherited" />
    <member name="P:Nemerle.Core._N_operator1617874545_4455Macro.IsInherited" />
    <member name="M:Nemerle.Core._N_operator1617874545_4455Macro.get_Keywords" />
    <member name="P:Nemerle.Core._N_operator1617874545_4455Macro.Keywords" />
    <member name="M:Nemerle.Core._N_operator1617874545_4455Macro.GetName" />
    <member name="M:Nemerle.Core._N_operator1617874545_4455Macro.get_Name" />
    <member name="P:Nemerle.Core._N_operator1617874545_4455Macro.Name" />
    <member name="M:Nemerle.Core._N_operator1617874545_4455Macro.get_Namespace" />
    <member name="P:Nemerle.Core._N_operator1617874545_4455Macro.Namespace" />
    <member name="M:Nemerle.Core._N_operator1617874545_4455Macro.GetNamespace" />
    <member name="M:Nemerle.Core._N_operator1617874545_4455Macro.get_Usage" />
    <member name="P:Nemerle.Core._N_operator1617874545_4455Macro.Usage" />
    <member name="M:Nemerle.Core._N_operator1617874545_4455Macro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core._N_operator1617874545_4455Macro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core._N_operator1617874545_4455Macro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core._N_operator1617874545_4455Macro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core._N_operator1617874545_4455Macro.SyntaxExtension" />
    <member name="T:Nemerle.Profiling.Helper" />
    <member name="M:Nemerle.Profiling.Helper.#cctor" />
    <member name="F:Nemerle.Profiling.Helper.get_time" />
    <member name="F:Nemerle.Profiling.Helper.time_type" />
    <member name="F:Nemerle.Profiling.Helper.divisor" />
    <member name="F:Nemerle.Profiling.Helper.field_names" />
    <member name="F:Nemerle.Profiling.Helper.class_name" />
    <member name="F:Nemerle.Profiling.Helper.dumper" />
    <member name="F:Nemerle.Profiling.Helper.profiling_enabled" />
    <member name="M:Nemerle.Profiling.Helper.FinishUp(Nemerle.Compiler.GlobalEnv)" />
    <member name="M:Nemerle.Profiling.Helper.Wrap(System.String,Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="T:Nemerle.Profiling.ProfSetup_assembly_postscanMacro" />
    <member name="M:Nemerle.Profiling.ProfSetup_assembly_postscanMacro.#ctor" />
    <member name="F:Nemerle.Profiling.ProfSetup_assembly_postscanMacro.my_usage" />
    <member name="F:Nemerle.Profiling.ProfSetup_assembly_postscanMacro.keywords" />
    <member name="M:Nemerle.Profiling.ProfSetup_assembly_postscanMacro.#cctor" />
    <member name="M:Nemerle.Profiling.ProfSetup_assembly_postscanMacro.get_Location" />
    <member name="P:Nemerle.Profiling.ProfSetup_assembly_postscanMacro.Location" />
    <member name="M:Nemerle.Profiling.ProfSetup_assembly_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.Profiling.ProfSetup_assembly_postscanMacro.IsInherited" />
    <member name="M:Nemerle.Profiling.ProfSetup_assembly_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.Profiling.ProfSetup_assembly_postscanMacro.Keywords" />
    <member name="M:Nemerle.Profiling.ProfSetup_assembly_postscanMacro.GetName" />
    <member name="M:Nemerle.Profiling.ProfSetup_assembly_postscanMacro.get_Name" />
    <member name="P:Nemerle.Profiling.ProfSetup_assembly_postscanMacro.Name" />
    <member name="M:Nemerle.Profiling.ProfSetup_assembly_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.Profiling.ProfSetup_assembly_postscanMacro.Namespace" />
    <member name="M:Nemerle.Profiling.ProfSetup_assembly_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.Profiling.ProfSetup_assembly_postscanMacro.get_Usage" />
    <member name="P:Nemerle.Profiling.ProfSetup_assembly_postscanMacro.Usage" />
    <member name="M:Nemerle.Profiling.ProfSetup_assembly_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Profiling.ProfSetup_assembly_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Profiling.ProfSetup_assembly_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Profiling.ProfSetup_assembly_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Profiling.ProfSetup_assembly_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.Profiling.ProfSetup_assembly_postaddMacro" />
    <member name="M:Nemerle.Profiling.ProfSetup_assembly_postaddMacro.#ctor" />
    <member name="F:Nemerle.Profiling.ProfSetup_assembly_postaddMacro.my_usage" />
    <member name="F:Nemerle.Profiling.ProfSetup_assembly_postaddMacro.keywords" />
    <member name="M:Nemerle.Profiling.ProfSetup_assembly_postaddMacro.#cctor" />
    <member name="M:Nemerle.Profiling.ProfSetup_assembly_postaddMacro.get_Location" />
    <member name="P:Nemerle.Profiling.ProfSetup_assembly_postaddMacro.Location" />
    <member name="M:Nemerle.Profiling.ProfSetup_assembly_postaddMacro.get_IsInherited" />
    <member name="P:Nemerle.Profiling.ProfSetup_assembly_postaddMacro.IsInherited" />
    <member name="M:Nemerle.Profiling.ProfSetup_assembly_postaddMacro.get_Keywords" />
    <member name="P:Nemerle.Profiling.ProfSetup_assembly_postaddMacro.Keywords" />
    <member name="M:Nemerle.Profiling.ProfSetup_assembly_postaddMacro.GetName" />
    <member name="M:Nemerle.Profiling.ProfSetup_assembly_postaddMacro.get_Name" />
    <member name="P:Nemerle.Profiling.ProfSetup_assembly_postaddMacro.Name" />
    <member name="M:Nemerle.Profiling.ProfSetup_assembly_postaddMacro.get_Namespace" />
    <member name="P:Nemerle.Profiling.ProfSetup_assembly_postaddMacro.Namespace" />
    <member name="M:Nemerle.Profiling.ProfSetup_assembly_postaddMacro.GetNamespace" />
    <member name="M:Nemerle.Profiling.ProfSetup_assembly_postaddMacro.get_Usage" />
    <member name="P:Nemerle.Profiling.ProfSetup_assembly_postaddMacro.Usage" />
    <member name="M:Nemerle.Profiling.ProfSetup_assembly_postaddMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Profiling.ProfSetup_assembly_postaddMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Profiling.ProfSetup_assembly_postaddMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Profiling.ProfSetup_assembly_postaddMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Profiling.ProfSetup_assembly_postaddMacro.SyntaxExtension" />
    <member name="T:Nemerle.Profiling.ProfDump_method_postaddMacro" />
    <member name="M:Nemerle.Profiling.ProfDump_method_postaddMacro.#ctor" />
    <member name="F:Nemerle.Profiling.ProfDump_method_postaddMacro.my_usage" />
    <member name="F:Nemerle.Profiling.ProfDump_method_postaddMacro.keywords" />
    <member name="M:Nemerle.Profiling.ProfDump_method_postaddMacro.#cctor" />
    <member name="M:Nemerle.Profiling.ProfDump_method_postaddMacro.get_Location" />
    <member name="P:Nemerle.Profiling.ProfDump_method_postaddMacro.Location" />
    <member name="M:Nemerle.Profiling.ProfDump_method_postaddMacro.get_IsInherited" />
    <member name="P:Nemerle.Profiling.ProfDump_method_postaddMacro.IsInherited" />
    <member name="M:Nemerle.Profiling.ProfDump_method_postaddMacro.get_Keywords" />
    <member name="P:Nemerle.Profiling.ProfDump_method_postaddMacro.Keywords" />
    <member name="M:Nemerle.Profiling.ProfDump_method_postaddMacro.GetName" />
    <member name="M:Nemerle.Profiling.ProfDump_method_postaddMacro.get_Name" />
    <member name="P:Nemerle.Profiling.ProfDump_method_postaddMacro.Name" />
    <member name="M:Nemerle.Profiling.ProfDump_method_postaddMacro.get_Namespace" />
    <member name="P:Nemerle.Profiling.ProfDump_method_postaddMacro.Namespace" />
    <member name="M:Nemerle.Profiling.ProfDump_method_postaddMacro.GetNamespace" />
    <member name="M:Nemerle.Profiling.ProfDump_method_postaddMacro.get_Usage" />
    <member name="P:Nemerle.Profiling.ProfDump_method_postaddMacro.Usage" />
    <member name="M:Nemerle.Profiling.ProfDump_method_postaddMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Profiling.ProfDump_method_postaddMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Profiling.ProfDump_method_postaddMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Profiling.ProfDump_method_postaddMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Profiling.ProfDump_method_postaddMacro.SyntaxExtension" />
    <member name="T:Nemerle.Profiling.Profile_method_postscanMacro" />
    <member name="M:Nemerle.Profiling.Profile_method_postscanMacro.#ctor" />
    <member name="F:Nemerle.Profiling.Profile_method_postscanMacro.my_usage" />
    <member name="F:Nemerle.Profiling.Profile_method_postscanMacro.keywords" />
    <member name="M:Nemerle.Profiling.Profile_method_postscanMacro.#cctor" />
    <member name="M:Nemerle.Profiling.Profile_method_postscanMacro.get_Location" />
    <member name="P:Nemerle.Profiling.Profile_method_postscanMacro.Location" />
    <member name="M:Nemerle.Profiling.Profile_method_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.Profiling.Profile_method_postscanMacro.IsInherited" />
    <member name="M:Nemerle.Profiling.Profile_method_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.Profiling.Profile_method_postscanMacro.Keywords" />
    <member name="M:Nemerle.Profiling.Profile_method_postscanMacro.GetName" />
    <member name="M:Nemerle.Profiling.Profile_method_postscanMacro.get_Name" />
    <member name="P:Nemerle.Profiling.Profile_method_postscanMacro.Name" />
    <member name="M:Nemerle.Profiling.Profile_method_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.Profiling.Profile_method_postscanMacro.Namespace" />
    <member name="M:Nemerle.Profiling.Profile_method_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.Profiling.Profile_method_postscanMacro.get_Usage" />
    <member name="P:Nemerle.Profiling.Profile_method_postscanMacro.Usage" />
    <member name="M:Nemerle.Profiling.Profile_method_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Profiling.Profile_method_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Profiling.Profile_method_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Profiling.Profile_method_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Profiling.Profile_method_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.Profiling.profileMacro" />
    <member name="M:Nemerle.Profiling.profileMacro.#ctor" />
    <member name="F:Nemerle.Profiling.profileMacro.my_usage" />
    <member name="F:Nemerle.Profiling.profileMacro.keywords" />
    <member name="M:Nemerle.Profiling.profileMacro.#cctor" />
    <member name="M:Nemerle.Profiling.profileMacro.get_Location" />
    <member name="P:Nemerle.Profiling.profileMacro.Location" />
    <member name="M:Nemerle.Profiling.profileMacro.get_IsInherited" />
    <member name="P:Nemerle.Profiling.profileMacro.IsInherited" />
    <member name="M:Nemerle.Profiling.profileMacro.get_Keywords" />
    <member name="P:Nemerle.Profiling.profileMacro.Keywords" />
    <member name="M:Nemerle.Profiling.profileMacro.GetName" />
    <member name="M:Nemerle.Profiling.profileMacro.get_Name" />
    <member name="P:Nemerle.Profiling.profileMacro.Name" />
    <member name="M:Nemerle.Profiling.profileMacro.get_Namespace" />
    <member name="P:Nemerle.Profiling.profileMacro.Namespace" />
    <member name="M:Nemerle.Profiling.profileMacro.GetNamespace" />
    <member name="M:Nemerle.Profiling.profileMacro.get_Usage" />
    <member name="P:Nemerle.Profiling.profileMacro.Usage" />
    <member name="M:Nemerle.Profiling.profileMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Profiling.profileMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Profiling.profileMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Profiling.profileMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Profiling.profileMacro.SyntaxExtension" />
    <member name="T:Nemerle.Macro.Resource_assembly_postscanMacro" />
    <member name="M:Nemerle.Macro.Resource_assembly_postscanMacro.#ctor" />
    <member name="F:Nemerle.Macro.Resource_assembly_postscanMacro.my_usage" />
    <member name="F:Nemerle.Macro.Resource_assembly_postscanMacro.keywords" />
    <member name="M:Nemerle.Macro.Resource_assembly_postscanMacro.#cctor" />
    <member name="M:Nemerle.Macro.Resource_assembly_postscanMacro.get_Location" />
    <member name="P:Nemerle.Macro.Resource_assembly_postscanMacro.Location" />
    <member name="M:Nemerle.Macro.Resource_assembly_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.Macro.Resource_assembly_postscanMacro.IsInherited" />
    <member name="M:Nemerle.Macro.Resource_assembly_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.Macro.Resource_assembly_postscanMacro.Keywords" />
    <member name="M:Nemerle.Macro.Resource_assembly_postscanMacro.GetName" />
    <member name="M:Nemerle.Macro.Resource_assembly_postscanMacro.get_Name" />
    <member name="P:Nemerle.Macro.Resource_assembly_postscanMacro.Name" />
    <member name="M:Nemerle.Macro.Resource_assembly_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.Macro.Resource_assembly_postscanMacro.Namespace" />
    <member name="M:Nemerle.Macro.Resource_assembly_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.Macro.Resource_assembly_postscanMacro.get_Usage" />
    <member name="P:Nemerle.Macro.Resource_assembly_postscanMacro.Usage" />
    <member name="M:Nemerle.Macro.Resource_assembly_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Macro.Resource_assembly_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Macro.Resource_assembly_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Macro.Resource_assembly_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Macro.Resource_assembly_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.Macro.ResourceImpl" />
    <member name="M:Nemerle.Macro.ResourceImpl._N_getType_49261(Nemerle.Macro.ResourceImpl._N_closureOf_Build_49245,System.String)" />
    <member name="M:Nemerle.Macro.ResourceImpl.Build(System.String,Nemerle.Compiler.Typer)" />
    <member name="T:Nemerle.Macro.Settings_assembly_postscanMacro">
      <summary>
        <para>Description of Settings.
 </para>
      </summary>

</member>
    <member name="M:Nemerle.Macro.Settings_assembly_postscanMacro.#ctor" />
    <member name="F:Nemerle.Macro.Settings_assembly_postscanMacro.my_usage" />
    <member name="F:Nemerle.Macro.Settings_assembly_postscanMacro.keywords" />
    <member name="M:Nemerle.Macro.Settings_assembly_postscanMacro.#cctor" />
    <member name="M:Nemerle.Macro.Settings_assembly_postscanMacro.get_Location" />
    <member name="P:Nemerle.Macro.Settings_assembly_postscanMacro.Location" />
    <member name="M:Nemerle.Macro.Settings_assembly_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.Macro.Settings_assembly_postscanMacro.IsInherited" />
    <member name="M:Nemerle.Macro.Settings_assembly_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.Macro.Settings_assembly_postscanMacro.Keywords" />
    <member name="M:Nemerle.Macro.Settings_assembly_postscanMacro.GetName" />
    <member name="M:Nemerle.Macro.Settings_assembly_postscanMacro.get_Name" />
    <member name="P:Nemerle.Macro.Settings_assembly_postscanMacro.Name" />
    <member name="M:Nemerle.Macro.Settings_assembly_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.Macro.Settings_assembly_postscanMacro.Namespace" />
    <member name="M:Nemerle.Macro.Settings_assembly_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.Macro.Settings_assembly_postscanMacro.get_Usage" />
    <member name="P:Nemerle.Macro.Settings_assembly_postscanMacro.Usage" />
    <member name="M:Nemerle.Macro.Settings_assembly_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Macro.Settings_assembly_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Macro.Settings_assembly_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Macro.Settings_assembly_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Macro.Settings_assembly_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.Macro.SettingsHelper" />
    <member name="M:Nemerle.Macro.SettingsHelper._N_defineProperty_50245(Nemerle.Macro.SettingsHelper._N_closureOf_Settings_50206,Nemerle.Compiler.TypeBuilder,System.Xml.Linq.XElement)" />
    <member name="M:Nemerle.Macro.SettingsHelper._N_getType_50220(Nemerle.Macro.SettingsHelper._N_closureOf_Settings_50206,System.String)" />
    <member name="F:Nemerle.Macro.SettingsHelper._xmlNamespace" />
    <member name="M:Nemerle.Macro.SettingsHelper.Settings(System.String,System.Boolean,Nemerle.Compiler.Typer)" />
    <member name="T:Nemerle.Core.sizeofMacro" />
    <member name="M:Nemerle.Core.sizeofMacro.#ctor" />
    <member name="F:Nemerle.Core.sizeofMacro.my_usage" />
    <member name="F:Nemerle.Core.sizeofMacro.keywords" />
    <member name="M:Nemerle.Core.sizeofMacro.#cctor" />
    <member name="M:Nemerle.Core.sizeofMacro.get_Location" />
    <member name="P:Nemerle.Core.sizeofMacro.Location" />
    <member name="M:Nemerle.Core.sizeofMacro.get_IsInherited" />
    <member name="P:Nemerle.Core.sizeofMacro.IsInherited" />
    <member name="M:Nemerle.Core.sizeofMacro.get_Keywords" />
    <member name="P:Nemerle.Core.sizeofMacro.Keywords" />
    <member name="M:Nemerle.Core.sizeofMacro.GetName" />
    <member name="M:Nemerle.Core.sizeofMacro.get_Name" />
    <member name="P:Nemerle.Core.sizeofMacro.Name" />
    <member name="M:Nemerle.Core.sizeofMacro.get_Namespace" />
    <member name="P:Nemerle.Core.sizeofMacro.Namespace" />
    <member name="M:Nemerle.Core.sizeofMacro.GetNamespace" />
    <member name="M:Nemerle.Core.sizeofMacro.get_Usage" />
    <member name="P:Nemerle.Core.sizeofMacro.Usage" />
    <member name="M:Nemerle.Core.sizeofMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Core.sizeofMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Core.sizeofMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Core.sizeofMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Core.sizeofMacro.SyntaxExtension" />
    <member name="T:Nemerle.Core.sizeofImpl" />
    <member name="M:Nemerle.Core.sizeofImpl.DoTransform(Nemerle.Compiler.Typer,Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="T:Nemerle.Macro.SourceHelper">
      <summary>
        <para>Description of Class1.
 </para>
      </summary>

</member>
    <member name="M:Nemerle.Macro.SourceHelper.MakeNamespaceForFolder(System.String,System.String,System.String)" />
    <member name="M:Nemerle.Macro.SourceHelper.MakeRelativePath(System.String,System.String)" />
    <member name="M:Nemerle.Macro.SourceHelper.SubscribeSourceChangedWithCounter(Nemerle.Compiler.ManagerClass,System.Int32,Nemerle.Builtins.FunctionVoid{Nemerle.Compiler.ISource,System.Int32})" />
    <member name="T:StringTemplate.StringType" />
    <member name="F:StringTemplate.StringType.value__" />
    <member name="F:StringTemplate.StringType.Error" />
    <member name="F:StringTemplate.StringType.C" />
    <member name="F:StringTemplate.StringType.Monkey" />
    <member name="F:StringTemplate.StringType.Recursive" />
    <member name="T:StringTemplate.sMacro" />
    <member name="M:StringTemplate.sMacro.#ctor" />
    <member name="F:StringTemplate.sMacro.my_usage" />
    <member name="F:StringTemplate.sMacro.keywords" />
    <member name="M:StringTemplate.sMacro.#cctor" />
    <member name="M:StringTemplate.sMacro.get_Location" />
    <member name="P:StringTemplate.sMacro.Location" />
    <member name="M:StringTemplate.sMacro.get_IsInherited" />
    <member name="P:StringTemplate.sMacro.IsInherited" />
    <member name="M:StringTemplate.sMacro.get_Keywords" />
    <member name="P:StringTemplate.sMacro.Keywords" />
    <member name="M:StringTemplate.sMacro.GetName" />
    <member name="M:StringTemplate.sMacro.get_Name" />
    <member name="P:StringTemplate.sMacro.Name" />
    <member name="M:StringTemplate.sMacro.get_Namespace" />
    <member name="P:StringTemplate.sMacro.Namespace" />
    <member name="M:StringTemplate.sMacro.GetNamespace" />
    <member name="M:StringTemplate.sMacro.get_Usage" />
    <member name="P:StringTemplate.sMacro.Usage" />
    <member name="M:StringTemplate.sMacro.get_IsTailRecursionTransparent" />
    <member name="P:StringTemplate.sMacro.IsTailRecursionTransparent" />
    <member name="M:StringTemplate.sMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:StringTemplate.sMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:StringTemplate.sMacro.SyntaxExtension" />
    <member name="T:StringTemplate.StringTemplateGroup_type_postscanMacro" />
    <member name="M:StringTemplate.StringTemplateGroup_type_postscanMacro.#ctor" />
    <member name="F:StringTemplate.StringTemplateGroup_type_postscanMacro.my_usage" />
    <member name="F:StringTemplate.StringTemplateGroup_type_postscanMacro.keywords" />
    <member name="M:StringTemplate.StringTemplateGroup_type_postscanMacro.#cctor" />
    <member name="M:StringTemplate.StringTemplateGroup_type_postscanMacro.get_Location" />
    <member name="P:StringTemplate.StringTemplateGroup_type_postscanMacro.Location" />
    <member name="M:StringTemplate.StringTemplateGroup_type_postscanMacro.get_IsInherited" />
    <member name="P:StringTemplate.StringTemplateGroup_type_postscanMacro.IsInherited" />
    <member name="M:StringTemplate.StringTemplateGroup_type_postscanMacro.get_Keywords" />
    <member name="P:StringTemplate.StringTemplateGroup_type_postscanMacro.Keywords" />
    <member name="M:StringTemplate.StringTemplateGroup_type_postscanMacro.GetName" />
    <member name="M:StringTemplate.StringTemplateGroup_type_postscanMacro.get_Name" />
    <member name="P:StringTemplate.StringTemplateGroup_type_postscanMacro.Name" />
    <member name="M:StringTemplate.StringTemplateGroup_type_postscanMacro.get_Namespace" />
    <member name="P:StringTemplate.StringTemplateGroup_type_postscanMacro.Namespace" />
    <member name="M:StringTemplate.StringTemplateGroup_type_postscanMacro.GetNamespace" />
    <member name="M:StringTemplate.StringTemplateGroup_type_postscanMacro.get_Usage" />
    <member name="P:StringTemplate.StringTemplateGroup_type_postscanMacro.Usage" />
    <member name="M:StringTemplate.StringTemplateGroup_type_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:StringTemplate.StringTemplateGroup_type_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:StringTemplate.StringTemplateGroup_type_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:StringTemplate.StringTemplateGroup_type_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:StringTemplate.StringTemplateGroup_type_postscanMacro.SyntaxExtension" />
    <member name="T:StringTemplate.StringTemplateGroup_type_preaddMacro" />
    <member name="M:StringTemplate.StringTemplateGroup_type_preaddMacro.#ctor" />
    <member name="F:StringTemplate.StringTemplateGroup_type_preaddMacro.my_usage" />
    <member name="F:StringTemplate.StringTemplateGroup_type_preaddMacro.keywords" />
    <member name="M:StringTemplate.StringTemplateGroup_type_preaddMacro.#cctor" />
    <member name="M:StringTemplate.StringTemplateGroup_type_preaddMacro.get_Location" />
    <member name="P:StringTemplate.StringTemplateGroup_type_preaddMacro.Location" />
    <member name="M:StringTemplate.StringTemplateGroup_type_preaddMacro.get_IsInherited" />
    <member name="P:StringTemplate.StringTemplateGroup_type_preaddMacro.IsInherited" />
    <member name="M:StringTemplate.StringTemplateGroup_type_preaddMacro.get_Keywords" />
    <member name="P:StringTemplate.StringTemplateGroup_type_preaddMacro.Keywords" />
    <member name="M:StringTemplate.StringTemplateGroup_type_preaddMacro.GetName" />
    <member name="M:StringTemplate.StringTemplateGroup_type_preaddMacro.get_Name" />
    <member name="P:StringTemplate.StringTemplateGroup_type_preaddMacro.Name" />
    <member name="M:StringTemplate.StringTemplateGroup_type_preaddMacro.get_Namespace" />
    <member name="P:StringTemplate.StringTemplateGroup_type_preaddMacro.Namespace" />
    <member name="M:StringTemplate.StringTemplateGroup_type_preaddMacro.GetNamespace" />
    <member name="M:StringTemplate.StringTemplateGroup_type_preaddMacro.get_Usage" />
    <member name="P:StringTemplate.StringTemplateGroup_type_preaddMacro.Usage" />
    <member name="M:StringTemplate.StringTemplateGroup_type_preaddMacro.get_IsTailRecursionTransparent" />
    <member name="P:StringTemplate.StringTemplateGroup_type_preaddMacro.IsTailRecursionTransparent" />
    <member name="M:StringTemplate.StringTemplateGroup_type_preaddMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:StringTemplate.StringTemplateGroup_type_preaddMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:StringTemplate.StringTemplateGroup_type_preaddMacro.SyntaxExtension" />
    <member name="T:StringTemplate.StringTemplateGroup_type_postaddMacro" />
    <member name="M:StringTemplate.StringTemplateGroup_type_postaddMacro.#ctor" />
    <member name="F:StringTemplate.StringTemplateGroup_type_postaddMacro.my_usage" />
    <member name="F:StringTemplate.StringTemplateGroup_type_postaddMacro.keywords" />
    <member name="M:StringTemplate.StringTemplateGroup_type_postaddMacro.#cctor" />
    <member name="M:StringTemplate.StringTemplateGroup_type_postaddMacro.get_Location" />
    <member name="P:StringTemplate.StringTemplateGroup_type_postaddMacro.Location" />
    <member name="M:StringTemplate.StringTemplateGroup_type_postaddMacro.get_IsInherited" />
    <member name="P:StringTemplate.StringTemplateGroup_type_postaddMacro.IsInherited" />
    <member name="M:StringTemplate.StringTemplateGroup_type_postaddMacro.get_Keywords" />
    <member name="P:StringTemplate.StringTemplateGroup_type_postaddMacro.Keywords" />
    <member name="M:StringTemplate.StringTemplateGroup_type_postaddMacro.GetName" />
    <member name="M:StringTemplate.StringTemplateGroup_type_postaddMacro.get_Name" />
    <member name="P:StringTemplate.StringTemplateGroup_type_postaddMacro.Name" />
    <member name="M:StringTemplate.StringTemplateGroup_type_postaddMacro.get_Namespace" />
    <member name="P:StringTemplate.StringTemplateGroup_type_postaddMacro.Namespace" />
    <member name="M:StringTemplate.StringTemplateGroup_type_postaddMacro.GetNamespace" />
    <member name="M:StringTemplate.StringTemplateGroup_type_postaddMacro.get_Usage" />
    <member name="P:StringTemplate.StringTemplateGroup_type_postaddMacro.Usage" />
    <member name="M:StringTemplate.StringTemplateGroup_type_postaddMacro.get_IsTailRecursionTransparent" />
    <member name="P:StringTemplate.StringTemplateGroup_type_postaddMacro.IsTailRecursionTransparent" />
    <member name="M:StringTemplate.StringTemplateGroup_type_postaddMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:StringTemplate.StringTemplateGroup_type_postaddMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:StringTemplate.StringTemplateGroup_type_postaddMacro.SyntaxExtension" />
    <member name="T:StringTemplate.Helper2" />
    <member name="M:StringTemplate.Helper2._N_makeExpr_51654(StringTemplate.Helper2._N_closureOf_makeSplaceExpr_51646,Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="M:StringTemplate.Helper2._N_isTypeString_51072(StringTemplate.Helper2._N_closureOf_StringTemplateGroupWithTypedMembers_51059,Nemerle.Compiler.FixedType)" />
    <member name="M:StringTemplate.Helper2._N_testAbstract_50919(Nemerle.Compiler.Parsetree.ClassMember.Function)" />
    <member name="M:StringTemplate.Helper2.#cctor" />
    <member name="F:StringTemplate.Helper2.StSuffix" />
    <member name="F:StringTemplate.Helper2._inherMap" />
    <member name="F:StringTemplate.Helper2._sync" />
    <member name="M:StringTemplate.Helper2.StringTemplateGroupBeforeInheritance(Nemerle.Compiler.TypeBuilder,Nemerle.Compiler.Typer)" />
    <member name="M:StringTemplate.Helper2.StringTemplateGroupBeforeTypedMembers(Nemerle.Compiler.TypeBuilder,Nemerle.Compiler.Typer)" />
    <member name="M:StringTemplate.Helper2.StringTemplateGroupWithTypedMembers(Nemerle.Compiler.TypeBuilder,Nemerle.Compiler.Typer)" />
    <member name="M:StringTemplate.Helper2.MakeStringTemplateExpr(Nemerle.Compiler.MethodBuilder,System.String,Nemerle.Compiler.Location,Nemerle.Compiler.Typer)" />
    <member name="M:StringTemplate.Helper2.MakeWorkMethParsedName(Nemerle.Compiler.Parsetree.ClassMember)" />
    <member name="M:StringTemplate.Helper2.MakeWorkMethParsedName(Nemerle.Compiler.MethodBuilder)" />
    <member name="T:StringTemplate.StrPart" />
    <member name="M:StringTemplate.StrPart.#ctor" />
    <member name="M:StringTemplate.StrPart.ToString" />
    <member name="M:StringTemplate.StrPart._N_GetVariantCode" />
    <member name="M:StringTemplate.StrPart._N_GetVariantCodeSafe(StringTemplate.StrPart)" />
    <member name="M:StringTemplate.StrPart._N_GetVariantCodeObject(System.Object)" />
    <member name="T:StringTemplate.StrPart.Lit" />
    <member name="T:StringTemplate.StrPart.Expr" />
    <member name="T:StringTemplate.StrPart.NewLine" />
    <member name="T:StringTemplate.StrPart.IndentedExpr" />
    <member name="T:StringTemplate.Helper" />
    <member name="M:StringTemplate.Helper._N_rtyIndent_52557(Nemerle.Core.list{StringTemplate.StrPart},Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="M:StringTemplate.Helper._N_processNewLine_52523(StringTemplate.Helper._N_closureOf_loop_52489,StringTemplate.Helper._N_closureOf_make_splice_distribution2_52288)" />
    <member name="M:StringTemplate.Helper._N_isNextDollar_52509(StringTemplate.Helper._N_closureOf_make_splice_distribution2_52288,System.Int32)" />
    <member name="M:StringTemplate.Helper._N_endLiteral_52498(StringTemplate.Helper._N_closureOf_loop_52489,StringTemplate.Helper._N_closureOf_make_splice_distribution2_52288)" />
    <member name="M:StringTemplate.Helper._N_parceSpliceEx_52483(StringTemplate.Helper._N_closureOf_make_splice_distribution2_52288,Nemerle.Core.list{StringTemplate.StrPart},System.Boolean)" />
    <member name="M:StringTemplate.Helper._N_loop_52477(StringTemplate.Helper._N_closureOf_make_splice_distribution2_52288,Nemerle.Core.list{StringTemplate.StrPart})" />
    <member name="M:StringTemplate.Helper._N_parseIdentifier_52460(StringTemplate.Helper._N_closureOf_make_splice_distribution2_52288)" />
    <member name="M:StringTemplate.Helper._N_parseExpressionStr_52428(StringTemplate.Helper._N_closureOf_make_splice_distribution2_52288)">
      <summary>
        <para>~~~Parse expression based on nested brackets.
 Разбирает строку производя поиск закрывающей скобки.
 Вложенные скобки игнорируются. В итоге получается строка содержащая
 выражение заключенное в скбоки (которое так же может содержать вложенные скобки)
 и булево значение говорящее, содержится ли в строке простой идентификатор или варажение.
 Returns pare of (exprStr * isIdentifier)

</para>
      </summary>
    </member>
    <member name="M:StringTemplate.Helper._N_currLoc_52421(StringTemplate.Helper._N_closureOf_make_splice_distribution2_52288,System.String)" />
    <member name="M:StringTemplate.Helper._N_tryUnescape_52399(StringTemplate.Helper._N_closureOf_make_splice_distribution2_52288,System.Char)" />
    <member name="M:StringTemplate.Helper._N_appendToBuilder_52392(StringTemplate.Helper._N_closureOf_make_splice_distribution2_52288,System.Char)" />
    <member name="M:StringTemplate.Helper._N_getStrFromBuilder_52385(StringTemplate.Helper._N_closureOf_make_splice_distribution2_52288)" />
    <member name="M:StringTemplate.Helper._N_peekN_52327(StringTemplate.Helper._N_closureOf_make_splice_distribution2_52288,System.Int32)" />
    <member name="M:StringTemplate.Helper._N_makeSeqExpr_52091(Nemerle.Compiler.Parsetree.PExpr,Nemerle.Compiler.Parsetree.PExpr,Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="M:StringTemplate.Helper._N_calcStrBounds_51917(StringTemplate.Helper._N_closureOf_ExtractStringBody_51907,System.Int32,System.Int32,StringTemplate.StringType)">
      <summary>
        <para>Calc string value and location from raw literal data

</para>
      </summary>
    </member>
    <member name="M:StringTemplate.Helper.SprintImpl(Nemerle.Compiler.Parsetree.PExpr,System.Boolean,Nemerle.Builtins.Function{Nemerle.Compiler.Parsetree.PExpr,Nemerle.Compiler.Parsetree.PExpr},Nemerle.Compiler.GlobalEnv)" />
    <member name="M:StringTemplate.Helper.ExtractStringBody(Nemerle.Compiler.Parsetree.PExpr.Literal)" />
    <member name="M:StringTemplate.Helper.ExtractStringBody(System.String,Nemerle.Compiler.Location)" />
    <member name="M:StringTemplate.Helper.SquareString(System.String,Nemerle.Compiler.Location)">
      <summary>
        <para>If we have string like this
     &lt;#
   SomeText1
   SomeText2
   #&gt;
 this function convert it to
 "SomeText1\nSomeText2"
 string - convertrd string
 Location - changed location
 int - indent (in chars) from begin of line which was deleted.

</para>
      </summary>
    </member>
    <member name="M:StringTemplate.Helper.make_splice_distribution(System.String,Nemerle.Compiler.Location,StringTemplate.StringType,Nemerle.Compiler.GlobalEnv)" />
    <member name="M:StringTemplate.Helper.IsEndOfLine(System.Char)" />
    <member name="M:StringTemplate.Helper.make_splice_distribution2(System.String,Nemerle.Compiler.Location,StringTemplate.StringType,Nemerle.Compiler.GlobalEnv,Nemerle.Builtins.Function{Nemerle.Compiler.GlobalEnv,System.String,System.Boolean,Nemerle.Compiler.Location,Nemerle.Compiler.Parsetree.PExpr},Nemerle.Builtins.Function{Nemerle.Compiler.GlobalEnv,System.String,System.Boolean,Nemerle.Compiler.Location,Nemerle.Compiler.Parsetree.PExpr})">
      <summary>
        <para>for $(...) and ..$(...) expressions:
        - first evaluate expressions
        - store intermediate results in variables
        - return list of evaluators and reference variables in reverse order

</para>
      </summary>
    </member>
    <member name="T:Nemerle.Extensions.StructuralEquality_type_postscanMacro">
      <summary>
        <para>Implements Equals and related methods, using the concept of
 http://everything2.com/title/structural+equality

</para>
      </summary>
    </member>
    <member name="M:Nemerle.Extensions.StructuralEquality_type_postscanMacro.#ctor" />
    <member name="F:Nemerle.Extensions.StructuralEquality_type_postscanMacro.my_usage" />
    <member name="F:Nemerle.Extensions.StructuralEquality_type_postscanMacro.keywords" />
    <member name="M:Nemerle.Extensions.StructuralEquality_type_postscanMacro.#cctor" />
    <member name="M:Nemerle.Extensions.StructuralEquality_type_postscanMacro.get_Location" />
    <member name="P:Nemerle.Extensions.StructuralEquality_type_postscanMacro.Location" />
    <member name="M:Nemerle.Extensions.StructuralEquality_type_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.Extensions.StructuralEquality_type_postscanMacro.IsInherited" />
    <member name="M:Nemerle.Extensions.StructuralEquality_type_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.Extensions.StructuralEquality_type_postscanMacro.Keywords" />
    <member name="M:Nemerle.Extensions.StructuralEquality_type_postscanMacro.GetName" />
    <member name="M:Nemerle.Extensions.StructuralEquality_type_postscanMacro.get_Name" />
    <member name="P:Nemerle.Extensions.StructuralEquality_type_postscanMacro.Name" />
    <member name="M:Nemerle.Extensions.StructuralEquality_type_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.Extensions.StructuralEquality_type_postscanMacro.Namespace" />
    <member name="M:Nemerle.Extensions.StructuralEquality_type_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.Extensions.StructuralEquality_type_postscanMacro.get_Usage" />
    <member name="P:Nemerle.Extensions.StructuralEquality_type_postscanMacro.Usage" />
    <member name="M:Nemerle.Extensions.StructuralEquality_type_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Extensions.StructuralEquality_type_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Extensions.StructuralEquality_type_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Extensions.StructuralEquality_type_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Extensions.StructuralEquality_type_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.Extensions.StructuralEquality_type_postaddMacro" />
    <member name="M:Nemerle.Extensions.StructuralEquality_type_postaddMacro.#ctor" />
    <member name="F:Nemerle.Extensions.StructuralEquality_type_postaddMacro.my_usage" />
    <member name="F:Nemerle.Extensions.StructuralEquality_type_postaddMacro.keywords" />
    <member name="M:Nemerle.Extensions.StructuralEquality_type_postaddMacro.#cctor" />
    <member name="M:Nemerle.Extensions.StructuralEquality_type_postaddMacro.get_Location" />
    <member name="P:Nemerle.Extensions.StructuralEquality_type_postaddMacro.Location" />
    <member name="M:Nemerle.Extensions.StructuralEquality_type_postaddMacro.get_IsInherited" />
    <member name="P:Nemerle.Extensions.StructuralEquality_type_postaddMacro.IsInherited" />
    <member name="M:Nemerle.Extensions.StructuralEquality_type_postaddMacro.get_Keywords" />
    <member name="P:Nemerle.Extensions.StructuralEquality_type_postaddMacro.Keywords" />
    <member name="M:Nemerle.Extensions.StructuralEquality_type_postaddMacro.GetName" />
    <member name="M:Nemerle.Extensions.StructuralEquality_type_postaddMacro.get_Name" />
    <member name="P:Nemerle.Extensions.StructuralEquality_type_postaddMacro.Name" />
    <member name="M:Nemerle.Extensions.StructuralEquality_type_postaddMacro.get_Namespace" />
    <member name="P:Nemerle.Extensions.StructuralEquality_type_postaddMacro.Namespace" />
    <member name="M:Nemerle.Extensions.StructuralEquality_type_postaddMacro.GetNamespace" />
    <member name="M:Nemerle.Extensions.StructuralEquality_type_postaddMacro.get_Usage" />
    <member name="P:Nemerle.Extensions.StructuralEquality_type_postaddMacro.Usage" />
    <member name="M:Nemerle.Extensions.StructuralEquality_type_postaddMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Extensions.StructuralEquality_type_postaddMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Extensions.StructuralEquality_type_postaddMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Extensions.StructuralEquality_type_postaddMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Extensions.StructuralEquality_type_postaddMacro.SyntaxExtension" />
    <member name="T:Nemerle.Extensions.EqualsIgnore_field_postscanMacro" />
    <member name="M:Nemerle.Extensions.EqualsIgnore_field_postscanMacro.#ctor" />
    <member name="F:Nemerle.Extensions.EqualsIgnore_field_postscanMacro.my_usage" />
    <member name="F:Nemerle.Extensions.EqualsIgnore_field_postscanMacro.keywords" />
    <member name="M:Nemerle.Extensions.EqualsIgnore_field_postscanMacro.#cctor" />
    <member name="M:Nemerle.Extensions.EqualsIgnore_field_postscanMacro.get_Location" />
    <member name="P:Nemerle.Extensions.EqualsIgnore_field_postscanMacro.Location" />
    <member name="M:Nemerle.Extensions.EqualsIgnore_field_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.Extensions.EqualsIgnore_field_postscanMacro.IsInherited" />
    <member name="M:Nemerle.Extensions.EqualsIgnore_field_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.Extensions.EqualsIgnore_field_postscanMacro.Keywords" />
    <member name="M:Nemerle.Extensions.EqualsIgnore_field_postscanMacro.GetName" />
    <member name="M:Nemerle.Extensions.EqualsIgnore_field_postscanMacro.get_Name" />
    <member name="P:Nemerle.Extensions.EqualsIgnore_field_postscanMacro.Name" />
    <member name="M:Nemerle.Extensions.EqualsIgnore_field_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.Extensions.EqualsIgnore_field_postscanMacro.Namespace" />
    <member name="M:Nemerle.Extensions.EqualsIgnore_field_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.Extensions.EqualsIgnore_field_postscanMacro.get_Usage" />
    <member name="P:Nemerle.Extensions.EqualsIgnore_field_postscanMacro.Usage" />
    <member name="M:Nemerle.Extensions.EqualsIgnore_field_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Extensions.EqualsIgnore_field_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Extensions.EqualsIgnore_field_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Extensions.EqualsIgnore_field_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Extensions.EqualsIgnore_field_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.Extensions.EqualsIgnore_property_postscanMacro" />
    <member name="M:Nemerle.Extensions.EqualsIgnore_property_postscanMacro.#ctor" />
    <member name="F:Nemerle.Extensions.EqualsIgnore_property_postscanMacro.my_usage" />
    <member name="F:Nemerle.Extensions.EqualsIgnore_property_postscanMacro.keywords" />
    <member name="M:Nemerle.Extensions.EqualsIgnore_property_postscanMacro.#cctor" />
    <member name="M:Nemerle.Extensions.EqualsIgnore_property_postscanMacro.get_Location" />
    <member name="P:Nemerle.Extensions.EqualsIgnore_property_postscanMacro.Location" />
    <member name="M:Nemerle.Extensions.EqualsIgnore_property_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.Extensions.EqualsIgnore_property_postscanMacro.IsInherited" />
    <member name="M:Nemerle.Extensions.EqualsIgnore_property_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.Extensions.EqualsIgnore_property_postscanMacro.Keywords" />
    <member name="M:Nemerle.Extensions.EqualsIgnore_property_postscanMacro.GetName" />
    <member name="M:Nemerle.Extensions.EqualsIgnore_property_postscanMacro.get_Name" />
    <member name="P:Nemerle.Extensions.EqualsIgnore_property_postscanMacro.Name" />
    <member name="M:Nemerle.Extensions.EqualsIgnore_property_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.Extensions.EqualsIgnore_property_postscanMacro.Namespace" />
    <member name="M:Nemerle.Extensions.EqualsIgnore_property_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.Extensions.EqualsIgnore_property_postscanMacro.get_Usage" />
    <member name="P:Nemerle.Extensions.EqualsIgnore_property_postscanMacro.Usage" />
    <member name="M:Nemerle.Extensions.EqualsIgnore_property_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Extensions.EqualsIgnore_property_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Extensions.EqualsIgnore_property_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Extensions.EqualsIgnore_property_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Extensions.EqualsIgnore_property_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.Extensions.StructuralEqualityImpl" />
    <member name="M:Nemerle.Extensions.StructuralEqualityImpl._N_invokeEquals_53436(Nemerle.Extensions.StructuralEqualityImpl._N_closureOf_DefineEquality_53413,Nemerle.Compiler.IField)" />
    <member name="M:Nemerle.Extensions.StructuralEqualityImpl._N_defineMember_53426(Nemerle.Extensions.StructuralEqualityImpl._N_closureOf_DefineEquality_53413,Nemerle.Compiler.Parsetree.ClassMember)" />
    <member name="M:Nemerle.Extensions.StructuralEqualityImpl.IndexOf``1(Nemerle.Core.list{``0},``0)" />
    <member name="M:Nemerle.Extensions.StructuralEqualityImpl.NOfTypeRev``2(Nemerle.Core.list{``0})" />
    <member name="F:Nemerle.Extensions.StructuralEqualityImpl.IgnoredFieldsLabel" />
    <member name="F:Nemerle.Extensions.StructuralEqualityImpl.IgnoredPropertiesLabel" />
    <member name="F:Nemerle.Extensions.StructuralEqualityImpl.IsEquatableImplementedLabel" />
    <member name="F:Nemerle.Extensions.StructuralEqualityImpl.IsStructuralEquatableImplementedLabel" />
    <member name="F:Nemerle.Extensions.StructuralEqualityImpl.StructuralEquatableTypeInfoLabel" />
    <member name="M:Nemerle.Extensions.StructuralEqualityImpl.RunBeforeInheritance(Nemerle.Compiler.TypeBuilder,Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Extensions.StructuralEqualityImpl.RunWithTypedMembers(Nemerle.Compiler.TypeBuilder,Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Extensions.StructuralEqualityImpl.Ignore(Nemerle.Compiler.TypeBuilder,Nemerle.Compiler.Parsetree.ClassMember.Field)" />
    <member name="M:Nemerle.Extensions.StructuralEqualityImpl.Ignore(Nemerle.Compiler.TypeBuilder,Nemerle.Compiler.Parsetree.ClassMember.Property)" />
    <member name="M:Nemerle.Extensions.StructuralEqualityImpl.GetEqualsImpl(Nemerle.Compiler.TypeInfo,Nemerle.Compiler.FixedType.Class)" />
    <member name="M:Nemerle.Extensions.StructuralEqualityImpl.IsParentImplement_EqualsImpl(Nemerle.Compiler.TypeBuilder)" />
    <member name="M:Nemerle.Extensions.StructuralEqualityImpl.HasTypedEquals(Nemerle.Compiler.FixedType)" />
    <member name="M:Nemerle.Extensions.StructuralEqualityImpl.DefineEquality(Nemerle.Compiler.TypeBuilder,System.Collections.Generic.IEnumerable{Nemerle.Compiler.IField},System.Boolean,System.Boolean)" />
    <member name="M:Nemerle.Extensions.StructuralEqualityImpl.DefineHashCode(Nemerle.Compiler.TypeBuilder,System.Collections.Generic.IEnumerable{Nemerle.Compiler.IField},System.Boolean)" />
    <member name="M:Nemerle.Extensions.StructuralEqualityImpl.DefineOperators(Nemerle.Compiler.TypeBuilder)" />
    <member name="M:Nemerle.Extensions.StructuralEqualityImpl.DefineStructural(Nemerle.Compiler.TypeBuilder)" />
    <member name="M:Nemerle.Extensions.StructuralEqualityImpl.GetTypeName(Nemerle.Compiler.TypeBuilder)" />
    <member name="M:Nemerle.Extensions.StructuralEqualityImpl.AskUserData(Nemerle.Compiler.TypeBuilder,System.String,System.Boolean)" />
    <member name="T:Nemerle.Extensions.StructuralEqualityImpl.SEOptions" />
    <member name="T:Nemerle.Surround.DefineSurround_assembly_postscanMacro" />
    <member name="M:Nemerle.Surround.DefineSurround_assembly_postscanMacro.#ctor" />
    <member name="F:Nemerle.Surround.DefineSurround_assembly_postscanMacro.my_usage" />
    <member name="F:Nemerle.Surround.DefineSurround_assembly_postscanMacro.keywords" />
    <member name="M:Nemerle.Surround.DefineSurround_assembly_postscanMacro.#cctor" />
    <member name="M:Nemerle.Surround.DefineSurround_assembly_postscanMacro.get_Location" />
    <member name="P:Nemerle.Surround.DefineSurround_assembly_postscanMacro.Location" />
    <member name="M:Nemerle.Surround.DefineSurround_assembly_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.Surround.DefineSurround_assembly_postscanMacro.IsInherited" />
    <member name="M:Nemerle.Surround.DefineSurround_assembly_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.Surround.DefineSurround_assembly_postscanMacro.Keywords" />
    <member name="M:Nemerle.Surround.DefineSurround_assembly_postscanMacro.GetName" />
    <member name="M:Nemerle.Surround.DefineSurround_assembly_postscanMacro.get_Name" />
    <member name="P:Nemerle.Surround.DefineSurround_assembly_postscanMacro.Name" />
    <member name="M:Nemerle.Surround.DefineSurround_assembly_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.Surround.DefineSurround_assembly_postscanMacro.Namespace" />
    <member name="M:Nemerle.Surround.DefineSurround_assembly_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.Surround.DefineSurround_assembly_postscanMacro.get_Usage" />
    <member name="P:Nemerle.Surround.DefineSurround_assembly_postscanMacro.Usage" />
    <member name="M:Nemerle.Surround.DefineSurround_assembly_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Surround.DefineSurround_assembly_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Surround.DefineSurround_assembly_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Surround.DefineSurround_assembly_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Surround.DefineSurround_assembly_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.Surround.SurroundWithMacro" />
    <member name="M:Nemerle.Surround.SurroundWithMacro._N_makeSurroundWith_53924(Nemerle.Surround.SurroundWithMacro._N_closureOf_Run_53897,Nemerle.Compiler.Parsetree.PExpr,Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="M:Nemerle.Surround.SurroundWithMacro.#ctor" />
    <member name="F:Nemerle.Surround.SurroundWithMacro.my_usage" />
    <member name="F:Nemerle.Surround.SurroundWithMacro.keywords" />
    <member name="M:Nemerle.Surround.SurroundWithMacro.#cctor" />
    <member name="M:Nemerle.Surround.SurroundWithMacro.get_Location" />
    <member name="P:Nemerle.Surround.SurroundWithMacro.Location" />
    <member name="M:Nemerle.Surround.SurroundWithMacro.get_IsInherited" />
    <member name="P:Nemerle.Surround.SurroundWithMacro.IsInherited" />
    <member name="M:Nemerle.Surround.SurroundWithMacro.get_Keywords" />
    <member name="P:Nemerle.Surround.SurroundWithMacro.Keywords" />
    <member name="M:Nemerle.Surround.SurroundWithMacro.GetName" />
    <member name="M:Nemerle.Surround.SurroundWithMacro.get_Name" />
    <member name="P:Nemerle.Surround.SurroundWithMacro.Name" />
    <member name="M:Nemerle.Surround.SurroundWithMacro.get_Namespace" />
    <member name="P:Nemerle.Surround.SurroundWithMacro.Namespace" />
    <member name="M:Nemerle.Surround.SurroundWithMacro.GetNamespace" />
    <member name="M:Nemerle.Surround.SurroundWithMacro.get_Usage" />
    <member name="P:Nemerle.Surround.SurroundWithMacro.Usage" />
    <member name="M:Nemerle.Surround.SurroundWithMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Surround.SurroundWithMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Surround.SurroundWithMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Surround.SurroundWithMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Surround.SurroundWithMacro.SyntaxExtension" />
    <member name="T:Nemerle.Surround.SurroundWithImpl" />
    <member name="M:Nemerle.Surround.SurroundWithImpl.#cctor" />
    <member name="F:Nemerle.Surround.SurroundWithImpl._surroundWithMap" />
    <member name="T:Nemerle.Text.regexpMacro">
      <summary>
        <para>Translation of matching on regular expressions to operations on .NET
 regular expressions and its Groups, which allows short and simple
 extraction of regular subpatterns.

</para>
      </summary>
    </member>
    <member name="M:Nemerle.Text.regexpMacro.#ctor" />
    <member name="F:Nemerle.Text.regexpMacro.my_usage" />
    <member name="F:Nemerle.Text.regexpMacro.keywords" />
    <member name="M:Nemerle.Text.regexpMacro.#cctor" />
    <member name="M:Nemerle.Text.regexpMacro.get_Location" />
    <member name="P:Nemerle.Text.regexpMacro.Location" />
    <member name="M:Nemerle.Text.regexpMacro.get_IsInherited" />
    <member name="P:Nemerle.Text.regexpMacro.IsInherited" />
    <member name="M:Nemerle.Text.regexpMacro.get_Keywords" />
    <member name="P:Nemerle.Text.regexpMacro.Keywords" />
    <member name="M:Nemerle.Text.regexpMacro.GetName" />
    <member name="M:Nemerle.Text.regexpMacro.get_Name" />
    <member name="P:Nemerle.Text.regexpMacro.Name" />
    <member name="M:Nemerle.Text.regexpMacro.get_Namespace" />
    <member name="P:Nemerle.Text.regexpMacro.Namespace" />
    <member name="M:Nemerle.Text.regexpMacro.GetNamespace" />
    <member name="M:Nemerle.Text.regexpMacro.get_Usage" />
    <member name="P:Nemerle.Text.regexpMacro.Usage" />
    <member name="M:Nemerle.Text.regexpMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Text.regexpMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Text.regexpMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Text.regexpMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Text.regexpMacro.SyntaxExtension" />
    <member name="T:Nemerle.Text.RegexpImpl" />
    <member name="M:Nemerle.Text.RegexpImpl._N_build_bindings_54250(Nemerle.Text.RegexpImpl._N_closureOf_Impl_54149,Nemerle.Core.list{Nemerle.Builtins.Tuple{System.String,System.Boolean,Nemerle.Core.option{System.String}}},Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Text.RegexpImpl._N_build_alts_54238(Nemerle.Text.RegexpImpl._N_closureOf_build_checking_54232,Nemerle.Core.list{System.String})" />
    <member name="M:Nemerle.Text.RegexpImpl._N_build_checking_54226(Nemerle.Text.RegexpImpl._N_closureOf_Impl_54149,Nemerle.Core.list{Nemerle.Builtins.Tuple{Nemerle.Core.list{System.String},Nemerle.Core.list{Nemerle.Builtins.Tuple{System.String,System.Boolean,Nemerle.Core.option{System.String}}},Nemerle.Compiler.Parsetree.PExpr}})" />
    <member name="M:Nemerle.Text.RegexpImpl.Impl(Nemerle.Compiler.Typer,Nemerle.Compiler.ManagerClass,Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="M:Nemerle.Text.RegexpImpl.FixGroupName(System.String)">
      <summary>
        <para>Extract group name from the pattern.
 (?&lt;something[type]&gt;pattern) becomes (?&lt;something&gt;pattern)
 </para>
      </summary>

</member>
    <member name="T:Nemerle.Xml.Serialization.XmlMultidimensionalArray_field_postscanMacro" />
    <member name="M:Nemerle.Xml.Serialization.XmlMultidimensionalArray_field_postscanMacro._N_build_type_54449(Nemerle.Xml.Serialization.XmlMultidimensionalArray_field_postscanMacro._N_closureOf_Run_54387,System.Int32)">
      <summary>
        <para>build property used to serialize and deserialize our field

</para>
      </summary>
    </member>
    <member name="M:Nemerle.Xml.Serialization.XmlMultidimensionalArray_field_postscanMacro._N_nest_54439(Nemerle.Xml.Serialization.XmlMultidimensionalArray_field_postscanMacro._N_closureOf_Run_54387,System.Int32,Nemerle.Compiler.Parsetree.PExpr)">
      <summary>
        <para>we will create general body of setter similar to:
       for (mutable i = 0; i &lt; value.Length; ++i)
         for (mutable j = 0; j &lt; value[i].Length; ++j)
           ordered [i, j] = value[i][j]
     we will use previously defined [lengths] variable as indices
 recursively define [for] loops iterating through nested arrays

</para>
      </summary>
    </member>
    <member name="M:Nemerle.Xml.Serialization.XmlMultidimensionalArray_field_postscanMacro._N_nest_54429(Nemerle.Xml.Serialization.XmlMultidimensionalArray_field_postscanMacro._N_closureOf_Run_54387,System.Int32,Nemerle.Compiler.Parsetree.PExpr.Indexer,Nemerle.Core.Cons[T]{Nemerle.Compiler.Parsetree.PExpr})">
      <summary>
        <para>recursively define [for] loops iterating through nested arrays

</para>
      </summary>
    </member>
    <member name="M:Nemerle.Xml.Serialization.XmlMultidimensionalArray_field_postscanMacro.#ctor" />
    <member name="F:Nemerle.Xml.Serialization.XmlMultidimensionalArray_field_postscanMacro.my_usage" />
    <member name="F:Nemerle.Xml.Serialization.XmlMultidimensionalArray_field_postscanMacro.keywords" />
    <member name="M:Nemerle.Xml.Serialization.XmlMultidimensionalArray_field_postscanMacro.#cctor" />
    <member name="M:Nemerle.Xml.Serialization.XmlMultidimensionalArray_field_postscanMacro.get_Location" />
    <member name="P:Nemerle.Xml.Serialization.XmlMultidimensionalArray_field_postscanMacro.Location" />
    <member name="M:Nemerle.Xml.Serialization.XmlMultidimensionalArray_field_postscanMacro.get_IsInherited" />
    <member name="P:Nemerle.Xml.Serialization.XmlMultidimensionalArray_field_postscanMacro.IsInherited" />
    <member name="M:Nemerle.Xml.Serialization.XmlMultidimensionalArray_field_postscanMacro.get_Keywords" />
    <member name="P:Nemerle.Xml.Serialization.XmlMultidimensionalArray_field_postscanMacro.Keywords" />
    <member name="M:Nemerle.Xml.Serialization.XmlMultidimensionalArray_field_postscanMacro.GetName" />
    <member name="M:Nemerle.Xml.Serialization.XmlMultidimensionalArray_field_postscanMacro.get_Name" />
    <member name="P:Nemerle.Xml.Serialization.XmlMultidimensionalArray_field_postscanMacro.Name" />
    <member name="M:Nemerle.Xml.Serialization.XmlMultidimensionalArray_field_postscanMacro.get_Namespace" />
    <member name="P:Nemerle.Xml.Serialization.XmlMultidimensionalArray_field_postscanMacro.Namespace" />
    <member name="M:Nemerle.Xml.Serialization.XmlMultidimensionalArray_field_postscanMacro.GetNamespace" />
    <member name="M:Nemerle.Xml.Serialization.XmlMultidimensionalArray_field_postscanMacro.get_Usage" />
    <member name="P:Nemerle.Xml.Serialization.XmlMultidimensionalArray_field_postscanMacro.Usage" />
    <member name="M:Nemerle.Xml.Serialization.XmlMultidimensionalArray_field_postscanMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Xml.Serialization.XmlMultidimensionalArray_field_postscanMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Xml.Serialization.XmlMultidimensionalArray_field_postscanMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Xml.Serialization.XmlMultidimensionalArray_field_postscanMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Xml.Serialization.XmlMultidimensionalArray_field_postscanMacro.SyntaxExtension" />
    <member name="T:Nemerle.Xml.Serialization.XmlSerializable_type_preaddMacro">
      <summary>
        <para>Allow XML serialization of a variant.

</para>
      </summary>      <remarks><para>It adds a default public ctor to variant options, prevents
      _N_constant_object optimization and add appropriate XmlInclude
      attributes.

</para></remarks></member>
    <member name="M:Nemerle.Xml.Serialization.XmlSerializable_type_preaddMacro.#ctor" />
    <member name="F:Nemerle.Xml.Serialization.XmlSerializable_type_preaddMacro.my_usage" />
    <member name="F:Nemerle.Xml.Serialization.XmlSerializable_type_preaddMacro.keywords" />
    <member name="M:Nemerle.Xml.Serialization.XmlSerializable_type_preaddMacro.#cctor" />
    <member name="M:Nemerle.Xml.Serialization.XmlSerializable_type_preaddMacro.get_Location" />
    <member name="P:Nemerle.Xml.Serialization.XmlSerializable_type_preaddMacro.Location" />
    <member name="M:Nemerle.Xml.Serialization.XmlSerializable_type_preaddMacro.get_IsInherited" />
    <member name="P:Nemerle.Xml.Serialization.XmlSerializable_type_preaddMacro.IsInherited" />
    <member name="M:Nemerle.Xml.Serialization.XmlSerializable_type_preaddMacro.get_Keywords" />
    <member name="P:Nemerle.Xml.Serialization.XmlSerializable_type_preaddMacro.Keywords" />
    <member name="M:Nemerle.Xml.Serialization.XmlSerializable_type_preaddMacro.GetName" />
    <member name="M:Nemerle.Xml.Serialization.XmlSerializable_type_preaddMacro.get_Name" />
    <member name="P:Nemerle.Xml.Serialization.XmlSerializable_type_preaddMacro.Name" />
    <member name="M:Nemerle.Xml.Serialization.XmlSerializable_type_preaddMacro.get_Namespace" />
    <member name="P:Nemerle.Xml.Serialization.XmlSerializable_type_preaddMacro.Namespace" />
    <member name="M:Nemerle.Xml.Serialization.XmlSerializable_type_preaddMacro.GetNamespace" />
    <member name="M:Nemerle.Xml.Serialization.XmlSerializable_type_preaddMacro.get_Usage" />
    <member name="P:Nemerle.Xml.Serialization.XmlSerializable_type_preaddMacro.Usage" />
    <member name="M:Nemerle.Xml.Serialization.XmlSerializable_type_preaddMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Xml.Serialization.XmlSerializable_type_preaddMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Xml.Serialization.XmlSerializable_type_preaddMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Xml.Serialization.XmlSerializable_type_preaddMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Xml.Serialization.XmlSerializable_type_preaddMacro.SyntaxExtension" />
    <member name="T:_N_MacroContexts" />
    <member name="M:_N_MacroContexts.#cctor" />
    <member name="F:_N_MacroContexts.serialized" />
    <member name="F:_N_MacroContexts.contexts" />
    <member name="F:_N_MacroContexts.last_manager" />
    <member name="M:_N_MacroContexts.Get(System.Int32,Nemerle.Compiler.ManagerClass)" />
    <member name="M:_N_MacroContexts.Clear" />
  </members>
</doc>