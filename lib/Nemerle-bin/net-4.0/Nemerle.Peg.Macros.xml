<?xml version="1.0"?>
<doc>
  <assembly>
    <name>c:\!\nemerle\bin\Release\net-4.0\PowerPack\\Nemerle.Peg.Macros.xml</name>
  </assembly>
  <members>
    <member name="T:Nemerle.Peg.AstUtils.CollectParseErrorsMacro">
      <summary>
        <para>Walks through AST object and collects all ancestors of `Nemerle.Peg.Located' class
 which name starts with "Error".
 Code returns `SCG.List[Nemerle.Peg.Located]' instance.

</para>
      </summary>
    </member>
    <member name="M:Nemerle.Peg.AstUtils.CollectParseErrorsMacro.#ctor" />
    <member name="F:Nemerle.Peg.AstUtils.CollectParseErrorsMacro.my_usage" />
    <member name="F:Nemerle.Peg.AstUtils.CollectParseErrorsMacro.keywords" />
    <member name="M:Nemerle.Peg.AstUtils.CollectParseErrorsMacro.#cctor" />
    <member name="M:Nemerle.Peg.AstUtils.CollectParseErrorsMacro.get_Location" />
    <member name="P:Nemerle.Peg.AstUtils.CollectParseErrorsMacro.Location" />
    <member name="M:Nemerle.Peg.AstUtils.CollectParseErrorsMacro.get_IsInherited" />
    <member name="P:Nemerle.Peg.AstUtils.CollectParseErrorsMacro.IsInherited" />
    <member name="M:Nemerle.Peg.AstUtils.CollectParseErrorsMacro.get_Keywords" />
    <member name="P:Nemerle.Peg.AstUtils.CollectParseErrorsMacro.Keywords" />
    <member name="M:Nemerle.Peg.AstUtils.CollectParseErrorsMacro.GetName" />
    <member name="M:Nemerle.Peg.AstUtils.CollectParseErrorsMacro.get_Name" />
    <member name="P:Nemerle.Peg.AstUtils.CollectParseErrorsMacro.Name" />
    <member name="M:Nemerle.Peg.AstUtils.CollectParseErrorsMacro.get_Namespace" />
    <member name="P:Nemerle.Peg.AstUtils.CollectParseErrorsMacro.Namespace" />
    <member name="M:Nemerle.Peg.AstUtils.CollectParseErrorsMacro.GetNamespace" />
    <member name="M:Nemerle.Peg.AstUtils.CollectParseErrorsMacro.get_Usage" />
    <member name="P:Nemerle.Peg.AstUtils.CollectParseErrorsMacro.Usage" />
    <member name="M:Nemerle.Peg.AstUtils.CollectParseErrorsMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Peg.AstUtils.CollectParseErrorsMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Peg.AstUtils.CollectParseErrorsMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Peg.AstUtils.CollectParseErrorsMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Peg.AstUtils.CollectParseErrorsMacro.SyntaxExtension" />
    <member name="T:Nemerle.Peg.AstUtils.TypeWalker">
      <summary>
        <para>Walks through the type hierarchy of data structure
 and builds code that handles some of entries (in imperative way).

</para> <para>Usage:
   1) Call Run to walk trougth data structure.
      You can call Run in your own handlers - recursion is supported.
   2) Call Compile to emit all walking functions and start code.
 </para></summary>

</member>
    <member name="M:Nemerle.Peg.AstUtils.TypeWalker._N_walkMembers_11533(Nemerle.Peg.AstUtils.TypeWalker._N_closureOf_BuildWalkHandler_11515,Nemerle.Compiler.TypeInfo,Nemerle.Compiler.FixedType)" />
    <member name="F:Nemerle.Peg.AstUtils.TypeWalker.defaultMemberSelector" />
    <member name="F:Nemerle.Peg.AstUtils.TypeWalker.defaultUserHandler" />
    <member name="F:Nemerle.Peg.AstUtils.TypeWalker.visitedTypes" />
    <member name="M:Nemerle.Peg.AstUtils.TypeWalker.#ctor" />
    <member name="M:Nemerle.Peg.AstUtils.TypeWalker.#ctor(Nemerle.Builtins.Function{Nemerle.Compiler.FixedType,Nemerle.Compiler.Parsetree.PExpr,Nemerle.Core.option{Nemerle.Compiler.Parsetree.PExpr}})" />
    <member name="M:Nemerle.Peg.AstUtils.TypeWalker.#ctor(Nemerle.Builtins.Function{Nemerle.Compiler.TypeInfo,Nemerle.Core.list{Nemerle.Compiler.IMember}})" />
    <member name="M:Nemerle.Peg.AstUtils.TypeWalker.#ctor(Nemerle.Builtins.Function{Nemerle.Compiler.TypeInfo,Nemerle.Core.list{Nemerle.Compiler.IMember}},Nemerle.Builtins.Function{Nemerle.Compiler.FixedType,Nemerle.Compiler.Parsetree.PExpr,Nemerle.Core.option{Nemerle.Compiler.Parsetree.PExpr}})" />
    <member name="M:Nemerle.Peg.AstUtils.TypeWalker.Run(Nemerle.Compiler.TypeVar)" />
    <member name="M:Nemerle.Peg.AstUtils.TypeWalker.Run(Nemerle.Compiler.TypeVar,Nemerle.Builtins.Function{Nemerle.Compiler.FixedType,Nemerle.Compiler.Parsetree.PExpr,Nemerle.Core.option{Nemerle.Compiler.Parsetree.PExpr}})" />
    <member name="M:Nemerle.Peg.AstUtils.TypeWalker.Run(Nemerle.Compiler.TypeVar,Nemerle.Builtins.Function{Nemerle.Compiler.TypeInfo,Nemerle.Core.list{Nemerle.Compiler.IMember}})" />
    <member name="M:Nemerle.Peg.AstUtils.TypeWalker.Run(Nemerle.Compiler.TypeVar,Nemerle.Builtins.Function{Nemerle.Compiler.TypeInfo,Nemerle.Core.list{Nemerle.Compiler.IMember}},Nemerle.Builtins.Function{Nemerle.Compiler.FixedType,Nemerle.Compiler.Parsetree.PExpr,Nemerle.Core.option{Nemerle.Compiler.Parsetree.PExpr}})" />
    <member name="M:Nemerle.Peg.AstUtils.TypeWalker.Compile(Nemerle.Compiler.Typedtree.TExpr)" />
    <member name="M:Nemerle.Peg.AstUtils.TypeWalker.GetWalkHandler(Nemerle.Compiler.TypeVar,Nemerle.Builtins.Function{Nemerle.Compiler.TypeInfo,Nemerle.Core.list{Nemerle.Compiler.IMember}},Nemerle.Builtins.Function{Nemerle.Compiler.FixedType,Nemerle.Compiler.Parsetree.PExpr,Nemerle.Core.option{Nemerle.Compiler.Parsetree.PExpr}})" />
    <member name="M:Nemerle.Peg.AstUtils.TypeWalker.BuildWalkHandler(Nemerle.Compiler.FixedType,Nemerle.Builtins.Function{Nemerle.Compiler.TypeInfo,Nemerle.Core.list{Nemerle.Compiler.IMember}},Nemerle.Builtins.Function{Nemerle.Compiler.FixedType,Nemerle.Compiler.Parsetree.PExpr,Nemerle.Core.option{Nemerle.Compiler.Parsetree.PExpr}})" />
    <member name="M:Nemerle.Peg.AstUtils.TypeWalker.GetTypeName(Nemerle.Compiler.TypeVar)" />
    <member name="M:Nemerle.Peg.AstUtils.TypeWalker.DefaultMemberSelector(Nemerle.Compiler.TypeInfo)" />
    <member name="M:Nemerle.Peg.AstUtils.TypeWalker.DefaultUserHandler(Nemerle.Compiler.FixedType,Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="T:Nemerle.Peg.DFSMTransform">
      <summary>
        <para>Description of DFSMTransform.
 </para>
      </summary>

</member>
    <member name="M:Nemerle.Peg.DFSMTransform._N_initalSplit_12621(Nemerle.Peg.DFSMTransform._N_closureOf_Minimize_12562,Nemerle.Collections.Set{System.Int32})" />
    <member name="M:Nemerle.Peg.DFSMTransform._N_addStateSet_12578(Nemerle.Peg.DFSMTransform._N_closureOf_Minimize_12562,Nemerle.Core.list{System.Int32})" />
    <member name="M:Nemerle.Peg.DFSMTransform._N_addSymbolTransition_12276(Nemerle.Peg.DFSMTransform._N_closureOf_loop_12260,Nemerle.Peg.DFSMTransform._N_closureOf_Do_12105,System.Int32,System.Int32,System.Int32)" />
    <member name="M:Nemerle.Peg.DFSMTransform._N_addStateSet_12248(Nemerle.Peg.DFSMTransform._N_closureOf_Do_12105,Nemerle.Collections.Set{System.Int32})" />
    <member name="M:Nemerle.Peg.DFSMTransform._N_epsilonMove_12197(Nemerle.Peg.DFSMTransform._N_closureOf_Do_12105,Nemerle.Collections.Set{System.Int32})" />
    <member name="M:Nemerle.Peg.DFSMTransform._N_epsilonTransitions_12158(Nemerle.Peg.DFSMTransform._N_closureOf_Do_12105,System.Int32)" />
    <member name="M:Nemerle.Peg.DFSMTransform._N_symbolTransitions_12119(Nemerle.Peg.DFSMTransform._N_closureOf_Do_12105,System.Int32)" />
    <member name="M:Nemerle.Peg.DFSMTransform.Normalize(Nemerle.Peg.FSM)" />
    <member name="M:Nemerle.Peg.DFSMTransform.Do(Nemerle.Peg.FSM)" />
    <member name="M:Nemerle.Peg.DFSMTransform.Minimize(Nemerle.Peg.FSM)" />
    <member name="T:Nemerle.Peg.Transition" />
    <member name="F:Nemerle.Peg.Transition.From" />
    <member name="F:Nemerle.Peg.Transition.To" />
    <member name="M:Nemerle.Peg.Transition.ToString" />
    <member name="M:Nemerle.Peg.Transition._N_GetVariantCode" />
    <member name="M:Nemerle.Peg.Transition._N_GetVariantCodeSafe(Nemerle.Peg.Transition)" />
    <member name="M:Nemerle.Peg.Transition._N_GetVariantCodeObject(System.Object)" />
    <member name="M:Nemerle.Peg.Transition.#ctor(System.Int32,System.Int32)" />
    <member name="T:Nemerle.Peg.Transition.Symbol" />
    <member name="T:Nemerle.Peg.Transition.Epsilon" />
    <member name="T:Nemerle.Peg.FSM" />
    <member name="F:Nemerle.Peg.FSM._stateCount" />
    <member name="F:Nemerle.Peg.FSM._transitions" />
    <member name="F:Nemerle.Peg.FSM._startState" />
    <member name="F:Nemerle.Peg.FSM._okStates" />
    <member name="M:Nemerle.Peg.FSM.get_FailStates" />
    <member name="P:Nemerle.Peg.FSM.FailStates" />
    <member name="M:Nemerle.Peg.FSM.#ctor" />
    <member name="M:Nemerle.Peg.FSM.#ctor(System.Int32,Nemerle.Core.list{Nemerle.Peg.Transition},System.Int32,Nemerle.Collections.Set{System.Int32})" />
    <member name="M:Nemerle.Peg.FSM.NewState" />
    <member name="M:Nemerle.Peg.FSM.NewState(System.Int32)" />
    <member name="M:Nemerle.Peg.FSM.NewStartState" />
    <member name="M:Nemerle.Peg.FSM.NewOkState" />
    <member name="M:Nemerle.Peg.FSM.SetStartState(System.Int32)" />
    <member name="M:Nemerle.Peg.FSM.SetOkStates(Nemerle.Collections.Set{System.Int32})" />
    <member name="M:Nemerle.Peg.FSM.AddOkState(System.Int32)" />
    <member name="M:Nemerle.Peg.FSM.AddOkStates(System.Collections.Generic.IEnumerable{System.Int32})" />
    <member name="M:Nemerle.Peg.FSM.RemoveOkState(System.Int32)" />
    <member name="M:Nemerle.Peg.FSM.RemoveOkStates(System.Collections.Generic.IEnumerable{System.Int32})" />
    <member name="M:Nemerle.Peg.FSM.SetTransitions(Nemerle.Core.list{Nemerle.Peg.Transition})" />
    <member name="M:Nemerle.Peg.FSM.AddTransition(Nemerle.Peg.Transition)" />
    <member name="M:Nemerle.Peg.FSM.IncludeFSM(Nemerle.Peg.FSM)" />
    <member name="M:Nemerle.Peg.FSM.get_StateCount" />
    <member name="P:Nemerle.Peg.FSM.StateCount" />
    <member name="M:Nemerle.Peg.FSM.get_Transitions" />
    <member name="P:Nemerle.Peg.FSM.Transitions" />
    <member name="M:Nemerle.Peg.FSM.get_StartState" />
    <member name="P:Nemerle.Peg.FSM.StartState" />
    <member name="M:Nemerle.Peg.FSM.get_OkStates" />
    <member name="P:Nemerle.Peg.FSM.OkStates" />
    <member name="T:Nemerle.Peg.FSMBuilder" />
    <member name="M:Nemerle.Peg.FSMBuilder.Symbol(System.Char)" />
    <member name="M:Nemerle.Peg.FSMBuilder.Symbol(System.Char,System.Char)" />
    <member name="M:Nemerle.Peg.FSMBuilder.ISymbol(System.Char)" />
    <member name="M:Nemerle.Peg.FSMBuilder.Symbol(Nemerle.Peg.RangeSet)" />
    <member name="M:Nemerle.Peg.FSMBuilder.Seq(Nemerle.Core.list{Nemerle.Peg.RangeSet})" />
    <member name="M:Nemerle.Peg.FSMBuilder.Seq(Nemerle.Core.list{Nemerle.Peg.FSM})" />
    <member name="M:Nemerle.Peg.FSMBuilder.String(System.String)" />
    <member name="M:Nemerle.Peg.FSMBuilder.IString(System.String)" />
    <member name="M:Nemerle.Peg.FSMBuilder.Option(Nemerle.Peg.FSM)" />
    <member name="M:Nemerle.Peg.FSMBuilder.RepeatMin(System.Int32,Nemerle.Peg.FSM)" />
    <member name="M:Nemerle.Peg.FSMBuilder.RepeatMinMax(System.Int32,System.Int32,Nemerle.Peg.FSM)" />
    <member name="M:Nemerle.Peg.FSMBuilder.Choice(Nemerle.Core.list{Nemerle.Peg.FSM})" />
    <member name="T:Nemerle.Peg.Grammar" />
    <member name="M:Nemerle.Peg.Grammar._N_isOptionalImpl_15004(Nemerle.Peg.Grammar._N_closureOf_IsOptional_14996,Nemerle.Peg.Rule,System.Collections.Generic.HashSet{Nemerle.Peg.Rule})" />
    <member name="F:Nemerle.Peg.Grammar._grammar" />
    <member name="F:Nemerle.Peg.Grammar._grammarRefs" />
    <member name="F:Nemerle.Peg.Grammar._startRuleName" />
    <member name="M:Nemerle.Peg.Grammar.#ctor(Nemerle.Peg.NameRef)" />
    <member name="M:Nemerle.Peg.Grammar.#ctor(Nemerle.Peg.NameRef,Nemerle.Collections.Map{Nemerle.Peg.NameRef,Nemerle.Peg.RuleDefinition},Nemerle.Core.list{Nemerle.Peg.GrammarRef})" />
    <member name="M:Nemerle.Peg.Grammar.Add(Nemerle.Peg.RuleDefinition)" />
    <member name="M:Nemerle.Peg.Grammar.Add(Nemerle.Peg.GrammarRef)" />
    <member name="M:Nemerle.Peg.Grammar.GetRule(Nemerle.Peg.NameRef)" />
    <member name="M:Nemerle.Peg.Grammar.GetRuleType(Nemerle.Peg.NameRef)" />
    <member name="M:Nemerle.Peg.Grammar.get_Count" />
    <member name="P:Nemerle.Peg.Grammar.Count" />
    <member name="M:Nemerle.Peg.Grammar.get_Names" />
    <member name="P:Nemerle.Peg.Grammar.Names" />
    <member name="M:Nemerle.Peg.Grammar.get_Rules" />
    <member name="P:Nemerle.Peg.Grammar.Rules" />
    <member name="M:Nemerle.Peg.Grammar.TransformRules(Nemerle.Builtins.Function{Nemerle.Peg.RuleDefinition,Nemerle.Core.option{Nemerle.Peg.Rule}})" />
    <member name="M:Nemerle.Peg.Grammar.IsOptional(Nemerle.Peg.Rule)" />
    <member name="M:Nemerle.Peg.Grammar.ToString" />
    <member name="M:Nemerle.Peg.Grammar.get_StartRuleName" />
    <member name="P:Nemerle.Peg.Grammar.StartRuleName" />
    <member name="T:Nemerle.Peg.GrammarException" />
    <member name="F:Nemerle.Peg.GrammarException.location" />
    <member name="M:Nemerle.Peg.GrammarException.get_Location" />
    <member name="P:Nemerle.Peg.GrammarException.Location" />
    <member name="M:Nemerle.Peg.GrammarException.#ctor(Nemerle.Compiler.Location)" />
    <member name="M:Nemerle.Peg.GrammarException.#ctor(System.String,Nemerle.Compiler.Location)" />
    <member name="M:Nemerle.Peg.GrammarException.#ctor(System.String,System.Exception,Nemerle.Compiler.Location)" />
    <member name="M:Nemerle.Peg.GrammarException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,Nemerle.Compiler.Location)" />
    <member name="T:Nemerle.Peg.GrammarRef" />
    <member name="M:Nemerle.Peg.GrammarRef._N_GetVariantCode" />
    <member name="M:Nemerle.Peg.GrammarRef._N_GetVariantCodeSafe(Nemerle.Peg.GrammarRef)" />
    <member name="M:Nemerle.Peg.GrammarRef._N_GetVariantCodeObject(System.Object)" />
    <member name="M:Nemerle.Peg.GrammarRef.#ctor" />
    <member name="M:Nemerle.Peg.GrammarRef.#ctor(Nemerle.Compiler.Location)" />
    <member name="T:Nemerle.Peg.GrammarRef.Alias" />
    <member name="T:Nemerle.Peg.GrammarRef.Ref" />
    <member name="T:Nemerle.Peg.GrammarTyper" />
    <member name="M:Nemerle.Peg.GrammarTyper._N_hasLeftRecImpl_16442(Nemerle.Peg.GrammarTyper._N_closureOf_CheckLeftRec_16430,Nemerle.Peg.Rule,Nemerle.Collections.Set{Nemerle.Peg.NameRef},Nemerle.Core.list{Nemerle.Peg.NameRef})" />
    <member name="M:Nemerle.Peg.GrammarTyper._N_addCaptures_15625(Nemerle.Peg.GrammarTyper._N_closureOf_AddArgumentCaptures_15564,Nemerle.Peg.Rule)" />
    <member name="M:Nemerle.Peg.GrammarTyper._N_makeRes_15618(Nemerle.Peg.GrammarTyper._N_closureOf_AddArgumentCaptures_15564,Nemerle.Peg.Rule,Nemerle.Peg.RuleType)" />
    <member name="M:Nemerle.Peg.GrammarTyper._N_getType_15606(Nemerle.Peg.GrammarTyper._N_closureOf_AddArgumentCaptures_15564,Nemerle.Peg.NameRef)" />
    <member name="M:Nemerle.Peg.GrammarTyper._N_optimizeType_15575(Nemerle.Peg.RuleType)" />
    <member name="M:Nemerle.Peg.GrammarTyper.#cctor" />
    <member name="M:Nemerle.Peg.GrammarTyper.AddArgumentCaptures(Nemerle.Peg.Grammar,Nemerle.Compiler.Typer)" />
    <member name="M:Nemerle.Peg.GrammarTyper.IsOptimizableOptionType(Nemerle.Peg.RuleType)" />
    <member name="M:Nemerle.Peg.GrammarTyper.RuleTypeToNType(Nemerle.Peg.RuleType,Nemerle.Compiler.Typer)" />
    <member name="M:Nemerle.Peg.GrammarTyper.RemoveAllCaptures(Nemerle.Peg.Rule)" />
    <member name="M:Nemerle.Peg.GrammarTyper.RemoveAllCaptures(Nemerle.Peg.Grammar)" />
    <member name="F:Nemerle.Peg.GrammarTyper._debug" />
    <member name="M:Nemerle.Peg.GrammarTyper.Check(Nemerle.Peg.Grammar)" />
    <member name="M:Nemerle.Peg.GrammarTyper.CheckLeftRec(Nemerle.Peg.Grammar)" />
    <member name="M:Nemerle.Peg.GrammarTyper.CheckLeftRecLiteralOrder(Nemerle.Peg.Grammar)" />
    <member name="T:Nemerle.Peg.IntelliSenseSupport" />
    <member name="M:Nemerle.Peg.IntelliSenseSupport._N_makeGotoRuleDef_17120(Nemerle.Peg.IntelliSenseSupport._N_closureOf_MakeGotoInfos_17108,Nemerle.Peg.Rule)" />
    <member name="M:Nemerle.Peg.IntelliSenseSupport.AddIntelliSenseSupport(Nemerle.Peg.GrammarCompiler,Nemerle.Peg.Grammar,Nemerle.Compiler.Typer,Nemerle.Compiler.TypeBuilder)" />
    <member name="M:Nemerle.Peg.IntelliSenseSupport.GetGotoMap(Nemerle.Compiler.TypeBuilder)" />
    <member name="M:Nemerle.Peg.IntelliSenseSupport.MakeGotoInfos(Nemerle.Peg.NameRef,Nemerle.Peg.Grammar,Nemerle.Compiler.TypeBuilder,Nemerle.Compiler.Typer)" />
    <member name="T:Nemerle.Peg.NameRef" />
    <member name="F:Nemerle.Peg.NameRef.id" />
    <member name="M:Nemerle.Peg.NameRef.ToString" />
    <member name="M:Nemerle.Peg.NameRef.GetHashCode" />
    <member name="M:Nemerle.Peg.NameRef.CompareTo(Nemerle.Peg.NameRef)" />
    <member name="M:Nemerle.Peg.NameRef.Equals(Nemerle.Peg.NameRef)" />
    <member name="M:Nemerle.Peg.NameRef.Equals(System.Object)" />
    <member name="M:Nemerle.Peg.NameRef.get_Id" />
    <member name="P:Nemerle.Peg.NameRef.Id" />
    <member name="M:Nemerle.Peg.NameRef.#ctor(System.String)" />
    <member name="M:Nemerle.Peg.NameRef.#ctor(Nemerle.Compiler.Location,System.String)" />
    <member name="T:Nemerle.Peg.Optimizer" />
    <member name="M:Nemerle.Peg.Optimizer._N_catFSM_17676(Nemerle.Peg.Optimizer._N_closureOf_optimize_17597,Nemerle.Core.list{Nemerle.Peg.Rule})" />
    <member name="M:Nemerle.Peg.Optimizer._N_optimizeNot_17650(Nemerle.Peg.Optimizer._N_closureOf_optimize_17597,Nemerle.Core.list{Nemerle.Peg.Rule})" />
    <member name="M:Nemerle.Peg.Optimizer._N_catFSM_17635(Nemerle.Peg.Optimizer._N_closureOf_optimize_17597,Nemerle.Core.list{Nemerle.Peg.Rule})" />
    <member name="M:Nemerle.Peg.Optimizer._N_add_17364(Nemerle.Core.option{System.Int32},Nemerle.Core.option{System.Int32})" />
    <member name="M:Nemerle.Peg.Optimizer._N_calc_17353(Nemerle.Peg.Optimizer._N_closureOf_calcRuleWeight_17345,Nemerle.Peg.Rule)" />
    <member name="M:Nemerle.Peg.Optimizer.#ctor" />
    <member name="M:Nemerle.Peg.Optimizer.CalcRulesWeights(Nemerle.Peg.Grammar)" />
    <member name="M:Nemerle.Peg.Optimizer.OptimizeGrammar(Nemerle.Peg.Grammar)" />
    <member name="M:Nemerle.Peg.Optimizer.OptimizeRule(Nemerle.Peg.NameRef,Nemerle.Builtins.Function{Nemerle.Peg.NameRef,Nemerle.Core.option{Nemerle.Peg.Rule}},Nemerle.Peg.Grammar,Nemerle.Collections.Map{Nemerle.Peg.NameRef,Nemerle.Core.option{System.Int32}})" />
    <member name="T:Nemerle.Peg.CriticalUnexpectedException" />
    <member name="M:Nemerle.Peg.CriticalUnexpectedException.#ctor" />
    <member name="T:Nemerle.Peg.Parsing">
      <summary>
        <para>Description of Parsing.
 </para>
      </summary>

</member>
    <member name="M:Nemerle.Peg.Parsing._N_parseAttr_18687(Nemerle.Peg.Parsing._N_closureOf_parseAttrs_18674,Nemerle.Peg.Parsing._N_closureOf_parseRule_18611,Nemerle.Peg.Parsing._N_closureOf_ParseEbnf_18259,Nemerle.Compiler.Token)" />
    <member name="M:Nemerle.Peg.Parsing._N_parseExtensible_18632(Nemerle.Peg.Parsing._N_closureOf_ParseEbnf_18259,Nemerle.Compiler.Token,System.String)" />
    <member name="M:Nemerle.Peg.Parsing._N_getName_18616(Nemerle.Compiler.Token)" />
    <member name="M:Nemerle.Peg.Parsing._N_parseRule_18605(Nemerle.Peg.Parsing._N_closureOf_ParseEbnf_18259,Nemerle.Compiler.Token,System.Int32)" />
    <member name="M:Nemerle.Peg.Parsing._N_getIntValue_18473(Nemerle.Compiler.Token)" />
    <member name="M:Nemerle.Peg.Parsing._N_parceRecoveryAttribute_18362(Nemerle.Peg.Parsing._N_closureOf_ParseEbnf_18259,Nemerle.Compiler.Token,Nemerle.Builtins.Function{Nemerle.Compiler.Location,Nemerle.Peg.NameRef,Nemerle.Peg.Rule,Nemerle.Peg.Rule,Nemerle.Peg.RuleAttribute})" />
    <member name="M:Nemerle.Peg.Parsing._N_parseOrderedChoice_18356(Nemerle.Peg.Parsing._N_closureOf_ParseEbnf_18259,Nemerle.Compiler.Token)" />
    <member name="M:Nemerle.Peg.Parsing._N_parseCardinalityRule_18334(Nemerle.Peg.Parsing._N_closureOf_ParseEbnf_18259,Nemerle.Compiler.Token)" />
    <member name="M:Nemerle.Peg.Parsing._N_parseSimpleRule_18328(Nemerle.Peg.Parsing._N_closureOf_ParseEbnf_18259,Nemerle.Compiler.Token)" />
    <member name="M:Nemerle.Peg.Parsing._N_parseRange_18323(Nemerle.Compiler.Token)" />
    <member name="M:Nemerle.Peg.Parsing._N_parseOneOrMany_18314(Nemerle.Peg.Parsing._N_closureOf_ParseEbnf_18259,Nemerle.Compiler.Token,Nemerle.Builtins.Function{Nemerle.Compiler.Token,Nemerle.Compiler.Token},Nemerle.Builtins.Function{Nemerle.Compiler.Token,Nemerle.Builtins.Tuple{Nemerle.Peg.Rule,Nemerle.Compiler.Token}},System.String)" />
    <member name="M:Nemerle.Peg.Parsing._N_parseZeroOrMany_18274(Nemerle.Compiler.Token,Nemerle.Builtins.Function{Nemerle.Compiler.Token,Nemerle.Compiler.Token},Nemerle.Builtins.Function{Nemerle.Compiler.Token,Nemerle.Builtins.Tuple{Nemerle.Peg.Rule,Nemerle.Compiler.Token}})" />
    <member name="M:Nemerle.Peg.Parsing.#cctor">
      <summary>
        <para>Description of Parsing.
 </para>
      </summary>

</member>
    <member name="M:Nemerle.Peg.Parsing.ParseRules(Nemerle.Compiler.Typer,Nemerle.Peg.NameRef,Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="M:Nemerle.Peg.Parsing.ParseEbnf(Nemerle.Compiler.Typer,Nemerle.Compiler.Token,Nemerle.Peg.Grammar)" />
    <member name="F:Nemerle.Peg.Parsing._debug" />
    <member name="M:Nemerle.Peg.Parsing.ReportCriticalUnexpected``1(Nemerle.Compiler.Token,System.String)" />
    <member name="M:Nemerle.Peg.Parsing.ReportUnexpected(Nemerle.Compiler.Token,System.String)" />
    <member name="M:Nemerle.Peg.Parsing.ReportUnexpected(Nemerle.Compiler.Parsetree.PExpr,System.String)" />
    <member name="M:Nemerle.Peg.Parsing.ReportCriticalUnexpected``1(Nemerle.Compiler.Parsetree.PExpr,System.String)" />
    <member name="M:Nemerle.Peg.Parsing.BindFixedType(Nemerle.Compiler.Parsetree.PExpr,Nemerle.Compiler.Typer)" />
    <member name="T:Nemerle.Peg.GrammarScopeMacro" />
    <member name="M:Nemerle.Peg.GrammarScopeMacro.#ctor" />
    <member name="F:Nemerle.Peg.GrammarScopeMacro.my_usage" />
    <member name="F:Nemerle.Peg.GrammarScopeMacro.keywords" />
    <member name="M:Nemerle.Peg.GrammarScopeMacro.#cctor" />
    <member name="M:Nemerle.Peg.GrammarScopeMacro.get_Location" />
    <member name="P:Nemerle.Peg.GrammarScopeMacro.Location" />
    <member name="M:Nemerle.Peg.GrammarScopeMacro.get_IsInherited" />
    <member name="P:Nemerle.Peg.GrammarScopeMacro.IsInherited" />
    <member name="M:Nemerle.Peg.GrammarScopeMacro.get_Keywords" />
    <member name="P:Nemerle.Peg.GrammarScopeMacro.Keywords" />
    <member name="M:Nemerle.Peg.GrammarScopeMacro.GetName" />
    <member name="M:Nemerle.Peg.GrammarScopeMacro.get_Name" />
    <member name="P:Nemerle.Peg.GrammarScopeMacro.Name" />
    <member name="M:Nemerle.Peg.GrammarScopeMacro.get_Namespace" />
    <member name="P:Nemerle.Peg.GrammarScopeMacro.Namespace" />
    <member name="M:Nemerle.Peg.GrammarScopeMacro.GetNamespace" />
    <member name="M:Nemerle.Peg.GrammarScopeMacro.get_Usage" />
    <member name="P:Nemerle.Peg.GrammarScopeMacro.Usage" />
    <member name="M:Nemerle.Peg.GrammarScopeMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Peg.GrammarScopeMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Peg.GrammarScopeMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Peg.GrammarScopeMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Peg.GrammarScopeMacro.SyntaxExtension" />
    <member name="T:Nemerle.Peg.PegGrammarOptions" />
    <member name="F:Nemerle.Peg.PegGrammarOptions._N_EmitDebugSources_5511" />
    <member name="M:Nemerle.Peg.PegGrammarOptions.get_EmitDebugSources" />
    <member name="M:Nemerle.Peg.PegGrammarOptions.set_EmitDebugSources(System.Boolean)" />
    <member name="P:Nemerle.Peg.PegGrammarOptions.EmitDebugSources" />
    <member name="M:Nemerle.Peg.PegGrammarOptions.GetDefineMethod(Nemerle.Compiler.TypeBuilder)" />
    <member name="M:Nemerle.Peg.PegGrammarOptions.Parse(Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="T:Nemerle.Peg.PegGrammar_type_preaddMacro" />
    <member name="M:Nemerle.Peg.PegGrammar_type_preaddMacro.#ctor" />
    <member name="F:Nemerle.Peg.PegGrammar_type_preaddMacro.my_usage" />
    <member name="F:Nemerle.Peg.PegGrammar_type_preaddMacro.keywords" />
    <member name="M:Nemerle.Peg.PegGrammar_type_preaddMacro.#cctor" />
    <member name="M:Nemerle.Peg.PegGrammar_type_preaddMacro.get_Location" />
    <member name="P:Nemerle.Peg.PegGrammar_type_preaddMacro.Location" />
    <member name="M:Nemerle.Peg.PegGrammar_type_preaddMacro.get_IsInherited" />
    <member name="P:Nemerle.Peg.PegGrammar_type_preaddMacro.IsInherited" />
    <member name="M:Nemerle.Peg.PegGrammar_type_preaddMacro.get_Keywords" />
    <member name="P:Nemerle.Peg.PegGrammar_type_preaddMacro.Keywords" />
    <member name="M:Nemerle.Peg.PegGrammar_type_preaddMacro.GetName" />
    <member name="M:Nemerle.Peg.PegGrammar_type_preaddMacro.get_Name" />
    <member name="P:Nemerle.Peg.PegGrammar_type_preaddMacro.Name" />
    <member name="M:Nemerle.Peg.PegGrammar_type_preaddMacro.get_Namespace" />
    <member name="P:Nemerle.Peg.PegGrammar_type_preaddMacro.Namespace" />
    <member name="M:Nemerle.Peg.PegGrammar_type_preaddMacro.GetNamespace" />
    <member name="M:Nemerle.Peg.PegGrammar_type_preaddMacro.get_Usage" />
    <member name="P:Nemerle.Peg.PegGrammar_type_preaddMacro.Usage" />
    <member name="M:Nemerle.Peg.PegGrammar_type_preaddMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Peg.PegGrammar_type_preaddMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Peg.PegGrammar_type_preaddMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Peg.PegGrammar_type_preaddMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Peg.PegGrammar_type_preaddMacro.SyntaxExtension" />
    <member name="T:Nemerle.Peg.GrammarImpl" />
    <member name="M:Nemerle.Peg.GrammarImpl._N_check_19174(Nemerle.Peg.GrammarImpl._N_closureOf_CheckRules_19166,Nemerle.Peg.Rule)" />
    <member name="M:Nemerle.Peg.GrammarImpl.CheckRules(Nemerle.Peg.Grammar)" />
    <member name="M:Nemerle.Peg.GrammarImpl.MakeParser(Nemerle.Compiler.Typer,Nemerle.Compiler.TypeBuilder,Nemerle.Peg.Grammar)" />
    <member name="T:Nemerle.Peg.RangeSet" />
    <member name="M:Nemerle.Peg.RangeSet._N_cat_19533(System.Int32,System.Int32,Nemerle.Core.list{Nemerle.Peg.RangeSet.Range})" />
    <member name="M:Nemerle.Peg.RangeSet._N_remove_19518(Nemerle.Peg.RangeSet._N_closureOf_RemoveRange_19507,Nemerle.Core.list{Nemerle.Peg.RangeSet.Range})" />
    <member name="M:Nemerle.Peg.RangeSet._N_add_19469(Nemerle.Peg.RangeSet._N_closureOf_AddRange_19460,Nemerle.Core.list{Nemerle.Peg.RangeSet.Range},Nemerle.Peg.RangeSet.Range)" />
    <member name="M:Nemerle.Peg.RangeSet.GetHashCode(System.Collections.IEqualityComparer)" />
    <member name="M:Nemerle.Peg.RangeSet.Equals(System.Object,System.Collections.IEqualityComparer)" />
    <member name="M:Nemerle.Peg.RangeSet.op_Inequality(Nemerle.Peg.RangeSet,Nemerle.Peg.RangeSet)" />
    <member name="M:Nemerle.Peg.RangeSet.op_Equality(Nemerle.Peg.RangeSet,Nemerle.Peg.RangeSet)" />
    <member name="M:Nemerle.Peg.RangeSet.GetHashCode" />
    <member name="M:Nemerle.Peg.RangeSet.Equals(System.Object)" />
    <member name="M:Nemerle.Peg.RangeSet.Equals(Nemerle.Peg.RangeSet)" />
    <member name="F:Nemerle.Peg.RangeSet._ranges" />
    <member name="M:Nemerle.Peg.RangeSet.#ctor" />
    <member name="M:Nemerle.Peg.RangeSet.#ctor(Nemerle.Core.list{Nemerle.Peg.RangeSet.Range})" />
    <member name="M:Nemerle.Peg.RangeSet.AddRange(System.Char,System.Char)" />
    <member name="M:Nemerle.Peg.RangeSet.AddRange(Nemerle.Peg.RangeSet.Range)" />
    <member name="M:Nemerle.Peg.RangeSet.RemoveRange(System.Char,System.Char)" />
    <member name="M:Nemerle.Peg.RangeSet.RemoveRange(Nemerle.Peg.RangeSet.Range)" />
    <member name="M:Nemerle.Peg.RangeSet.Sum(Nemerle.Peg.RangeSet)" />
    <member name="M:Nemerle.Peg.RangeSet.Sub(Nemerle.Peg.RangeSet)" />
    <member name="M:Nemerle.Peg.RangeSet.Intersect(Nemerle.Peg.RangeSet)" />
    <member name="M:Nemerle.Peg.RangeSet.Invert" />
    <member name="M:Nemerle.Peg.RangeSet.get_IsSinglChar" />
    <member name="P:Nemerle.Peg.RangeSet.IsSinglChar" />
    <member name="M:Nemerle.Peg.RangeSet.ToString" />
    <member name="M:Nemerle.Peg.RangeSet.EqualsImpl(Nemerle.Peg.RangeSet)" />
    <member name="M:Nemerle.Peg.RangeSet.get_Ranges" />
    <member name="P:Nemerle.Peg.RangeSet.Ranges" />
    <member name="T:Nemerle.Peg.RangeSet.Range" />
    <member name="T:Nemerle.Peg.CaptureKind" />
    <member name="M:Nemerle.Peg.CaptureKind.#ctor" />
    <member name="M:Nemerle.Peg.CaptureKind.ToString" />
    <member name="M:Nemerle.Peg.CaptureKind._N_GetVariantCode" />
    <member name="M:Nemerle.Peg.CaptureKind._N_GetVariantCodeSafe(Nemerle.Peg.CaptureKind)" />
    <member name="M:Nemerle.Peg.CaptureKind._N_GetVariantCodeObject(System.Object)" />
    <member name="T:Nemerle.Peg.CaptureKind.Handler" />
    <member name="T:Nemerle.Peg.CaptureKind.Argument" />
    <member name="T:Nemerle.Peg.Rule" />
    <member name="M:Nemerle.Peg.Rule.get_Priority" />
    <member name="P:Nemerle.Peg.Rule.Priority" />
    <member name="M:Nemerle.Peg.Rule.ToString" />
    <member name="M:Nemerle.Peg.Rule._N_GetVariantCode" />
    <member name="M:Nemerle.Peg.Rule._N_GetVariantCodeSafe(Nemerle.Peg.Rule)" />
    <member name="M:Nemerle.Peg.Rule._N_GetVariantCodeObject(System.Object)" />
    <member name="M:Nemerle.Peg.Rule.#ctor" />
    <member name="M:Nemerle.Peg.Rule.#ctor(Nemerle.Compiler.Location)" />
    <member name="T:Nemerle.Peg.Rule.Choice" />
    <member name="T:Nemerle.Peg.Rule.Sequence" />
    <member name="T:Nemerle.Peg.Rule.Call" />
    <member name="T:Nemerle.Peg.Rule.RepeatMin" />
    <member name="T:Nemerle.Peg.Rule.RepeatMinMax" />
    <member name="T:Nemerle.Peg.Rule.Chars" />
    <member name="T:Nemerle.Peg.Rule.Fsm" />
    <member name="T:Nemerle.Peg.Rule.Not" />
    <member name="T:Nemerle.Peg.Rule.And" />
    <member name="T:Nemerle.Peg.Rule.Capture" />
    <member name="T:Nemerle.Peg.Rule.Scope" />
    <member name="T:Nemerle.Peg.Rule.Cut" />
    <member name="T:Nemerle.Peg.Usage" />
    <member name="F:Nemerle.Peg.Usage._N_Text_5741" />
    <member name="M:Nemerle.Peg.Usage.get_Text" />
    <member name="M:Nemerle.Peg.Usage.set_Text(System.String)" />
    <member name="P:Nemerle.Peg.Usage.Text" />
    <member name="M:Nemerle.Peg.Usage.#ctor(System.String)" />
    <member name="T:Nemerle.Peg.RuleAttribute" />
    <member name="M:Nemerle.Peg.RuleAttribute.GetUsages" />
    <member name="M:Nemerle.Peg.RuleAttribute.ToString" />
    <member name="M:Nemerle.Peg.RuleAttribute._N_GetVariantCode" />
    <member name="M:Nemerle.Peg.RuleAttribute._N_GetVariantCodeSafe(Nemerle.Peg.RuleAttribute)" />
    <member name="M:Nemerle.Peg.RuleAttribute._N_GetVariantCodeObject(System.Object)" />
    <member name="M:Nemerle.Peg.RuleAttribute.#ctor" />
    <member name="M:Nemerle.Peg.RuleAttribute.#ctor(Nemerle.Compiler.Location)" />
    <member name="T:Nemerle.Peg.RuleAttribute.Inline" />
    <member name="T:Nemerle.Peg.RuleAttribute.InlineAllSubrules" />
    <member name="T:Nemerle.Peg.RuleAttribute.OmitLocation" />
    <member name="T:Nemerle.Peg.RuleAttribute.Export" />
    <member name="T:Nemerle.Peg.RuleAttribute.Extends" />
    <member name="T:Nemerle.Peg.RuleAttribute.Extensible" />
    <member name="T:Nemerle.Peg.RuleAttribute.Cut" />
    <member name="T:Nemerle.Peg.RuleAttribute.Recovery" />
    <member name="T:Nemerle.Peg.RuleAttribute.PrecedenceLesserThan" />
    <member name="T:Nemerle.Peg.RuleAttribute.PrecedenceEqualsTo" />
    <member name="T:Nemerle.Peg.RuleAttribute.PrecedenceGreaterThan" />
    <member name="T:Nemerle.Peg.RuleDefinitionType" />
    <member name="M:Nemerle.Peg.RuleDefinitionType.#ctor" />
    <member name="M:Nemerle.Peg.RuleDefinitionType._N_GetVariantCode" />
    <member name="M:Nemerle.Peg.RuleDefinitionType._N_GetVariantCodeSafe(Nemerle.Peg.RuleDefinitionType)" />
    <member name="M:Nemerle.Peg.RuleDefinitionType._N_GetVariantCodeObject(System.Object)" />
    <member name="T:Nemerle.Peg.RuleDefinitionType.Typed" />
    <member name="T:Nemerle.Peg.RuleDefinitionType.Extention" />
    <member name="T:Nemerle.Peg.RuleDefinitionType.None" />
    <member name="T:Nemerle.Peg.RuleDefinition" />
    <member name="F:Nemerle.Peg.RuleDefinition._id" />
    <member name="F:Nemerle.Peg.RuleDefinition._name" />
    <member name="F:Nemerle.Peg.RuleDefinition._resultType" />
    <member name="F:Nemerle.Peg.RuleDefinition._attributes" />
    <member name="F:Nemerle.Peg.RuleDefinition._rule" />
    <member name="M:Nemerle.Peg.RuleDefinition.get_Id" />
    <member name="P:Nemerle.Peg.RuleDefinition.Id" />
    <member name="M:Nemerle.Peg.RuleDefinition.get_Name" />
    <member name="P:Nemerle.Peg.RuleDefinition.Name" />
    <member name="M:Nemerle.Peg.RuleDefinition.get_ResultType" />
    <member name="P:Nemerle.Peg.RuleDefinition.ResultType" />
    <member name="M:Nemerle.Peg.RuleDefinition.get_Attributes" />
    <member name="P:Nemerle.Peg.RuleDefinition.Attributes" />
    <member name="M:Nemerle.Peg.RuleDefinition.get_Rule" />
    <member name="P:Nemerle.Peg.RuleDefinition.Rule" />
    <member name="M:Nemerle.Peg.RuleDefinition.#ctor(System.Int32,Nemerle.Peg.NameRef,Nemerle.Peg.RuleDefinitionType,Nemerle.Core.list{Nemerle.Peg.RuleAttribute},Nemerle.Core.option{Nemerle.Peg.Rule})" />
    <member name="M:Nemerle.Peg.RuleDefinition.#ctor(Nemerle.Compiler.Location,System.Int32,Nemerle.Peg.NameRef,Nemerle.Peg.RuleDefinitionType,Nemerle.Core.list{Nemerle.Peg.RuleAttribute},Nemerle.Core.option{Nemerle.Peg.Rule})" />
    <member name="T:Nemerle.Peg.RuleType" />
    <member name="M:Nemerle.Peg.RuleType.ToString" />
    <member name="M:Nemerle.Peg.RuleType.ToFixedType(Nemerle.Compiler.ManagerClass)" />
    <member name="M:Nemerle.Peg.RuleType.Equals(Nemerle.Peg.RuleType)" />
    <member name="M:Nemerle.Peg.RuleType.Equals(Nemerle.Peg.RuleType,Nemerle.Builtins.Function{Nemerle.Compiler.FixedType,Nemerle.Compiler.FixedType,System.Boolean})" />
    <member name="M:Nemerle.Peg.RuleType.Equals(System.Object)" />
    <member name="M:Nemerle.Peg.RuleType._N_GetVariantCode" />
    <member name="M:Nemerle.Peg.RuleType._N_GetVariantCodeSafe(Nemerle.Peg.RuleType)" />
    <member name="M:Nemerle.Peg.RuleType._N_GetVariantCodeObject(System.Object)" />
    <member name="M:Nemerle.Peg.RuleType.#ctor" />
    <member name="M:Nemerle.Peg.RuleType.#ctor(Nemerle.Compiler.Location)" />
    <member name="T:Nemerle.Peg.RuleType.List" />
    <member name="T:Nemerle.Peg.RuleType.Option" />
    <member name="T:Nemerle.Peg.RuleType.Tuple" />
    <member name="T:Nemerle.Peg.RuleType.NType" />
    <member name="T:Nemerle.Peg.RuleType.Chars" />
    <member name="T:Nemerle.Peg.RuleType.None" />
    <member name="T:Nemerle.Peg.RuleType.Void" />
    <member name="T:Nemerle.Peg.AstUtils.ValidateAstMacro" />
    <member name="M:Nemerle.Peg.AstUtils.ValidateAstMacro._N_getFirstTypeFromPattern_20682(Nemerle.Peg.AstUtils.ValidateAstMacro._N_closureOf_Run_20669,Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="M:Nemerle.Peg.AstUtils.ValidateAstMacro.#ctor" />
    <member name="F:Nemerle.Peg.AstUtils.ValidateAstMacro.my_usage" />
    <member name="F:Nemerle.Peg.AstUtils.ValidateAstMacro.keywords" />
    <member name="M:Nemerle.Peg.AstUtils.ValidateAstMacro.#cctor" />
    <member name="M:Nemerle.Peg.AstUtils.ValidateAstMacro.get_Location" />
    <member name="P:Nemerle.Peg.AstUtils.ValidateAstMacro.Location" />
    <member name="M:Nemerle.Peg.AstUtils.ValidateAstMacro.get_IsInherited" />
    <member name="P:Nemerle.Peg.AstUtils.ValidateAstMacro.IsInherited" />
    <member name="M:Nemerle.Peg.AstUtils.ValidateAstMacro.get_Keywords" />
    <member name="P:Nemerle.Peg.AstUtils.ValidateAstMacro.Keywords" />
    <member name="M:Nemerle.Peg.AstUtils.ValidateAstMacro.GetName" />
    <member name="M:Nemerle.Peg.AstUtils.ValidateAstMacro.get_Name" />
    <member name="P:Nemerle.Peg.AstUtils.ValidateAstMacro.Name" />
    <member name="M:Nemerle.Peg.AstUtils.ValidateAstMacro.get_Namespace" />
    <member name="P:Nemerle.Peg.AstUtils.ValidateAstMacro.Namespace" />
    <member name="M:Nemerle.Peg.AstUtils.ValidateAstMacro.GetNamespace" />
    <member name="M:Nemerle.Peg.AstUtils.ValidateAstMacro.get_Usage" />
    <member name="P:Nemerle.Peg.AstUtils.ValidateAstMacro.Usage" />
    <member name="M:Nemerle.Peg.AstUtils.ValidateAstMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Peg.AstUtils.ValidateAstMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Peg.AstUtils.ValidateAstMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Peg.AstUtils.ValidateAstMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Peg.AstUtils.ValidateAstMacro.SyntaxExtension" />
    <member name="T:Nemerle.Peg.RangeSets" />
    <member name="F:Nemerle.Peg.RangeSets._rangeSetTable" />
    <member name="M:Nemerle.Peg.RangeSets.#cctor" />
    <member name="M:Nemerle.Peg.RangeSets.GetRangeSetByName(System.String)" />
    <member name="T:Nemerle.Peg.Util">
      <summary>
        <para>Description of Util.
 </para>
      </summary>

</member>
    <member name="M:Nemerle.Peg.Util.GraphWalk``2(System.Collections.Generic.IEnumerable{``0},Nemerle.Builtins.Function{``0,Nemerle.Builtins.Function{``0,``1},``1},Nemerle.Builtins.Function{``0,``1})" />
    <member name="T:Nemerle.Peg.Internal.EvalLocationStartMacro" />
    <member name="M:Nemerle.Peg.Internal.EvalLocationStartMacro.#ctor" />
    <member name="F:Nemerle.Peg.Internal.EvalLocationStartMacro.my_usage" />
    <member name="F:Nemerle.Peg.Internal.EvalLocationStartMacro.keywords" />
    <member name="M:Nemerle.Peg.Internal.EvalLocationStartMacro.#cctor" />
    <member name="M:Nemerle.Peg.Internal.EvalLocationStartMacro.get_Location" />
    <member name="P:Nemerle.Peg.Internal.EvalLocationStartMacro.Location" />
    <member name="M:Nemerle.Peg.Internal.EvalLocationStartMacro.get_IsInherited" />
    <member name="P:Nemerle.Peg.Internal.EvalLocationStartMacro.IsInherited" />
    <member name="M:Nemerle.Peg.Internal.EvalLocationStartMacro.get_Keywords" />
    <member name="P:Nemerle.Peg.Internal.EvalLocationStartMacro.Keywords" />
    <member name="M:Nemerle.Peg.Internal.EvalLocationStartMacro.GetName" />
    <member name="M:Nemerle.Peg.Internal.EvalLocationStartMacro.get_Name" />
    <member name="P:Nemerle.Peg.Internal.EvalLocationStartMacro.Name" />
    <member name="M:Nemerle.Peg.Internal.EvalLocationStartMacro.get_Namespace" />
    <member name="P:Nemerle.Peg.Internal.EvalLocationStartMacro.Namespace" />
    <member name="M:Nemerle.Peg.Internal.EvalLocationStartMacro.GetNamespace" />
    <member name="M:Nemerle.Peg.Internal.EvalLocationStartMacro.get_Usage" />
    <member name="P:Nemerle.Peg.Internal.EvalLocationStartMacro.Usage" />
    <member name="M:Nemerle.Peg.Internal.EvalLocationStartMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Peg.Internal.EvalLocationStartMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Peg.Internal.EvalLocationStartMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Peg.Internal.EvalLocationStartMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Peg.Internal.EvalLocationStartMacro.SyntaxExtension" />
    <member name="T:Nemerle.Peg.Internal.EvalLocationEndMacro" />
    <member name="M:Nemerle.Peg.Internal.EvalLocationEndMacro.#ctor" />
    <member name="F:Nemerle.Peg.Internal.EvalLocationEndMacro.my_usage" />
    <member name="F:Nemerle.Peg.Internal.EvalLocationEndMacro.keywords" />
    <member name="M:Nemerle.Peg.Internal.EvalLocationEndMacro.#cctor" />
    <member name="M:Nemerle.Peg.Internal.EvalLocationEndMacro.get_Location" />
    <member name="P:Nemerle.Peg.Internal.EvalLocationEndMacro.Location" />
    <member name="M:Nemerle.Peg.Internal.EvalLocationEndMacro.get_IsInherited" />
    <member name="P:Nemerle.Peg.Internal.EvalLocationEndMacro.IsInherited" />
    <member name="M:Nemerle.Peg.Internal.EvalLocationEndMacro.get_Keywords" />
    <member name="P:Nemerle.Peg.Internal.EvalLocationEndMacro.Keywords" />
    <member name="M:Nemerle.Peg.Internal.EvalLocationEndMacro.GetName" />
    <member name="M:Nemerle.Peg.Internal.EvalLocationEndMacro.get_Name" />
    <member name="P:Nemerle.Peg.Internal.EvalLocationEndMacro.Name" />
    <member name="M:Nemerle.Peg.Internal.EvalLocationEndMacro.get_Namespace" />
    <member name="P:Nemerle.Peg.Internal.EvalLocationEndMacro.Namespace" />
    <member name="M:Nemerle.Peg.Internal.EvalLocationEndMacro.GetNamespace" />
    <member name="M:Nemerle.Peg.Internal.EvalLocationEndMacro.get_Usage" />
    <member name="P:Nemerle.Peg.Internal.EvalLocationEndMacro.Usage" />
    <member name="M:Nemerle.Peg.Internal.EvalLocationEndMacro.get_IsTailRecursionTransparent" />
    <member name="P:Nemerle.Peg.Internal.EvalLocationEndMacro.IsTailRecursionTransparent" />
    <member name="M:Nemerle.Peg.Internal.EvalLocationEndMacro.CallTransform(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Peg.Internal.EvalLocationEndMacro.Run(Nemerle.Compiler.Typer,Nemerle.Core.list{Nemerle.Compiler.Parsetree.SyntaxElement})" />
    <member name="M:Nemerle.Peg.Internal.EvalLocationEndMacro.SyntaxExtension" />
    <member name="T:Nemerle.Peg.Internal.EvalLocationXImpl" />
    <member name="M:Nemerle.Peg.Internal.EvalLocationXImpl._N_makeResult_21082(Nemerle.Peg.Internal.EvalLocationXImpl._N_closureOf_EvalLocation_21066,Nemerle.Compiler.Typedtree.TExpr)" />
    <member name="M:Nemerle.Peg.Internal.EvalLocationXImpl.EvalLocation(Nemerle.Compiler.Typer,Nemerle.Compiler.Parsetree.Splicable,Nemerle.Compiler.Parsetree.PExpr,Nemerle.Compiler.Parsetree.PExpr)" />
    <member name="T:Nemerle.Peg.GrammarCompiler" />
    <member name="M:Nemerle.Peg.GrammarCompiler._N_isPublicRule_21991(Nemerle.Peg.RuleDefinition)" />
    <member name="M:Nemerle.Peg.GrammarCompiler._N_error_21667(Nemerle.Peg.GrammarCompiler._N_closureOf_foreach_loop_21622,Nemerle.Compiler.Location,System.String)" />
    <member name="M:Nemerle.Peg.GrammarCompiler._N_foreach_loop_21616(Nemerle.Peg.GrammarCompiler._N_closureOf_GetHandlerMethods_21578,Nemerle.Core.list{Nemerle.Peg.RuleDefinition})" />
    <member name="M:Nemerle.Peg.GrammarCompiler._N_getMethod_21405(Nemerle.Peg.GrammarCompiler._N_closureOf_GetScopeMethods_21385,System.String,Nemerle.Builtins.Function{Nemerle.Compiler.Parsetree.ClassMember.Function,System.Boolean})" />
    <member name="F:Nemerle.Peg.GrammarCompiler._N_is_cached_6512" />
    <member name="F:Nemerle.Peg.GrammarCompiler._N_cached_value_6511" />
    <member name="F:Nemerle.Peg.GrammarCompiler._N_cache_6508" />
    <member name="F:Nemerle.Peg.GrammarCompiler._N_is_cached_6481" />
    <member name="F:Nemerle.Peg.GrammarCompiler._N_cached_value_6480" />
    <member name="F:Nemerle.Peg.GrammarCompiler._calledRules" />
    <member name="F:Nemerle.Peg.GrammarCompiler._rulesToCall" />
    <member name="M:Nemerle.Peg.GrammarCompiler.CallRule(Nemerle.Peg.NameRef,System.Boolean)" />
    <member name="F:Nemerle.Peg.GrammarCompiler._typer" />
    <member name="F:Nemerle.Peg.GrammarCompiler._tb" />
    <member name="F:Nemerle.Peg.GrammarCompiler._isDebug" />
    <member name="F:Nemerle.Peg.GrammarCompiler._typedGrammar" />
    <member name="F:Nemerle.Peg.GrammarCompiler._untypedGrammar" />
    <member name="M:Nemerle.Peg.GrammarCompiler.#ctor(Nemerle.Peg.Grammar,Nemerle.Compiler.Typer,Nemerle.Compiler.TypeBuilder)" />
    <member name="M:Nemerle.Peg.GrammarCompiler.get_IsDebug" />
    <member name="P:Nemerle.Peg.GrammarCompiler.IsDebug" />
    <member name="M:Nemerle.Peg.GrammarCompiler.get_IsRelease" />
    <member name="P:Nemerle.Peg.GrammarCompiler.IsRelease" />
    <member name="M:Nemerle.Peg.GrammarCompiler.get_Optimization" />
    <member name="P:Nemerle.Peg.GrammarCompiler.Optimization" />
    <member name="M:Nemerle.Peg.GrammarCompiler.DecorateRuleName(System.String)" />
    <member name="F:Nemerle.Peg.GrammarCompiler.ScopeBeginSufix" />
    <member name="F:Nemerle.Peg.GrammarCompiler.ScopeEndSufix" />
    <member name="M:Nemerle.Peg.GrammarCompiler.GetAllScopeMethods" />
    <member name="M:Nemerle.Peg.GrammarCompiler.GetScopeMethods(System.String)" />
    <member name="F:Nemerle.Peg.GrammarCompiler._definedMemoize" />
    <member name="M:Nemerle.Peg.GrammarCompiler.DefineMemoize(Nemerle.Peg.NameRef,Nemerle.Compiler.FixedType)" />
    <member name="M:Nemerle.Peg.GrammarCompiler.GetHandlerMethods" />
    <member name="M:Nemerle.Peg.GrammarCompiler.DefineParseMethods" />
    <member name="M:Nemerle.Peg.GrammarCompiler.DefineResetMemoization" />
    <member name="M:Nemerle.Peg.GrammarCompiler.DefineResetMaxRollbackPos" />
    <member name="M:Nemerle.Peg.GrammarCompiler.DefineAllMethods" />
    <member name="M:Nemerle.Peg.GrammarCompiler.DefineGetRuleName" />
    <member name="M:Nemerle.Peg.GrammarCompiler.DefineGetMaxRollbackPos" />
    <member name="M:Nemerle.Peg.GrammarCompiler.CompileGrammar" />
    <member name="M:Nemerle.Peg.GrammarCompiler.get_Typer" />
    <member name="P:Nemerle.Peg.GrammarCompiler.Typer" />
    <member name="M:Nemerle.Peg.GrammarCompiler.get_TypedGrammar" />
    <member name="P:Nemerle.Peg.GrammarCompiler.TypedGrammar" />
    <member name="M:Nemerle.Peg.GrammarCompiler.get_UntypedGrammar" />
    <member name="P:Nemerle.Peg.GrammarCompiler.UntypedGrammar" />
    <member name="T:Nemerle.Peg.GrammarCompiler.MemoizeNames" />
    <member name="T:Nemerle.Peg.RuleCompiler" />
    <member name="M:Nemerle.Peg.RuleCompiler._N_generate_23436(Nemerle.Peg.RuleCompiler._N_closureOf_CompileRuleChars_23428,Nemerle.Core.list{Nemerle.Peg.RangeSet})" />
    <member name="M:Nemerle.Peg.RuleCompiler._N_generate_23351(Nemerle.Peg.RuleCompiler._N_closureOf_CompileRuleChoice_23341,Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Peg.RuleCompiler._N_label_23200(Nemerle.Peg.RuleCompiler._N_closureOf_CompileRuleFsm_23177,System.Int32)" />
    <member name="M:Nemerle.Peg.RuleCompiler._N_goto_23193(Nemerle.Peg.RuleCompiler._N_closureOf_CompileRuleFsm_23177,System.Int32)" />
    <member name="M:Nemerle.Peg.RuleCompiler._N_generateNoResult_22865(Nemerle.Peg.RuleCompiler._N_closureOf_CompileRuleSequence_22818,Nemerle.Core.list{Nemerle.Peg.Rule})" />
    <member name="M:Nemerle.Peg.RuleCompiler._N_generate_22826(Nemerle.Peg.RuleCompiler._N_closureOf_CompileRuleSequence_22818,Nemerle.Core.list{Nemerle.Peg.Rule},Nemerle.Core.list{System.String})" />
    <member name="M:Nemerle.Peg.RuleCompiler._N_updateFollow_22708(Nemerle.Peg.RuleCompiler._N_closureOf__FirstAndFollow_22641,Nemerle.Peg.Rule,Nemerle.Collections.Set{Nemerle.Peg.NameRef})" />
    <member name="M:Nemerle.Peg.RuleCompiler._N_loop_22682(Nemerle.Peg.RuleCompiler._N_closureOf_getFirst_22657,Nemerle.Peg.RuleCompiler._N_closureOf__FirstAndFollow_22641,Nemerle.Core.list{Nemerle.Peg.Rule})" />
    <member name="M:Nemerle.Peg.RuleCompiler._N_getFirst_22651(Nemerle.Peg.RuleCompiler._N_closureOf__FirstAndFollow_22641,Nemerle.Peg.Rule)" />
    <member name="M:Nemerle.Peg.RuleCompiler._N_gen_22524(Nemerle.Peg.RuleCompiler._N_closureOf_makeCond_22476,Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr.Call})" />
    <member name="M:Nemerle.Peg.RuleCompiler._N_makeCond_22471(Nemerle.Peg.RangeSet)" />
    <member name="M:Nemerle.Peg.RuleCompiler._N_rec_22459(Nemerle.Peg.RuleCompiler._N_closureOf_TestCharConditionCode_22444,System.Int32,System.Int32)" />
    <member name="M:Nemerle.Peg.RuleCompiler._N_newVar_22214(Nemerle.Peg.RuleCompiler._N_closureOf_MakeVariablesForRule_22206)" />
    <member name="M:Nemerle.Peg.RuleCompiler.CompileRule(Nemerle.Peg.Rule,Nemerle.Core.list{System.String})" />
    <member name="M:Nemerle.Peg.RuleCompiler.CompileRule" />
    <member name="M:Nemerle.Peg.RuleCompiler.PrepandExprs(Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr},Nemerle.Compiler.Parsetree.PExpr.Sequence)" />
    <member name="M:Nemerle.Peg.RuleCompiler.DefVars(Nemerle.Core.list{System.String},Nemerle.Compiler.Parsetree.PExpr.Sequence)" />
    <member name="F:Nemerle.Peg.RuleCompiler._varCount" />
    <member name="M:Nemerle.Peg.RuleCompiler.MakeVariablesForRule(Nemerle.Peg.Rule)" />
    <member name="M:Nemerle.Peg.RuleCompiler.MakeSubruleCode(Nemerle.Core.list{System.String},Nemerle.Peg.Rule,Nemerle.Builtins.Function{Nemerle.Compiler.Parsetree.PExpr,Nemerle.Compiler.Parsetree.PExpr},Nemerle.Builtins.Function{Nemerle.Compiler.Parsetree.PExpr,Nemerle.Core.list{Nemerle.Compiler.Parsetree.PExpr},Nemerle.Compiler.Parsetree.PExpr},Nemerle.Builtins.Function{Nemerle.Compiler.Parsetree.PExpr,Nemerle.Compiler.Parsetree.PExpr})" />
    <member name="M:Nemerle.Peg.RuleCompiler.MakeListCode(Nemerle.Core.list{System.String},Nemerle.Peg.Rule)" />
    <member name="F:Nemerle.Peg.RuleCompiler._pegLocatedType" />
    <member name="F:Nemerle.Peg.RuleCompiler._grammarCompiller" />
    <member name="F:Nemerle.Peg.RuleCompiler._ruleToCompile" />
    <member name="F:Nemerle.Peg.RuleCompiler._useResult" />
    <member name="M:Nemerle.Peg.RuleCompiler.#ctor(Nemerle.Peg.GrammarCompiler,Nemerle.Peg.RuleDefinition,System.Boolean)" />
    <member name="M:Nemerle.Peg.RuleCompiler.TestCharConditionCode(Nemerle.Peg.RangeSet)" />
    <member name="M:Nemerle.Peg.RuleCompiler._FirstAndFollow(Nemerle.Peg.Grammar)" />
    <member name="M:Nemerle.Peg.RuleCompiler.CompileRuleSequence(Nemerle.Peg.Rule.Sequence,Nemerle.Core.list{System.String})" />
    <member name="M:Nemerle.Peg.RuleCompiler.CompileRuleScope(Nemerle.Peg.Rule.Scope,Nemerle.Core.list{System.String})" />
    <member name="M:Nemerle.Peg.RuleCompiler.CompileRuleRepeatMinMax(Nemerle.Peg.Rule.RepeatMinMax,Nemerle.Core.list{System.String})" />
    <member name="M:Nemerle.Peg.RuleCompiler.CompileRuleRepeatMin(Nemerle.Peg.Rule.RepeatMin,Nemerle.Core.list{System.String})" />
    <member name="M:Nemerle.Peg.RuleCompiler.CompileRuleNot(Nemerle.Peg.Rule.Not)" />
    <member name="M:Nemerle.Peg.RuleCompiler.CompileRuleFsm(Nemerle.Peg.Rule.Fsm)" />
    <member name="M:Nemerle.Peg.RuleCompiler.CompileRuleCut(Nemerle.Peg.Rule.Cut,Nemerle.Core.list{System.String})" />
    <member name="M:Nemerle.Peg.RuleCompiler.CompileRuleChoice(Nemerle.Peg.Rule.Choice,Nemerle.Core.list{System.String})" />
    <member name="M:Nemerle.Peg.RuleCompiler.CompileRuleChars(Nemerle.Peg.Rule.Chars)" />
    <member name="M:Nemerle.Peg.RuleCompiler.CompileRuleCapture(Nemerle.Peg.Rule.Capture,Nemerle.Core.list{System.String})" />
    <member name="M:Nemerle.Peg.RuleCompiler.CompileRuleCall(Nemerle.Peg.Rule.Call,Nemerle.Core.list{System.String})" />
    <member name="M:Nemerle.Peg.RuleCompiler.CompileRuleAnd(Nemerle.Peg.Rule.And)" />
    <member name="T:_N_MacroContexts" />
    <member name="M:_N_MacroContexts.#cctor" />
    <member name="F:_N_MacroContexts.serialized" />
    <member name="F:_N_MacroContexts.contexts" />
    <member name="F:_N_MacroContexts.last_manager" />
    <member name="M:_N_MacroContexts.Get(System.Int32,Nemerle.Compiler.ManagerClass)" />
    <member name="M:_N_MacroContexts.Clear" />
  </members>
</doc>